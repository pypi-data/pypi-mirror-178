[tool.poetry]
name = "metaDMG"
version = "0.38.0"
description = "metaDMG: Estimating ancient damage in (meta)genomic DNA rapidly"
authors = ["Christian Michelsen <christianmichelsen@gmail.com>"]
license = "MIT"
readme = "README.md"
# homepage = "https://pendulum.eustace.io"
repository = "https://github.com/metaDMG/metaDMG/"
packages = [{ include = "metaDMG", from = "src" }]


# INSTALL ALL IN POETRY
# poetry env use /opt/homebrew/Caskroom/mambaforge/base/envs/metaDMG-tk/bin/python
# poetry install --extras all --with dev,lint,docs
# activate

[tool.poetry.dependencies]
python = ">=3.9,<3.11" # 3.11 due to numba
typer = {version = "^0.6.1", extras = ["all"]}
PyYAML = "^6.0"
pandas = "^1.5.0"
scipy = "^1.9.1"
pyarrow = "^9.0.0"
logger-tt = "^1.7.0"
psutil = "^5.9.2"
natsort = "^8.2.0"

# scipy = { version = "^1.7.3", python = ">=3.9,<3.11" }

# Fit related packages: poetry install --extras fit
iminuit = {version = "^2.17.0", optional = true}
numpyro = {version = "^0.10.1", optional = true}
joblib = {version = "^1.2.0", optional = true}
numba = {version = "^0.56.2", optional = true}
flatbuffers = {version = "^22.9.24", optional = true}

# Viz related packages: poetry install --extras viz
matplotlib = {version = "^3.6.0", optional = true}
plotly = {version = "^5.10.0", optional = true}
dash = {version = "^2.6.2", optional = true, extras = ["diskcache"]}
dash-bootstrap-components = {version = "^1.2.1", optional = true}
orjson = {version = "^3.8.0", optional = true}
tqdm = {version = "^4.64.1", optional = true}

# GUI related packages: poetry install --extras gui
customtkinter = {version = "^4.6.3", optional = true}

[tool.poetry.group.dev] # poetry install --with dev,lint
optional = true
[tool.poetry.group.dev.dependencies]
pylint = "^2.12.2"
flake8 = "^4.0.1"
ipykernel = "^6.8.0"
nbformat = "^5.1.3"
notebook = "^6.4.8"
MarkupSafe = "^2.1.1"
ipywidgets = "^7.7.0"

[tool.poetry.group.lint] # poetry install --with dev,lint
optional = true
[tool.poetry.group.lint.dependencies]
black = "^22.1.0"
isort = "^5.10.1"
pre-commit = "^2.17.0"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
coverage = "^6.3.2"

[tool.poetry.group.release]
optional = true
[tool.poetry.group.release.dependencies]
python-semantic-release = "^7.24.0"

[tool.poetry.group.docs] #  poetry install --with docs
optional = true
[tool.poetry.group.docs.dependencies]
Sphinx = "^4.4.0"
sphinx-autodoc-typehints = "^1.17.0"
sphinx-book-theme = "^0.2.0"
sphinx-click = "^3.1.0"
sphinx-copybutton = "^0.5.0"
sphinxcontrib-mermaid = "^0.7.1"
sphinxcontrib-napoleon = "^0.7"
autodocsumm = "^0.2.7"
MarkupSafe = "^2.1.1"
myst-parser = "^0.17.0"


[tool.poetry.extras]

fit = [ # poetry install --extras fit
    "logger-tt",
    "iminuit",
    "numpyro",
    "joblib",
    "psutil",
    "numba",
    "flatbuffers",
]

viz = [ # poetry install --extras fit
    "matplotlib",
    "plotly",
    "dash",
    "dash-bootstrap-components",
    "orjson",
    "tqdm",
]


gui = [ # poetry install --extras gui
    "customtkinter",
]


all = [ # poetry install --extras all
    "logger-tt",
    "iminuit",
    "numpyro",
    "joblib",
    "psutil",
    "numba",
    "flatbuffers",
    "matplotlib",
    "plotly",
    "dash",
    "dash-bootstrap-components",
    "orjson",
    "tqdm",
    "customtkinter",
]



[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
metaDMG = "metaDMG.cli.cli:cli_main"

[tool.semantic_release]
version_variable = "pyproject.toml:version" # version location
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "poetry build"  # build dists
dist_path = "dist/"                         # where to put dists
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
major_on_zero = false                       # keeps the major version at 0

[tool.isort]
profile = "black"
include_trailing_comma = true
lines_after_imports = 2
use_parentheses = true
known_first_party = "metaDMG"
skip = ["docs/source/conf.py"]


# poetry install --with dev,lint,test,release,docs --extras fit --extras viz
