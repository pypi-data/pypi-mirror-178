[
  "test_api.py::test_data",
  "test_api.py::test_fullname",
  "test_api.py::test_goal_ATOMClassifier",
  "test_api.py::test_goal_ATOMRegressor",
  "test_api.py::test_load",
  "test_api.py::test_load_already_contains_data",
  "test_api.py::test_load_data_when_no_atom",
  "test_api.py::test_load_data_with_no_atom",
  "test_api.py::test_load_ignores_n_rows_parameter",
  "test_api.py::test_name",
  "test_api.py::test_needs_scaling",
  "test_api.py::test_transform_data",
  "test_api.py::test_transform_data_multiple_branches",
  "test_atom.py::test_add_basetransformer_params_are_attached",
  "test_atom.py::test_add_complete_dataset",
  "test_atom.py::test_add_default_X_is_used",
  "test_atom.py::test_add_depending_models",
  "test_atom.py::test_add_derivative_columns_keep_position",
  "test_atom.py::test_add_invalid_columns_only_y",
  "test_atom.py::test_add_keep_column_names",
  "test_atom.py::test_add_no_transformer",
  "test_atom.py::test_add_params_to_method",
  "test_atom.py::test_add_pipeline",
  "test_atom.py::test_add_reset_index",
  "test_atom.py::test_add_sets_are_kept_equal",
  "test_atom.py::test_add_sparse_matrices",
  "test_atom.py::test_add_train_only",
  "test_atom.py::test_add_transformer_only_y",
  "test_atom.py::test_add_transformer_y_ignore_X",
  "test_atom.py::test_apply",
  "test_atom.py::test_assign_existing_metric",
  "test_atom.py::test_automl",
  "test_atom.py::test_automl_binary_classification",
  "test_atom.py::test_automl_custom_objective",
  "test_atom.py::test_automl_invalid_objective",
  "test_atom.py::test_balance",
  "test_atom.py::test_balance_wrong_task",
  "test_atom.py::test_branch_change",
  "test_atom.py::test_branch_empty",
  "test_atom.py::test_branch_existing_name",
  "test_atom.py::test_branch_from_valid",
  "test_atom.py::test_branch_model_acronym",
  "test_atom.py::test_branch_new",
  "test_atom.py::test_branch_same",
  "test_atom.py::test_branch_unknown_parent",
  "test_atom.py::test_categorical",
  "test_atom.py::test_classes",
  "test_atom.py::test_clean",
  "test_atom.py::test_custom_params_to_method",
  "test_atom.py::test_default_scoring",
  "test_atom.py::test_default_solver_from_task",
  "test_atom.py::test_default_solver_univariate",
  "test_atom.py::test_discretize",
  "test_atom.py::test_distribution[1-None]",
  "test_atom.py::test_distribution[1-distributions2]",
  "test_atom.py::test_distribution[1-norm]",
  "test_atom.py::test_distribution[None-None]",
  "test_atom.py::test_distribution[None-distributions2]",
  "test_atom.py::test_distribution[None-norm]",
  "test_atom.py::test_distribution[x0-None]",
  "test_atom.py::test_distribution[x0-distributions2]",
  "test_atom.py::test_distribution[x0-norm]",
  "test_atom.py::test_duplicates",
  "test_atom.py::test_encode",
  "test_atom.py::test_errors_are_removed",
  "test_atom.py::test_errors_are_updated",
  "test_atom.py::test_export_pipeline_empty",
  "test_atom.py::test_export_pipeline_invalid_model",
  "test_atom.py::test_export_pipeline_memory",
  "test_atom.py::test_export_pipeline_same_transformer",
  "test_atom.py::test_export_pipeline_scaler",
  "test_atom.py::test_export_pipeline_verbose",
  "test_atom.py::test_feature_extraction",
  "test_atom.py::test_feature_generation",
  "test_atom.py::test_feature_generation_attributes",
  "test_atom.py::test_feature_grouping",
  "test_atom.py::test_feature_selection_attrs",
  "test_atom.py::test_impute",
  "test_atom.py::test_inverse_transform",
  "test_atom.py::test_iter",
  "test_atom.py::test_models_and_metric_are_updated",
  "test_atom.py::test_models_are_replaced",
  "test_atom.py::test_n_categorical",
  "test_atom.py::test_n_classes",
  "test_atom.py::test_n_nans",
  "test_atom.py::test_n_numerical",
  "test_atom.py::test_n_outliers",
  "test_atom.py::test_nans",
  "test_atom.py::test_non_numerical_target_column",
  "test_atom.py::test_normalize",
  "test_atom.py::test_numerical",
  "test_atom.py::test_outliers",
  "test_atom.py::test_prune",
  "test_atom.py::test_raise_length_mismatch",
  "test_atom.py::test_raise_one_target_value",
  "test_atom.py::test_raises_invalid_metric_consecutive_runs",
  "test_atom.py::test_report",
  "test_atom.py::test_repr",
  "test_atom.py::test_reset",
  "test_atom.py::test_returned_column_already_exists",
  "test_atom.py::test_save_data",
  "test_atom.py::test_scale",
  "test_atom.py::test_scaled",
  "test_atom.py::test_scaling_is_passed",
  "test_atom.py::test_shrink_dense2sparse",
  "test_atom.py::test_shrink_dtypes_excluded",
  "test_atom.py::test_shrink_dtypes_unchanged",
  "test_atom.py::test_shrink_exclude_columns",
  "test_atom.py::test_shrink_int2uint",
  "test_atom.py::test_shrink_obj2cat",
  "test_atom.py::test_shrink_sparse_arrays",
  "test_atom.py::test_stats_mixed_sparse_dense",
  "test_atom.py::test_status",
  "test_atom.py::test_task_assignment",
  "test_atom.py::test_textclean",
  "test_atom.py::test_textnormalize",
  "test_atom.py::test_tokenize",
  "test_atom.py::test_trainer_becomes_atom",
  "test_atom.py::test_transform",
  "test_atom.py::test_transform_not_train_only",
  "test_atom.py::test_transform_verbose_invalid",
  "test_atom.py::test_vectorize",
  "test_basemodel.py::test_X_holdout_property",
  "test_basemodel.py::test_X_property",
  "test_basemodel.py::test_X_test_property",
  "test_basemodel.py::test_X_train_property",
  "test_basemodel.py::test_all_base_estimators[ET]",
  "test_basemodel.py::test_all_base_estimators[GBRT]",
  "test_basemodel.py::test_all_base_estimators[GP]",
  "test_basemodel.py::test_all_base_estimators[RF]",
  "test_basemodel.py::test_all_base_estimators[est4]",
  "test_basemodel.py::test_all_prediction_properties[holdout]",
  "test_basemodel.py::test_all_prediction_properties[test]",
  "test_basemodel.py::test_all_prediction_properties[train]",
  "test_basemodel.py::test_best_params_property",
  "test_basemodel.py::test_best_trial_property",
  "test_basemodel.py::test_best_trial_property_invalid",
  "test_basemodel.py::test_bo_with_no_hyperparameters",
  "test_basemodel.py::test_bo_with_pipeline",
  "test_basemodel.py::test_bootstrap_attribute_types",
  "test_basemodel.py::test_bootstrap_property",
  "test_basemodel.py::test_bootstrapping",
  "test_basemodel.py::test_calibrate",
  "test_basemodel.py::test_calibrate_clear",
  "test_basemodel.py::test_calibrate_invalid_task",
  "test_basemodel.py::test_calibrate_new_mlflow_run",
  "test_basemodel.py::test_calibrate_prefit",
  "test_basemodel.py::test_clear",
  "test_basemodel.py::test_contains",
  "test_basemodel.py::test_continued_bootstrapping",
  "test_basemodel.py::test_continued_hyperparameter_tuning",
  "test_basemodel.py::test_create_app",
  "test_basemodel.py::test_create_dashboard_classification[both]",
  "test_basemodel.py::test_create_dashboard_classification[holdout]",
  "test_basemodel.py::test_create_dashboard_classification[train]",
  "test_basemodel.py::test_create_dashboard_dataset_no_holdout",
  "test_basemodel.py::test_create_dashboard_invalid_dataset",
  "test_basemodel.py::test_create_dashboard_regression",
  "test_basemodel.py::test_cross_validate",
  "test_basemodel.py::test_custom_dimensions_include_and_excluded",
  "test_basemodel.py::test_custom_dimensions_is_dim",
  "test_basemodel.py::test_custom_dimensions_is_name",
  "test_basemodel.py::test_custom_dimensions_is_name_excluded",
  "test_basemodel.py::test_custom_dimensions_name_is_invalid",
  "test_basemodel.py::test_custom_distributions_by_name",
  "test_basemodel.py::test_custom_distributions_by_name_excluded",
  "test_basemodel.py::test_custom_distributions_include_and_excluded",
  "test_basemodel.py::test_custom_distributions_is_dist",
  "test_basemodel.py::test_custom_distributions_name_is_invalid",
  "test_basemodel.py::test_cv_larger_1",
  "test_basemodel.py::test_data_is_scaled",
  "test_basemodel.py::test_dataset_property",
  "test_basemodel.py::test_default_parameter_not_in_dimension",
  "test_basemodel.py::test_default_parameters",
  "test_basemodel.py::test_delete",
  "test_basemodel.py::test_early_stopping[CatB]",
  "test_basemodel.py::test_early_stopping[LGB]",
  "test_basemodel.py::test_early_stopping[XGB]",
  "test_basemodel.py::test_empty_study",
  "test_basemodel.py::test_est_params_invalid_param",
  "test_basemodel.py::test_est_params_removed_from_bo",
  "test_basemodel.py::test_est_params_removed_from_ht",
  "test_basemodel.py::test_est_params_unknown_param_fit",
  "test_basemodel.py::test_estimator_property",
  "test_basemodel.py::test_evals_property",
  "test_basemodel.py::test_evaluate_custom_metric",
  "test_basemodel.py::test_evaluate_invalid_dataset",
  "test_basemodel.py::test_evaluate_invalid_threshold",
  "test_basemodel.py::test_evaluate_metric_None[holdout]",
  "test_basemodel.py::test_evaluate_metric_None[test]",
  "test_basemodel.py::test_evaluate_metric_None[train]",
  "test_basemodel.py::test_evaluate_no_holdout",
  "test_basemodel.py::test_evaluate_sample_weight",
  "test_basemodel.py::test_evaluate_threshold",
  "test_basemodel.py::test_export_pipeline",
  "test_basemodel.py::test_export_pipeline_memory",
  "test_basemodel.py::test_feature_importance_property",
  "test_basemodel.py::test_full_train",
  "test_basemodel.py::test_full_train_clear",
  "test_basemodel.py::test_full_train_holdout",
  "test_basemodel.py::test_full_train_new_mlflow_run",
  "test_basemodel.py::test_full_train_no_holdout",
  "test_basemodel.py::test_getattr",
  "test_basemodel.py::test_getitem",
  "test_basemodel.py::test_holdout_property",
  "test_basemodel.py::test_ht_params_invalid_key",
  "test_basemodel.py::test_ht_with_no_hyperparameters",
  "test_basemodel.py::test_ht_with_pipeline",
  "test_basemodel.py::test_hyperparameter_tuning_with_no_hyperparameters",
  "test_basemodel.py::test_hyperparameter_tuning_with_plot",
  "test_basemodel.py::test_invalid_method",
  "test_basemodel.py::test_inverse_transform",
  "test_basemodel.py::test_metrics_property_multi_metric",
  "test_basemodel.py::test_metrics_property_single_metric",
  "test_basemodel.py::test_multi_objective_optimization",
  "test_basemodel.py::test_n_trials_lower_n_initial_points",
  "test_basemodel.py::test_name_property",
  "test_basemodel.py::test_name_property_already_exists",
  "test_basemodel.py::test_name_property_to_mlflow",
  "test_basemodel.py::test_nested_runs_to_mlflow",
  "test_basemodel.py::test_pipeline_property",
  "test_basemodel.py::test_prediction_decision_function_type[holdout]",
  "test_basemodel.py::test_prediction_decision_function_type[test]",
  "test_basemodel.py::test_prediction_decision_function_type[train]",
  "test_basemodel.py::test_predictions_from_index",
  "test_basemodel.py::test_predictions_from_new_data",
  "test_basemodel.py::test_rename",
  "test_basemodel.py::test_rename_to_mlflow",
  "test_basemodel.py::test_repr",
  "test_basemodel.py::test_results_property",
  "test_basemodel.py::test_run_log_data_to_mlflow",
  "test_basemodel.py::test_run_log_evals_to_mlflow",
  "test_basemodel.py::test_run_log_models_to_mlflow",
  "test_basemodel.py::test_run_log_params_to_mlflow",
  "test_basemodel.py::test_run_log_pipeline_to_mlflow",
  "test_basemodel.py::test_run_set_tags_to_mlflow",
  "test_basemodel.py::test_sample_weight_fit",
  "test_basemodel.py::test_save_estimator",
  "test_basemodel.py::test_scaler",
  "test_basemodel.py::test_score_bootstrap_property",
  "test_basemodel.py::test_score_custom_metric",
  "test_basemodel.py::test_score_ht_property",
  "test_basemodel.py::test_score_metric_is_None",
  "test_basemodel.py::test_score_regression",
  "test_basemodel.py::test_score_train_test_holdout_properties",
  "test_basemodel.py::test_score_with_sample_weight",
  "test_basemodel.py::test_skip_duplicate_calls",
  "test_basemodel.py::test_study_property",
  "test_basemodel.py::test_test_property",
  "test_basemodel.py::test_time_bootstrap_property",
  "test_basemodel.py::test_time_fit_property",
  "test_basemodel.py::test_time_ht_property",
  "test_basemodel.py::test_time_property",
  "test_basemodel.py::test_train_property",
  "test_basemodel.py::test_transform",
  "test_basemodel.py::test_transformations_first",
  "test_basemodel.py::test_trials_property",
  "test_basemodel.py::test_verbose_is_1[1]",
  "test_basemodel.py::test_verbose_is_1[3]",
  "test_basemodel.py::test_xgb_optimizes_score",
  "test_basemodel.py::test_y_holdout_property",
  "test_basemodel.py::test_y_property",
  "test_basemodel.py::test_y_train_property",
  "test_baserunner.py::test_available_models",
  "test_baserunner.py::test_branch_deleter",
  "test_baserunner.py::test_branch_property",
  "test_baserunner.py::test_class_weights_invalid_dataset",
  "test_baserunner.py::test_clear",
  "test_baserunner.py::test_contains",
  "test_baserunner.py::test_delattr_branch",
  "test_baserunner.py::test_delattr_invalid",
  "test_baserunner.py::test_delattr_models",
  "test_baserunner.py::test_delattr_normal",
  "test_baserunner.py::test_delete_default",
  "test_baserunner.py::test_delete_models_is_sequence",
  "test_baserunner.py::test_delete_models_is_str",
  "test_baserunner.py::test_errors_property",
  "test_baserunner.py::test_evaluate[ap]",
  "test_baserunner.py::test_evaluate[f1]",
  "test_baserunner.py::test_evaluate[roc_auc_ovo]",
  "test_baserunner.py::test_export_pipeline_empty",
  "test_baserunner.py::test_export_pipeline_memory",
  "test_baserunner.py::test_export_pipeline_same_transformer",
  "test_baserunner.py::test_export_pipeline_verbose",
  "test_baserunner.py::test_export_pipeline_with_model",
  "test_baserunner.py::test_get_class_weights[dataset]",
  "test_baserunner.py::test_get_class_weights[test]",
  "test_baserunner.py::test_get_class_weights[train]",
  "test_baserunner.py::test_get_class_weights_regression",
  "test_baserunner.py::test_get_columns_by_index",
  "test_baserunner.py::test_get_columns_by_int",
  "test_baserunner.py::test_get_columns_by_regex",
  "test_baserunner.py::test_get_columns_by_slice",
  "test_baserunner.py::test_get_columns_by_str",
  "test_baserunner.py::test_get_columns_by_type",
  "test_baserunner.py::test_get_columns_exclude",
  "test_baserunner.py::test_get_columns_include_or_exclude",
  "test_baserunner.py::test_get_columns_invalid_type",
  "test_baserunner.py::test_get_columns_is_None",
  "test_baserunner.py::test_get_columns_none_selected",
  "test_baserunner.py::test_get_columns_remove_duplicates",
  "test_baserunner.py::test_get_columns_return_inc_exc",
  "test_baserunner.py::test_get_models_by_int",
  "test_baserunner.py::test_get_models_by_model",
  "test_baserunner.py::test_get_models_by_regex",
  "test_baserunner.py::test_get_models_by_slice",
  "test_baserunner.py::test_get_models_by_str",
  "test_baserunner.py::test_get_models_exclude",
  "test_baserunner.py::test_get_models_include_or_exclude",
  "test_baserunner.py::test_get_models_invalid_type",
  "test_baserunner.py::test_get_models_is_None",
  "test_baserunner.py::test_get_models_remove_duplicates",
  "test_baserunner.py::test_get_models_remove_ensembles",
  "test_baserunner.py::test_get_models_winner",
  "test_baserunner.py::test_get_models_wrong_type",
  "test_baserunner.py::test_get_og_branches",
  "test_baserunner.py::test_get_rows_by_exact_match",
  "test_baserunner.py::test_get_rows_by_int",
  "test_baserunner.py::test_get_rows_by_name",
  "test_baserunner.py::test_get_rows_by_position",
  "test_baserunner.py::test_get_rows_by_str",
  "test_baserunner.py::test_get_rows_include_or_exclude",
  "test_baserunner.py::test_get_rows_invalid_type",
  "test_baserunner.py::test_get_rows_is_None",
  "test_baserunner.py::test_get_rows_is_slice",
  "test_baserunner.py::test_get_rows_none_selected",
  "test_baserunner.py::test_getattr_attr_from_branch",
  "test_baserunner.py::test_getattr_branch",
  "test_baserunner.py::test_getattr_column",
  "test_baserunner.py::test_getattr_dataframe",
  "test_baserunner.py::test_getattr_invalid",
  "test_baserunner.py::test_getattr_model",
  "test_baserunner.py::test_getitem_int",
  "test_baserunner.py::test_getitem_invalid_str",
  "test_baserunner.py::test_getitem_invalid_type",
  "test_baserunner.py::test_getitem_list",
  "test_baserunner.py::test_getitem_no_dataset",
  "test_baserunner.py::test_getitem_str_from_branch",
  "test_baserunner.py::test_getitem_str_from_column",
  "test_baserunner.py::test_getitem_str_from_model",
  "test_baserunner.py::test_getstate_and_setstate",
  "test_baserunner.py::test_len",
  "test_baserunner.py::test_merge",
  "test_baserunner.py::test_merge_adopts_metrics",
  "test_baserunner.py::test_merge_different_dataset",
  "test_baserunner.py::test_merge_different_metrics",
  "test_baserunner.py::test_merge_invalid_class",
  "test_baserunner.py::test_merge_with_suffix",
  "test_baserunner.py::test_metric_property",
  "test_baserunner.py::test_metric_property_no_run",
  "test_baserunner.py::test_models_property",
  "test_baserunner.py::test_models_property_no_run",
  "test_baserunner.py::test_results_property",
  "test_baserunner.py::test_results_property_dropna",
  "test_baserunner.py::test_results_property_successive_halving",
  "test_baserunner.py::test_results_property_train_sizing",
  "test_baserunner.py::test_setattr_normal",
  "test_baserunner.py::test_setattr_to_branch",
  "test_baserunner.py::test_stacking",
  "test_baserunner.py::test_stacking_custom_models",
  "test_baserunner.py::test_stacking_different_name",
  "test_baserunner.py::test_stacking_invalid_models",
  "test_baserunner.py::test_stacking_invalid_name",
  "test_baserunner.py::test_stacking_invalid_predefined_final_estimator",
  "test_baserunner.py::test_stacking_models_from_branch",
  "test_baserunner.py::test_stacking_non_ensembles",
  "test_baserunner.py::test_stacking_predefined_final_estimator",
  "test_baserunner.py::test_stacking_unknown_predefined_final_estimator",
  "test_baserunner.py::test_voting",
  "test_baserunner.py::test_voting_invalid_models",
  "test_baserunner.py::test_voting_invalid_name",
  "test_baserunner.py::test_winner_deleter",
  "test_baserunner.py::test_winner_property",
  "test_baserunner.py::test_winners_property",
  "test_basetrainer.py::test_all_callbacks",
  "test_basetrainer.py::test_all_classification_models",
  "test_basetrainer.py::test_all_models_failed",
  "test_basetrainer.py::test_all_regression_models",
  "test_basetrainer.py::test_base_estimator_default",
  "test_basetrainer.py::test_base_estimator_invalid",
  "test_basetrainer.py::test_callback[callback0]",
  "test_basetrainer.py::test_callback[callback1]",
  "test_basetrainer.py::test_close_plot_after_error",
  "test_basetrainer.py::test_custom_dimensions_for_bo",
  "test_basetrainer.py::test_custom_dimensions_is_all",
  "test_basetrainer.py::test_custom_dimensions_is_list",
  "test_basetrainer.py::test_custom_dimensions_per_model",
  "test_basetrainer.py::test_custom_distributions",
  "test_basetrainer.py::test_custom_distributions_is_all",
  "test_basetrainer.py::test_custom_distributions_per_model",
  "test_basetrainer.py::test_custom_tags",
  "test_basetrainer.py::test_default_metric",
  "test_basetrainer.py::test_duplicate_models",
  "test_basetrainer.py::test_error_handling",
  "test_basetrainer.py::test_est_params_all_models",
  "test_basetrainer.py::test_est_params_default_method",
  "test_basetrainer.py::test_est_params_for_fit",
  "test_basetrainer.py::test_est_params_for_fit[CatB]",
  "test_basetrainer.py::test_est_params_for_fit[LGB]",
  "test_basetrainer.py::test_est_params_for_fit[XGB]",
  "test_basetrainer.py::test_est_params_per_model",
  "test_basetrainer.py::test_est_params_unknown_param",
  "test_basetrainer.py::test_est_params_unknown_param_fit",
  "test_basetrainer.py::test_ht_params_invalid_key",
  "test_basetrainer.py::test_ht_params_kwargs",
  "test_basetrainer.py::test_inc_and_exc",
  "test_basetrainer.py::test_invalid_cv",
  "test_basetrainer.py::test_invalid_delta_x",
  "test_basetrainer.py::test_invalid_delta_y",
  "test_basetrainer.py::test_invalid_early_stopping",
  "test_basetrainer.py::test_invalid_max_time",
  "test_basetrainer.py::test_invalid_model_name",
  "test_basetrainer.py::test_invalid_sequence_parameter",
  "test_basetrainer.py::test_metric_is_acronym",
  "test_basetrainer.py::test_metric_is_custom",
  "test_basetrainer.py::test_metric_is_custom[fn]",
  "test_basetrainer.py::test_metric_is_custom[fnr]",
  "test_basetrainer.py::test_metric_is_custom[fp]",
  "test_basetrainer.py::test_metric_is_custom[fpr]",
  "test_basetrainer.py::test_metric_is_custom[tn]",
  "test_basetrainer.py::test_metric_is_custom[tnr]",
  "test_basetrainer.py::test_metric_is_custom[tp]",
  "test_basetrainer.py::test_metric_is_custom[tpr]",
  "test_basetrainer.py::test_metric_is_function",
  "test_basetrainer.py::test_metric_is_invalid_scorer_name",
  "test_basetrainer.py::test_metric_is_scorer",
  "test_basetrainer.py::test_metric_is_sklearn_scorer",
  "test_basetrainer.py::test_mlflow_run_is_started",
  "test_basetrainer.py::test_model_is_custom",
  "test_basetrainer.py::test_model_is_predefined",
  "test_basetrainer.py::test_models_get_right_name",
  "test_basetrainer.py::test_multiple_metrics_with_add",
  "test_basetrainer.py::test_multiple_models_with_add",
  "test_basetrainer.py::test_multiple_same_models",
  "test_basetrainer.py::test_n_bootstrap_parameter_is_below_zero",
  "test_basetrainer.py::test_n_initial_points_parameter_is_zero",
  "test_basetrainer.py::test_n_trials_parameter_is_invalid[-2]",
  "test_basetrainer.py::test_n_trials_parameter_is_invalid[1]",
  "test_basetrainer.py::test_one_model_failed",
  "test_basetrainer.py::test_only_task_models",
  "test_basetrainer.py::test_optimizer_kwargs",
  "test_basetrainer.py::test_package_not_installed",
  "test_basetrainer.py::test_plot",
  "test_basetrainer.py::test_reruns",
  "test_basetrainer.py::test_sequence_parameters",
  "test_basetrainer.py::test_sequence_parameters_invalid_length",
  "test_basetransformer.py::test_4_data_provided",
  "test_basetransformer.py::test_6_data_provided",
  "test_basetransformer.py::test_X_is_None_with_int",
  "test_basetransformer.py::test_X_is_None_with_str",
  "test_basetransformer.py::test_crash_with_logger",
  "test_basetransformer.py::test_data_already_set",
  "test_basetransformer.py::test_dataset_is_shuffled",
  "test_basetransformer.py::test_device_id_int",
  "test_basetransformer.py::test_device_id_invalid",
  "test_basetransformer.py::test_device_id_no_value",
  "test_basetransformer.py::test_device_parameter",
  "test_basetransformer.py::test_empty_data_arrays",
  "test_basetransformer.py::test_engine_parameter_cuml_with_cpu",
  "test_basetransformer.py::test_engine_parameter_invalid",
  "test_basetransformer.py::test_engine_parameter_no_cuml",
  "test_basetransformer.py::test_engine_parameter_sklearnex",
  "test_basetransformer.py::test_equal_index",
  "test_basetransformer.py::test_equal_length",
  "test_basetransformer.py::test_experiment_creation",
  "test_basetransformer.py::test_file_is_saved",
  "test_basetransformer.py::test_get_est_class_from_default",
  "test_basetransformer.py::test_get_est_class_from_engine",
  "test_basetransformer.py::test_gpu_fails",
  "test_basetransformer.py::test_gpu_force",
  "test_basetransformer.py::test_gpu_setter",
  "test_basetransformer.py::test_holdout_is_shuffled",
  "test_basetransformer.py::test_index_is_False",
  "test_basetransformer.py::test_index_is_int",
  "test_basetransformer.py::test_index_is_int_invalid",
  "test_basetransformer.py::test_index_is_sequence_has_data_sets",
  "test_basetransformer.py::test_index_is_sequence_has_data_sets_invalid_length",
  "test_basetransformer.py::test_index_is_sequence_no_data_sets",
  "test_basetransformer.py::test_index_is_sequence_no_data_sets_invalid_length",
  "test_basetransformer.py::test_index_is_str",
  "test_basetransformer.py::test_index_is_str_invalid",
  "test_basetransformer.py::test_index_is_target",
  "test_basetransformer.py::test_index_is_true",
  "test_basetransformer.py::test_input_X_and_y_None",
  "test_basetransformer.py::test_input_data_in_atom",
  "test_basetransformer.py::test_input_data_in_training",
  "test_basetransformer.py::test_input_invalid_holdout",
  "test_basetransformer.py::test_input_is_2_tuples",
  "test_basetransformer.py::test_input_is_3_tuples",
  "test_basetransformer.py::test_input_is_X",
  "test_basetransformer.py::test_input_is_X_with_holdout[0.1]",
  "test_basetransformer.py::test_input_is_X_with_holdout[40]",
  "test_basetransformer.py::test_input_is_X_with_parameter_y",
  "test_basetransformer.py::test_input_is_X_y",
  "test_basetransformer.py::test_input_is_train_test",
  "test_basetransformer.py::test_input_is_train_test_holdout",
  "test_basetransformer.py::test_input_is_train_test_with_holdout[False]",
  "test_basetransformer.py::test_input_is_train_test_with_holdout[True]",
  "test_basetransformer.py::test_input_is_train_test_with_parameter_y",
  "test_basetransformer.py::test_int_columns_to_str",
  "test_basetransformer.py::test_invalid_input",
  "test_basetransformer.py::test_length_dataset",
  "test_basetransformer.py::test_log",
  "test_basetransformer.py::test_log_invalid_severity",
  "test_basetransformer.py::test_logger_creator",
  "test_basetransformer.py::test_merger_to_dataset",
  "test_basetransformer.py::test_n_jobs_invalid[-1000]",
  "test_basetransformer.py::test_n_jobs_invalid[0]",
  "test_basetransformer.py::test_n_jobs_maximum_cores",
  "test_basetransformer.py::test_n_rows_X_y_frac[0.7]",
  "test_basetransformer.py::test_n_rows_X_y_frac[0.8]",
  "test_basetransformer.py::test_n_rows_X_y_frac[1]",
  "test_basetransformer.py::test_n_rows_X_y_int",
  "test_basetransformer.py::test_n_rows_too_large",
  "test_basetransformer.py::test_n_rows_train_test_frac",
  "test_basetransformer.py::test_n_rows_train_test_int",
  "test_basetransformer.py::test_negative_n_jobs",
  "test_basetransformer.py::test_no_shuffle_X_y",
  "test_basetransformer.py::test_no_shuffle_train_test",
  "test_basetransformer.py::test_random_state_setter",
  "test_basetransformer.py::test_reset_index",
  "test_basetransformer.py::test_save_data_false",
  "test_basetransformer.py::test_sparse_matrices_2_tuples",
  "test_basetransformer.py::test_sparse_matrices_X_y",
  "test_basetransformer.py::test_stratify_invalid_column_int",
  "test_basetransformer.py::test_stratify_invalid_column_str",
  "test_basetransformer.py::test_stratify_is_False",
  "test_basetransformer.py::test_stratify_options[-1]",
  "test_basetransformer.py::test_stratify_options[False]",
  "test_basetransformer.py::test_stratify_options[True]",
  "test_basetransformer.py::test_stratify_options[stratify3]",
  "test_basetransformer.py::test_stratify_options[stratify4]",
  "test_basetransformer.py::test_stratify_options[target]",
  "test_basetransformer.py::test_target_is_int",
  "test_basetransformer.py::test_target_is_none",
  "test_basetransformer.py::test_target_is_string",
  "test_basetransformer.py::test_target_not_in_dataset",
  "test_basetransformer.py::test_test_size_fraction",
  "test_basetransformer.py::test_test_size_int",
  "test_basetransformer.py::test_test_size_parameter[-2]",
  "test_basetransformer.py::test_test_size_parameter[0]",
  "test_basetransformer.py::test_test_size_parameter[1000]",
  "test_basetransformer.py::test_text_to_corpus",
  "test_basetransformer.py::test_to_pandas",
  "test_basetransformer.py::test_unequal_columns_holdout",
  "test_basetransformer.py::test_unequal_columns_train_test",
  "test_basetransformer.py::test_verbose_parameter[-2]",
  "test_basetransformer.py::test_verbose_parameter[3]",
  "test_basetransformer.py::test_warnings_parameter_bool",
  "test_basetransformer.py::test_warnings_parameter_invalid_str",
  "test_basetransformer.py::test_warnings_parameter_str",
  "test_basetransformer.py::test_y_is1dimensional",
  "test_branch.py::test_X_property",
  "test_branch.py::test_X_setter",
  "test_branch.py::test_X_test_property",
  "test_branch.py::test_X_test_setter",
  "test_branch.py::test_X_train_property",
  "test_branch.py::test_X_train_setter",
  "test_branch.py::test_attrs_are_passed",
  "test_branch.py::test_branch_delete_current",
  "test_branch.py::test_branch_delete_depending_models",
  "test_branch.py::test_branch_delete_last_branch",
  "test_branch.py::test_branch_delete_not_current",
  "test_branch.py::test_columns_property",
  "test_branch.py::test_data_properties_to_df",
  "test_branch.py::test_data_properties_to_series",
  "test_branch.py::test_dataset_property",
  "test_branch.py::test_dataset_setter",
  "test_branch.py::test_delete_current",
  "test_branch.py::test_delete_depending_models",
  "test_branch.py::test_delete_last_branch",
  "test_branch.py::test_delete_last_og_branch",
  "test_branch.py::test_delete_not_current",
  "test_branch.py::test_features_property",
  "test_branch.py::test_holdout_property",
  "test_branch.py::test_init_attrs_are_passed",
  "test_branch.py::test_init_pipeline_to_empty_series",
  "test_branch.py::test_last_og_branch",
  "test_branch.py::test_n_columns_property",
  "test_branch.py::test_n_features_property",
  "test_branch.py::test_name_empty_name",
  "test_branch.py::test_name_existing_name",
  "test_branch.py::test_name_method",
  "test_branch.py::test_name_model_name",
  "test_branch.py::test_pipeline_to_empty_series",
  "test_branch.py::test_rename_empty_name",
  "test_branch.py::test_rename_existing_name",
  "test_branch.py::test_rename_method",
  "test_branch.py::test_rename_model_name",
  "test_branch.py::test_repr",
  "test_branch.py::test_setter_error_unequal_column_names",
  "test_branch.py::test_setter_error_unequal_columns",
  "test_branch.py::test_setter_error_unequal_index",
  "test_branch.py::test_setter_error_unequal_rows",
  "test_branch.py::test_setter_error_unequal_target_names",
  "test_branch.py::test_setter_with_models",
  "test_branch.py::test_shape_property",
  "test_branch.py::test_status_method",
  "test_branch.py::test_target_property",
  "test_branch.py::test_test_property",
  "test_branch.py::test_test_setter",
  "test_branch.py::test_train_property",
  "test_branch.py::test_train_setter",
  "test_branch.py::test_y_property",
  "test_branch.py::test_y_setter",
  "test_branch.py::test_y_test_property",
  "test_branch.py::test_y_test_setter",
  "test_branch.py::test_y_train_property",
  "test_branch.py::test_y_train_setter",
  "test_data_cleaning.py::test_all_encoder_types[HelmertEncoder]",
  "test_data_cleaning.py::test_all_encoder_types[SumEncoder]",
  "test_data_cleaning.py::test_all_rows_too_many_nans",
  "test_data_cleaning.py::test_balancer_attach_attribute",
  "test_data_cleaning.py::test_balancer_custom_estimator",
  "test_data_cleaning.py::test_balancer_kwargs",
  "test_data_cleaning.py::test_balancer_strategy_invalid_estimator",
  "test_data_cleaning.py::test_balancer_strategy_unknown_str",
  "test_data_cleaning.py::test_balancers[allknn]",
  "test_data_cleaning.py::test_balancers[smoteenn]",
  "test_data_cleaning.py::test_balancers[svmsmote]",
  "test_data_cleaning.py::test_balancers[tomeklinks]",
  "test_data_cleaning.py::test_bins_is_dict",
  "test_data_cleaning.py::test_bins_is_sequence",
  "test_data_cleaning.py::test_categorical_cols_are_ignored",
  "test_data_cleaning.py::test_cleaner_drop_duplicate_rows",
  "test_data_cleaning.py::test_cleaner_drop_invalid_column_list_types",
  "test_data_cleaning.py::test_cleaner_drop_invalid_column_type",
  "test_data_cleaning.py::test_cleaner_drop_missing_target",
  "test_data_cleaning.py::test_cleaner_inverse_transform",
  "test_data_cleaning.py::test_cleaner_label_encoder_target_column",
  "test_data_cleaning.py::test_cleaner_strip_categorical_features",
  "test_data_cleaning.py::test_cleaner_strip_ignores_nan",
  "test_data_cleaning.py::test_cleaner_target_mapping_binary",
  "test_data_cleaning.py::test_cleaner_target_mapping_multiclass",
  "test_data_cleaning.py::test_cols_too_many_nans[0.5]",
  "test_data_cleaning.py::test_cols_too_many_nans[20]",
  "test_data_cleaning.py::test_combinations_numerical_index",
  "test_data_cleaning.py::test_combinations_string_index",
  "test_data_cleaning.py::test_custom_strategy",
  "test_data_cleaning.py::test_discretizer_strategies[kmeans]",
  "test_data_cleaning.py::test_discretizer_strategies[quantile]",
  "test_data_cleaning.py::test_discretizer_strategies[uniform]",
  "test_data_cleaning.py::test_drop_outlier_in_target",
  "test_data_cleaning.py::test_drop_pruner",
  "test_data_cleaning.py::test_encoder_check_is_fitted",
  "test_data_cleaning.py::test_encoder_custom_estimator",
  "test_data_cleaning.py::test_encoder_strategy_invalid_estimator",
  "test_data_cleaning.py::test_fit_transform",
  "test_data_cleaning.py::test_fit_transform_no_fit",
  "test_data_cleaning.py::test_imputer_check_is_fitted",
  "test_data_cleaning.py::test_imputing_all_missing_values_categorical[?]",
  "test_data_cleaning.py::test_imputing_all_missing_values_categorical[NA]",
  "test_data_cleaning.py::test_imputing_all_missing_values_categorical[NaN]",
  "test_data_cleaning.py::test_imputing_all_missing_values_categorical[]",
  "test_data_cleaning.py::test_imputing_all_missing_values_categorical[inf]",
  "test_data_cleaning.py::test_imputing_all_missing_values_categorical[nan]",
  "test_data_cleaning.py::test_imputing_all_missing_values_numeric[-inf]",
  "test_data_cleaning.py::test_imputing_all_missing_values_numeric[99]",
  "test_data_cleaning.py::test_imputing_all_missing_values_numeric[None]",
  "test_data_cleaning.py::test_imputing_all_missing_values_numeric[inf]",
  "test_data_cleaning.py::test_imputing_all_missing_values_numeric[nan]",
  "test_data_cleaning.py::test_imputing_non_numeric_drop",
  "test_data_cleaning.py::test_imputing_non_numeric_most_frequent",
  "test_data_cleaning.py::test_imputing_non_numeric_string",
  "test_data_cleaning.py::test_imputing_numeric_drop",
  "test_data_cleaning.py::test_imputing_numeric_knn",
  "test_data_cleaning.py::test_imputing_numeric_mean",
  "test_data_cleaning.py::test_imputing_numeric_median",
  "test_data_cleaning.py::test_imputing_numeric_most_frequent",
  "test_data_cleaning.py::test_imputing_numeric_number",
  "test_data_cleaning.py::test_invalid_bins_custom_strategy",
  "test_data_cleaning.py::test_invalid_bins_missing_column",
  "test_data_cleaning.py::test_invalid_bins_to_column_length",
  "test_data_cleaning.py::test_invalid_length_labels",
  "test_data_cleaning.py::test_invalid_max_nan_cols",
  "test_data_cleaning.py::test_invalid_max_nan_rows",
  "test_data_cleaning.py::test_invalid_max_sigma_parameter",
  "test_data_cleaning.py::test_invalid_method_for_non_z_score",
  "test_data_cleaning.py::test_invalid_method_parameter",
  "test_data_cleaning.py::test_invalid_strategy_parameter",
  "test_data_cleaning.py::test_kwargs_multiple_strategies",
  "test_data_cleaning.py::test_kwargs_one_strategy",
  "test_data_cleaning.py::test_kwargs_parameter_pruner",
  "test_data_cleaning.py::test_kwargs_parameters",
  "test_data_cleaning.py::test_labels_custom_strategy",
  "test_data_cleaning.py::test_labels_non_custom_strategy",
  "test_data_cleaning.py::test_max_onehot_parameter",
  "test_data_cleaning.py::test_max_sigma_functionality",
  "test_data_cleaning.py::test_min_max_pruner",
  "test_data_cleaning.py::test_missing_values_are_propagated",
  "test_data_cleaning.py::test_multiple_strategies",
  "test_data_cleaning.py::test_normalizer_all_strategies[boxcox]",
  "test_data_cleaning.py::test_normalizer_all_strategies[quantile]",
  "test_data_cleaning.py::test_normalizer_all_strategies[yeojohnson]",
  "test_data_cleaning.py::test_normalizer_attach_attribute",
  "test_data_cleaning.py::test_normalizer_categorical_columns",
  "test_data_cleaning.py::test_normalizer_check_is_fitted",
  "test_data_cleaning.py::test_normalizer_ignores_categorical_columns",
  "test_data_cleaning.py::test_normalizer_invalid_strategy",
  "test_data_cleaning.py::test_normalizer_inverse_categorical_columns",
  "test_data_cleaning.py::test_normalizer_inverse_transform",
  "test_data_cleaning.py::test_normalizer_kwargs",
  "test_data_cleaning.py::test_normalizer_y_is_ignored",
  "test_data_cleaning.py::test_one_hot_encoder",
  "test_data_cleaning.py::test_ordinal_encoder",
  "test_data_cleaning.py::test_ordinal_features",
  "test_data_cleaning.py::test_oversampling_numerical_index",
  "test_data_cleaning.py::test_oversampling_string_index",
  "test_data_cleaning.py::test_pruner_attach_attribute",
  "test_data_cleaning.py::test_pruner_strategies[dbscan]",
  "test_data_cleaning.py::test_pruner_strategies[ee]",
  "test_data_cleaning.py::test_pruner_strategies[iforest]",
  "test_data_cleaning.py::test_pruner_strategies[lof]",
  "test_data_cleaning.py::test_pruner_strategies[svm]",
  "test_data_cleaning.py::test_rare_to_value[0.3]",
  "test_data_cleaning.py::test_rare_to_value[3]",
  "test_data_cleaning.py::test_rare_to_value_parameter",
  "test_data_cleaning.py::test_rows_too_many_nans[0.5]",
  "test_data_cleaning.py::test_rows_too_many_nans[5]",
  "test_data_cleaning.py::test_scaler_all_strategies[maxabs]",
  "test_data_cleaning.py::test_scaler_all_strategies[minmax]",
  "test_data_cleaning.py::test_scaler_all_strategies[robust]",
  "test_data_cleaning.py::test_scaler_all_strategies[standard]",
  "test_data_cleaning.py::test_scaler_attach_attribute",
  "test_data_cleaning.py::test_scaler_categorical_and_binary_columns",
  "test_data_cleaning.py::test_scaler_categorical_columns",
  "test_data_cleaning.py::test_scaler_check_is_fitted",
  "test_data_cleaning.py::test_scaler_ignores_categorical_columns",
  "test_data_cleaning.py::test_scaler_invalid_strategy",
  "test_data_cleaning.py::test_scaler_inverse_categorical_columns",
  "test_data_cleaning.py::test_scaler_inverse_transform",
  "test_data_cleaning.py::test_scaler_kwargs",
  "test_data_cleaning.py::test_scaler_return_scaled_dataset",
  "test_data_cleaning.py::test_scaler_y_is_ignored",
  "test_data_cleaning.py::test_strat_num_parameter",
  "test_data_cleaning.py::test_strategy_parameter_discretizer",
  "test_data_cleaning.py::test_strategy_parameter_encoder",
  "test_data_cleaning.py::test_strategy_with_encoder_at_end",
  "test_data_cleaning.py::test_undersampling_keeps_indices",
  "test_data_cleaning.py::test_unknown_classes_are_imputed",
  "test_data_cleaning.py::test_value_pruner",
  "test_ensembles.py::test_stacking_classifier",
  "test_ensembles.py::test_stacking_regressor",
  "test_ensembles.py::test_voting_initialized_fitted",
  "test_ensembles.py::test_voting_invalid_type",
  "test_ensembles.py::test_voting_invalid_weights",
  "test_ensembles.py::test_voting_mixed_fit_and_not",
  "test_ensembles.py::test_voting_multilabel",
  "test_ensembles.py::test_voting_predict[hard]",
  "test_ensembles.py::test_voting_predict[soft]",
  "test_ensembles.py::test_voting_regressor",
  "test_feature_engineering.py::test_RFE_strategy",
  "test_feature_engineering.py::test_advanced_binary_classification_scoring",
  "test_feature_engineering.py::test_advanced_custom_objective_function",
  "test_feature_engineering.py::test_advanced_custom_scoring",
  "test_feature_engineering.py::test_advanced_missing_y_valid",
  "test_feature_engineering.py::test_advanced_multiclass_classification_scoring",
  "test_feature_engineering.py::test_advanced_provided_validation_sets",
  "test_feature_engineering.py::test_advanced_regression_scoring",
  "test_feature_engineering.py::test_all_cyclic_features[fxs0]",
  "test_feature_engineering.py::test_all_cyclic_features[fxs1]",
  "test_feature_engineering.py::test_all_cyclic_features[fxs2]",
  "test_feature_engineering.py::test_all_cyclic_features[fxs3]",
  "test_feature_engineering.py::test_all_cyclic_features[fxs4]",
  "test_feature_engineering.py::test_all_cyclic_features[fxs5]",
  "test_feature_engineering.py::test_all_cyclic_features[fxs6]",
  "test_feature_engineering.py::test_all_cyclic_features[fxs7]",
  "test_feature_engineering.py::test_attribute_genetic_features",
  "test_feature_engineering.py::test_attribute_is_created",
  "test_feature_engineering.py::test_columns_are_kept",
  "test_feature_engineering.py::test_custom_names_and_operators",
  "test_feature_engineering.py::test_datetime_features_are_used",
  "test_feature_engineering.py::test_default_feature_names",
  "test_feature_engineering.py::test_error_y_is_None",
  "test_feature_engineering.py::test_features_are_not_dropped",
  "test_feature_engineering.py::test_genetic_non_improving_features",
  "test_feature_engineering.py::test_goal_attribute",
  "test_feature_engineering.py::test_groups_are_created[float]",
  "test_feature_engineering.py::test_groups_are_created[groups2]",
  "test_feature_engineering.py::test_groups_are_created[groups3]",
  "test_feature_engineering.py::test_groups_are_created[mean.+]",
  "test_feature_engineering.py::test_groups_invalid_int",
  "test_feature_engineering.py::test_groups_invalid_str",
  "test_feature_engineering.py::test_invalid_encoding_type",
  "test_feature_engineering.py::test_invalid_features",
  "test_feature_engineering.py::test_invalid_operator",
  "test_feature_engineering.py::test_kwargs_but_no_strategy",
  "test_feature_engineering.py::test_kwargs_parameter_scoring[pso]",
  "test_feature_engineering.py::test_kwargs_parameter_scoring[rfecv]",
  "test_feature_engineering.py::test_kwargs_parameter_scoring[sfs]",
  "test_feature_engineering.py::test_kwargs_parameter_threshold",
  "test_feature_engineering.py::test_kwargs_parameter_tol",
  "test_feature_engineering.py::test_max_correlation_parameter",
  "test_feature_engineering.py::test_max_repeated_parameter",
  "test_feature_engineering.py::test_max_repeated_smaller_min_repeated",
  "test_feature_engineering.py::test_min_repeated_parameter",
  "test_feature_engineering.py::test_n_features_above_maximum",
  "test_feature_engineering.py::test_n_features_parameter",
  "test_feature_engineering.py::test_n_features_parameter_negative",
  "test_feature_engineering.py::test_operator_not_in_libraries",
  "test_feature_engineering.py::test_operators_parameter",
  "test_feature_engineering.py::test_order_features",
  "test_feature_engineering.py::test_ordinal_features",
  "test_feature_engineering.py::test_pca_components",
  "test_feature_engineering.py::test_pca_sparse_data",
  "test_feature_engineering.py::test_pca_strategy",
  "test_feature_engineering.py::test_raise_unknown_solver_univariate",
  "test_feature_engineering.py::test_remove_collinear_with_y",
  "test_feature_engineering.py::test_remove_collinear_without_y",
  "test_feature_engineering.py::test_remove_high_variance[0.1]",
  "test_feature_engineering.py::test_remove_high_variance[2]",
  "test_feature_engineering.py::test_remove_low_variance[0.9]",
  "test_feature_engineering.py::test_remove_low_variance[400]",
  "test_feature_engineering.py::test_rfecv_strategy_before_pipeline_classification",
  "test_feature_engineering.py::test_rfecv_strategy_before_pipeline_regression",
  "test_feature_engineering.py::test_sfm_invalid_solver",
  "test_feature_engineering.py::test_sfm_prefit_invalid_estimator",
  "test_feature_engineering.py::test_sfm_strategy_fitted_solver",
  "test_feature_engineering.py::test_sfm_strategy_not_fitted_solver",
  "test_feature_engineering.py::test_sfm_strategy_not_threshold",
  "test_feature_engineering.py::test_sfs_strategy",
  "test_feature_engineering.py::test_solver_parameter_empty",
  "test_feature_engineering.py::test_solver_parameter_empty_univariate",
  "test_feature_engineering.py::test_solver_parameter_invalid_value",
  "test_feature_engineering.py::test_strategy_parameter",
  "test_feature_engineering.py::test_unequal_groups_names",
  "test_feature_engineering.py::test_univariate_strategy_custom_solver",
  "test_feature_engineering.py::test_unknown_strategy_parameter",
  "test_feature_engineering.py::test_updated_dataset",
  "test_feature_engineering.py::test_wrongly_converted_columns_are_ignored",
  "test_feature_engineering.py::test_wrongly_converted_features_are_ignored",
  "test_models.py::test_CatNB",
  "test_models.py::test_Dummy",
  "test_models.py::test_LR",
  "test_models.py::test_MLP_custom_hidden_layer_sizes",
  "test_models.py::test_MLP_custom_n_layers",
  "test_models.py::test_RNN",
  "test_models.py::test_all_models_binary",
  "test_models.py::test_all_models_multiclass",
  "test_models.py::test_all_models_regression",
  "test_models.py::test_custom_models[RandomForestRegressor]",
  "test_models.py::test_custom_models[model1]",
  "test_models.py::test_models_binary[AdaB]",
  "test_models.py::test_models_binary[BNB]",
  "test_models.py::test_models_binary[Bag]",
  "test_models.py::test_models_binary[CNB]",
  "test_models.py::test_models_binary[CatB]",
  "test_models.py::test_models_binary[Dummy]",
  "test_models.py::test_models_binary[ET]",
  "test_models.py::test_models_binary[ETree]",
  "test_models.py::test_models_binary[GBM]",
  "test_models.py::test_models_binary[GNB]",
  "test_models.py::test_models_binary[GP]",
  "test_models.py::test_models_binary[KNN]",
  "test_models.py::test_models_binary[LDA]",
  "test_models.py::test_models_binary[LGB]",
  "test_models.py::test_models_binary[LR]",
  "test_models.py::test_models_binary[MLP]",
  "test_models.py::test_models_binary[MNB]",
  "test_models.py::test_models_binary[PA]",
  "test_models.py::test_models_binary[Perc]",
  "test_models.py::test_models_binary[QDA]",
  "test_models.py::test_models_binary[RF]",
  "test_models.py::test_models_binary[RNN]",
  "test_models.py::test_models_binary[Ridge]",
  "test_models.py::test_models_binary[SGD]",
  "test_models.py::test_models_binary[SVM]",
  "test_models.py::test_models_binary[Tree]",
  "test_models.py::test_models_binary[XGB]",
  "test_models.py::test_models_binary[hGBM]",
  "test_models.py::test_models_binary[kSVM]",
  "test_models.py::test_models_binary[lSVM]",
  "test_models.py::test_models_cuml",
  "test_models.py::test_models_cuml_classification",
  "test_models.py::test_models_cuml_regression",
  "test_models.py::test_models_multiclass[AdaB]",
  "test_models.py::test_models_multiclass[BNB]",
  "test_models.py::test_models_multiclass[Bag]",
  "test_models.py::test_models_multiclass[CNB]",
  "test_models.py::test_models_multiclass[CatB]",
  "test_models.py::test_models_multiclass[CatNB]",
  "test_models.py::test_models_multiclass[Dummy]",
  "test_models.py::test_models_multiclass[ET]",
  "test_models.py::test_models_multiclass[ETree]",
  "test_models.py::test_models_multiclass[GBM]",
  "test_models.py::test_models_multiclass[GNB]",
  "test_models.py::test_models_multiclass[GP]",
  "test_models.py::test_models_multiclass[KNN]",
  "test_models.py::test_models_multiclass[LDA]",
  "test_models.py::test_models_multiclass[LGB]",
  "test_models.py::test_models_multiclass[LR]",
  "test_models.py::test_models_multiclass[MLP]",
  "test_models.py::test_models_multiclass[MNB]",
  "test_models.py::test_models_multiclass[PA]",
  "test_models.py::test_models_multiclass[Perc]",
  "test_models.py::test_models_multiclass[QDA]",
  "test_models.py::test_models_multiclass[RF]",
  "test_models.py::test_models_multiclass[RNN]",
  "test_models.py::test_models_multiclass[Ridge]",
  "test_models.py::test_models_multiclass[SGD]",
  "test_models.py::test_models_multiclass[SVM]",
  "test_models.py::test_models_multiclass[Tree]",
  "test_models.py::test_models_multiclass[XGB]",
  "test_models.py::test_models_multiclass[hGBM]",
  "test_models.py::test_models_multiclass[kSVM]",
  "test_models.py::test_models_multiclass[lSVM]",
  "test_models.py::test_models_multiclass[model0]",
  "test_models.py::test_models_regression[ARD]",
  "test_models.py::test_models_regression[AdaB]",
  "test_models.py::test_models_regression[BR]",
  "test_models.py::test_models_regression[Bag]",
  "test_models.py::test_models_regression[CatB]",
  "test_models.py::test_models_regression[Dummy]",
  "test_models.py::test_models_regression[EN]",
  "test_models.py::test_models_regression[ET]",
  "test_models.py::test_models_regression[ETree]",
  "test_models.py::test_models_regression[GBM]",
  "test_models.py::test_models_regression[GP]",
  "test_models.py::test_models_regression[Huber]",
  "test_models.py::test_models_regression[KNN]",
  "test_models.py::test_models_regression[LGB]",
  "test_models.py::test_models_regression[Lars]",
  "test_models.py::test_models_regression[Lasso]",
  "test_models.py::test_models_regression[MLP]",
  "test_models.py::test_models_regression[OLS]",
  "test_models.py::test_models_regression[PA]",
  "test_models.py::test_models_regression[RF]",
  "test_models.py::test_models_regression[RNN]",
  "test_models.py::test_models_regression[Ridge]",
  "test_models.py::test_models_regression[SGD]",
  "test_models.py::test_models_regression[SVM]",
  "test_models.py::test_models_regression[Tree]",
  "test_models.py::test_models_regression[XGB]",
  "test_models.py::test_models_regression[hGBM]",
  "test_models.py::test_models_regression[kSVM]",
  "test_models.py::test_models_regression[lSVM]",
  "test_models.py::test_models_sklearnex_classification",
  "test_models.py::test_models_sklearnex_regression",
  "test_models.py::test_pruning_non_sklearn[CatB]",
  "test_models.py::test_pruning_non_sklearn[LGB]",
  "test_models.py::test_pruning_non_sklearn[XGB]",
  "test_models.py::test_stacking",
  "test_models.py::test_stacking_feature_importance",
  "test_models.py::test_stacking_multiple_branches",
  "test_models.py::test_voting",
  "test_models.py::test_voting_feature_importance",
  "test_models.py::test_voting_multiple_branches",
  "test_nlp.py::test_bigrams",
  "test_nlp.py::test_cleaner_tokenized",
  "test_nlp.py::test_corpus_is_not_present",
  "test_nlp.py::test_decode",
  "test_nlp.py::test_drop_emails",
  "test_nlp.py::test_drop_emojis",
  "test_nlp.py::test_drop_empty_tokens",
  "test_nlp.py::test_drop_html",
  "test_nlp.py::test_drop_numbers",
  "test_nlp.py::test_drop_punctuation",
  "test_nlp.py::test_drop_url",
  "test_nlp.py::test_error_sparse_with_dense",
  "test_nlp.py::test_gpu",
  "test_nlp.py::test_hashing",
  "test_nlp.py::test_invalid_strategy",
  "test_nlp.py::test_lemmatization",
  "test_nlp.py::test_lower_case",
  "test_nlp.py::test_no_ngrams",
  "test_nlp.py::test_normalizer_space_separation",
  "test_nlp.py::test_quadgrams",
  "test_nlp.py::test_return_sparse",
  "test_nlp.py::test_sparse_with_dense",
  "test_nlp.py::test_stemming",
  "test_nlp.py::test_stopwords",
  "test_nlp.py::test_stopwords_custom",
  "test_nlp.py::test_strategies[bow]",
  "test_nlp.py::test_strategies[tfidf]",
  "test_nlp.py::test_tokenization",
  "test_nlp.py::test_trigrams",
  "test_nlp.py::test_vectorizer_space_separation",
  "test_pipeline.py::test_decision_function",
  "test_pipeline.py::test_fit",
  "test_pipeline.py::test_fit_transform",
  "test_pipeline.py::test_getattr",
  "test_pipeline.py::test_internal_attrs_are_saved",
  "test_pipeline.py::test_inverse_transform",
  "test_pipeline.py::test_predict",
  "test_pipeline.py::test_predict_log_proba",
  "test_pipeline.py::test_predict_proba",
  "test_pipeline.py::test_score",
  "test_pipeline.py::test_transform",
  "test_pipeline.py::test_transform_only_X_or_y",
  "test_pipeline.py::test_transform_train_only",
  "test_plots.py::test_aesthetics_property",
  "test_plots.py::test_aesthetics_setter",
  "test_plots.py::test_canvas",
  "test_plots.py::test_canvas_too_many_plots",
  "test_plots.py::test_custom_legend_position[center left]",
  "test_plots.py::test_custom_legend_position[center right]",
  "test_plots.py::test_custom_legend_position[center]",
  "test_plots.py::test_custom_legend_position[lower center]",
  "test_plots.py::test_custom_legend_position[lower left]",
  "test_plots.py::test_custom_legend_position[lower right]",
  "test_plots.py::test_custom_legend_position[out]",
  "test_plots.py::test_custom_legend_position[upper center]",
  "test_plots.py::test_custom_legend_position[upper left]",
  "test_plots.py::test_custom_legend_position[upper right]",
  "test_plots.py::test_custom_legend_position_invalid",
  "test_plots.py::test_custom_palette",
  "test_plots.py::test_custom_title_and_legend",
  "test_plots.py::test_figure_is_returned",
  "test_plots.py::test_figure_is_saved",
  "test_plots.py::test_figure_is_saved_canvas",
  "test_plots.py::test_figure_is_saved_html",
  "test_plots.py::test_figure_is_saved_png",
  "test_plots.py::test_figure_is_saved_png_plt",
  "test_plots.py::test_figure_to_mlflow",
  "test_plots.py::test_get_colors",
  "test_plots.py::test_get_dashes",
  "test_plots.py::test_get_hyperparams",
  "test_plots.py::test_get_hyperparams_empty",
  "test_plots.py::test_get_hyperparams_invalid_name",
  "test_plots.py::test_get_marker",
  "test_plots.py::test_get_metric",
  "test_plots.py::test_get_metric_None",
  "test_plots.py::test_get_metric_by_int",
  "test_plots.py::test_get_metric_invalid_int",
  "test_plots.py::test_get_metric_invalid_name",
  "test_plots.py::test_get_metric_max_one",
  "test_plots.py::test_get_metric_multiple",
  "test_plots.py::test_get_metric_time",
  "test_plots.py::test_get_metric_time_invalid",
  "test_plots.py::test_get_set",
  "test_plots.py::test_get_set_invalid",
  "test_plots.py::test_get_set_multiple",
  "test_plots.py::test_get_set_no_holdout",
  "test_plots.py::test_get_set_no_holdout_allowed",
  "test_plots.py::test_get_shapes",
  "test_plots.py::test_get_show",
  "test_plots.py::test_get_show_invalid",
  "test_plots.py::test_get_subclass_max_one",
  "test_plots.py::test_get_target",
  "test_plots.py::test_get_target_int_invalid",
  "test_plots.py::test_get_target_invalid",
  "test_plots.py::test_get_target_str_invalid",
  "test_plots.py::test_invalid_horizontal_spacing",
  "test_plots.py::test_invalid_vertical_spacing",
  "test_plots.py::test_label_fontsize_property",
  "test_plots.py::test_label_fontsize_setter",
  "test_plots.py::test_palette_property",
  "test_plots.py::test_palette_setter",
  "test_plots.py::test_plot_calibration",
  "test_plots.py::test_plot_components[10]",
  "test_plots.py::test_plot_components[None]",
  "test_plots.py::test_plot_confusion_matrix",
  "test_plots.py::test_plot_correlation",
  "test_plots.py::test_plot_det",
  "test_plots.py::test_plot_distribution",
  "test_plots.py::test_plot_distribution[2]",
  "test_plots.py::test_plot_distribution[columns2]",
  "test_plots.py::test_plot_distribution[x0]",
  "test_plots.py::test_plot_edf",
  "test_plots.py::test_plot_errors",
  "test_plots.py::test_plot_evals",
  "test_plots.py::test_plot_feature_importance",
  "test_plots.py::test_plot_gains",
  "test_plots.py::test_plot_hyperparameter_importance",
  "test_plots.py::test_plot_hyperparameters",
  "test_plots.py::test_plot_learning_curve",
  "test_plots.py::test_plot_learning_curve[metric1]",
  "test_plots.py::test_plot_learning_curve[r2]",
  "test_plots.py::test_plot_lift",
  "test_plots.py::test_plot_ngrams[1]",
  "test_plots.py::test_plot_ngrams[2]",
  "test_plots.py::test_plot_ngrams[3]",
  "test_plots.py::test_plot_ngrams[4]",
  "test_plots.py::test_plot_parallel_coordinate",
  "test_plots.py::test_plot_pareto_front",
  "test_plots.py::test_plot_parshap",
  "test_plots.py::test_plot_partial_dependence",
  "test_plots.py::test_plot_partial_dependence_binary",
  "test_plots.py::test_plot_partial_dependence_multiclass[2]",
  "test_plots.py::test_plot_partial_dependence_multiclass[columns0]",
  "test_plots.py::test_plot_partial_dependence_multiclass[columns1]",
  "test_plots.py::test_plot_pca[X0]",
  "test_plots.py::test_plot_pca[X1]",
  "test_plots.py::test_plot_permutation_importance",
  "test_plots.py::test_plot_pipeline",
  "test_plots.py::test_plot_prc",
  "test_plots.py::test_plot_probabilities",
  "test_plots.py::test_plot_qq",
  "test_plots.py::test_plot_relationships",
  "test_plots.py::test_plot_residuals",
  "test_plots.py::test_plot_results[me]",
  "test_plots.py::test_plot_results[metric1]",
  "test_plots.py::test_plot_results_metric[me]",
  "test_plots.py::test_plot_results_metric[metric1]",
  "test_plots.py::test_plot_results_time[time]",
  "test_plots.py::test_plot_results_time[time_bo]",
  "test_plots.py::test_plot_results_time[time_fit]",
  "test_plots.py::test_plot_results_time[time_ht]",
  "test_plots.py::test_plot_rfecv[None]",
  "test_plots.py::test_plot_rfecv[auc]",
  "test_plots.py::test_plot_roc",
  "test_plots.py::test_plot_roc[both]",
  "test_plots.py::test_plot_roc[holdout]",
  "test_plots.py::test_plot_roc[test]",
  "test_plots.py::test_plot_roc[train]",
  "test_plots.py::test_plot_shap_bar",
  "test_plots.py::test_plot_shap_beeswarm",
  "test_plots.py::test_plot_shap_decision",
  "test_plots.py::test_plot_shap_force",
  "test_plots.py::test_plot_shap_heatmap",
  "test_plots.py::test_plot_shap_scatter[-1]",
  "test_plots.py::test_plot_shap_scatter[0]",
  "test_plots.py::test_plot_shap_scatter[mean texture]",
  "test_plots.py::test_plot_shap_waterfall",
  "test_plots.py::test_plot_slice",
  "test_plots.py::test_plot_successive_halving",
  "test_plots.py::test_plot_successive_halving[f1]",
  "test_plots.py::test_plot_successive_halving[metric1]",
  "test_plots.py::test_plot_threshold[auc]",
  "test_plots.py::test_plot_threshold[f1_score]",
  "test_plots.py::test_plot_threshold[metric1]",
  "test_plots.py::test_plot_threshold[precision]",
  "test_plots.py::test_plot_trials",
  "test_plots.py::test_plot_wordcloud",
  "test_plots.py::test_reset_aesthetics",
  "test_plots.py::test_style_property",
  "test_plots.py::test_style_setter",
  "test_plots.py::test_tick_fontsize_property",
  "test_plots.py::test_tick_fontsize_setter",
  "test_plots.py::test_title_fontsize_property",
  "test_plots.py::test_title_fontsize_setter",
  "test_plots.py::test_update_layout",
  "test_training.py::test_goals_successive_halving",
  "test_training.py::test_goals_train_sizing",
  "test_training.py::test_goals_trainers",
  "test_training.py::test_infer_task",
  "test_training.py::test_models_are_restored",
  "test_training.py::test_sh_skip_runs_below_zero",
  "test_training.py::test_sh_skip_runs_too_large",
  "test_training.py::test_ts_different_train_sizes_types",
  "test_training.py::test_ts_int_train_sizes",
  "test_utils.py::test_check_is_fitted_with_pandas",
  "test_utils.py::test_create_acronym",
  "test_utils.py::test_custom_dict_initialization",
  "test_utils.py::test_custom_dict_key_request",
  "test_utils.py::test_custom_dict_manipulations",
  "test_utils.py::test_time_to_string"
]