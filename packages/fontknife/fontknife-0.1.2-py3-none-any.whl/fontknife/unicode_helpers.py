from typing import Tuple, List

from PIL import ImageFont, Image, ImageDraw


REGIONAL_A_CODE = 0x1F1E6
REGIONAL_Z_CODE = 0x1F1FF
REGIONAL_A = "ðŸ‡¦"
REGIONAL_Z = "ðŸ‡¿"

# build regex for this?
COUNTRY_CODES = frozenset((
    'ðŸ‡¦ðŸ‡©', 'ðŸ‡¦ðŸ‡ª', 'ðŸ‡¦ðŸ‡«', 'ðŸ‡¦ðŸ‡¬', 'ðŸ‡¦ðŸ‡±', 'ðŸ‡¦ðŸ‡²', 'ðŸ‡¦ðŸ‡´', 'ðŸ‡¦ðŸ‡·', 'ðŸ‡¦ðŸ‡¹', 'ðŸ‡¦ðŸ‡º', 'ðŸ‡¦ðŸ‡¿',
    'ðŸ‡§ðŸ‡¦', 'ðŸ‡§ðŸ‡§', 'ðŸ‡§ðŸ‡©', 'ðŸ‡§ðŸ‡ª', 'ðŸ‡§ðŸ‡«', 'ðŸ‡§ðŸ‡¬', 'ðŸ‡§ðŸ‡­', 'ðŸ‡§ðŸ‡®', 'ðŸ‡§ðŸ‡¯', 'ðŸ‡§ðŸ‡³', 'ðŸ‡§ðŸ‡´',
    'ðŸ‡§ðŸ‡·', 'ðŸ‡§ðŸ‡¸', 'ðŸ‡§ðŸ‡¹', 'ðŸ‡§ðŸ‡¼', 'ðŸ‡§ðŸ‡¾', 'ðŸ‡§ðŸ‡¿', 'ðŸ‡¨ðŸ‡¦', 'ðŸ‡¨ðŸ‡©', 'ðŸ‡¨ðŸ‡«', 'ðŸ‡¨ðŸ‡­', 'ðŸ‡¨ðŸ‡®',
    'ðŸ‡¨ðŸ‡±', 'ðŸ‡¨ðŸ‡²', 'ðŸ‡¨ðŸ‡³', 'ðŸ‡¨ðŸ‡´', 'ðŸ‡¨ðŸ‡·', 'ðŸ‡¨ðŸ‡º', 'ðŸ‡¨ðŸ‡»', 'ðŸ‡¨ðŸ‡¾', 'ðŸ‡¨ðŸ‡¿', 'ðŸ‡©ðŸ‡ª', 'ðŸ‡©ðŸ‡¯',
    'ðŸ‡©ðŸ‡°', 'ðŸ‡©ðŸ‡²', 'ðŸ‡©ðŸ‡´', 'ðŸ‡©ðŸ‡¿', 'ðŸ‡ªðŸ‡¨', 'ðŸ‡ªðŸ‡ª', 'ðŸ‡ªðŸ‡¬', 'ðŸ‡ªðŸ‡­', 'ðŸ‡ªðŸ‡·', 'ðŸ‡ªðŸ‡¸', 'ðŸ‡ªðŸ‡¹',
    'ðŸ‡«ðŸ‡®', 'ðŸ‡«ðŸ‡¯', 'ðŸ‡«ðŸ‡²', 'ðŸ‡«ðŸ‡·', 'ðŸ‡¬ðŸ‡¦', 'ðŸ‡¬ðŸ‡§', 'ðŸ‡¬ðŸ‡©', 'ðŸ‡¬ðŸ‡ª', 'ðŸ‡¬ðŸ‡­', 'ðŸ‡¬ðŸ‡®', 'ðŸ‡¬ðŸ‡±',
    'ðŸ‡¬ðŸ‡²', 'ðŸ‡¬ðŸ‡³', 'ðŸ‡¬ðŸ‡µ', 'ðŸ‡¬ðŸ‡¶', 'ðŸ‡¬ðŸ‡·', 'ðŸ‡¬ðŸ‡¹', 'ðŸ‡¬ðŸ‡¼', 'ðŸ‡¬ðŸ‡¾', 'ðŸ‡­ðŸ‡°', 'ðŸ‡­ðŸ‡³', 'ðŸ‡­ðŸ‡·',
    'ðŸ‡­ðŸ‡¹', 'ðŸ‡­ðŸ‡º', 'ðŸ‡®ðŸ‡©', 'ðŸ‡®ðŸ‡ª', 'ðŸ‡®ðŸ‡±', 'ðŸ‡®ðŸ‡³', 'ðŸ‡®ðŸ‡¶', 'ðŸ‡®ðŸ‡·', 'ðŸ‡®ðŸ‡¸', 'ðŸ‡®ðŸ‡¹', 'ðŸ‡¯ðŸ‡²',
    'ðŸ‡¯ðŸ‡´', 'ðŸ‡¯ðŸ‡µ', 'ðŸ‡°ðŸ‡ª', 'ðŸ‡°ðŸ‡¬', 'ðŸ‡°ðŸ‡­', 'ðŸ‡°ðŸ‡®', 'ðŸ‡°ðŸ‡²', 'ðŸ‡°ðŸ‡³', 'ðŸ‡°ðŸ‡µ', 'ðŸ‡°ðŸ‡·', 'ðŸ‡°ðŸ‡¼',
    'ðŸ‡°ðŸ‡¿', 'ðŸ‡±ðŸ‡¦', 'ðŸ‡±ðŸ‡§', 'ðŸ‡±ðŸ‡¨', 'ðŸ‡±ðŸ‡®', 'ðŸ‡±ðŸ‡°', 'ðŸ‡±ðŸ‡·', 'ðŸ‡±ðŸ‡¸', 'ðŸ‡±ðŸ‡¹', 'ðŸ‡±ðŸ‡º', 'ðŸ‡±ðŸ‡»',
    'ðŸ‡±ðŸ‡¾', 'ðŸ‡²ðŸ‡¦', 'ðŸ‡²ðŸ‡¨', 'ðŸ‡²ðŸ‡©', 'ðŸ‡²ðŸ‡ª', 'ðŸ‡²ðŸ‡¬', 'ðŸ‡²ðŸ‡­', 'ðŸ‡²ðŸ‡°', 'ðŸ‡²ðŸ‡±', 'ðŸ‡²ðŸ‡²', 'ðŸ‡²ðŸ‡³',
    'ðŸ‡²ðŸ‡´', 'ðŸ‡²ðŸ‡µ', 'ðŸ‡²ðŸ‡¶', 'ðŸ‡²ðŸ‡·', 'ðŸ‡²ðŸ‡¹', 'ðŸ‡²ðŸ‡º', 'ðŸ‡²ðŸ‡»', 'ðŸ‡²ðŸ‡¼', 'ðŸ‡²ðŸ‡½', 'ðŸ‡²ðŸ‡¾', 'ðŸ‡²ðŸ‡¿',
    'ðŸ‡³ðŸ‡¦', 'ðŸ‡³ðŸ‡¨', 'ðŸ‡³ðŸ‡ª', 'ðŸ‡³ðŸ‡¬', 'ðŸ‡³ðŸ‡®', 'ðŸ‡³ðŸ‡±', 'ðŸ‡³ðŸ‡´', 'ðŸ‡³ðŸ‡µ', 'ðŸ‡³ðŸ‡·', 'ðŸ‡³ðŸ‡¿', 'ðŸ‡´ðŸ‡²',
    'ðŸ‡µðŸ‡¦', 'ðŸ‡µðŸ‡ª', 'ðŸ‡µðŸ‡«', 'ðŸ‡µðŸ‡¬', 'ðŸ‡µðŸ‡­', 'ðŸ‡µðŸ‡°', 'ðŸ‡µðŸ‡±', 'ðŸ‡µðŸ‡·', 'ðŸ‡µðŸ‡¸', 'ðŸ‡µðŸ‡¹', 'ðŸ‡µðŸ‡¼',
    'ðŸ‡µðŸ‡¾', 'ðŸ‡¶ðŸ‡¦', 'ðŸ‡·ðŸ‡ª', 'ðŸ‡·ðŸ‡´', 'ðŸ‡·ðŸ‡¸', 'ðŸ‡·ðŸ‡º', 'ðŸ‡·ðŸ‡¼', 'ðŸ‡¸ðŸ‡¦', 'ðŸ‡¸ðŸ‡§', 'ðŸ‡¸ðŸ‡¨', 'ðŸ‡¸ðŸ‡©',
    'ðŸ‡¸ðŸ‡ª', 'ðŸ‡¸ðŸ‡¬', 'ðŸ‡¸ðŸ‡®', 'ðŸ‡¸ðŸ‡°', 'ðŸ‡¸ðŸ‡±', 'ðŸ‡¸ðŸ‡²', 'ðŸ‡¸ðŸ‡³', 'ðŸ‡¸ðŸ‡´', 'ðŸ‡¸ðŸ‡·', 'ðŸ‡¸ðŸ‡¹', 'ðŸ‡¸ðŸ‡»',
    'ðŸ‡¸ðŸ‡¾', 'ðŸ‡¸ðŸ‡¿', 'ðŸ‡¹ðŸ‡©', 'ðŸ‡¹ðŸ‡¬', 'ðŸ‡¹ðŸ‡­', 'ðŸ‡¹ðŸ‡¯', 'ðŸ‡¹ðŸ‡±', 'ðŸ‡¹ðŸ‡²', 'ðŸ‡¹ðŸ‡³', 'ðŸ‡¹ðŸ‡´', 'ðŸ‡¹ðŸ‡·',
    'ðŸ‡¹ðŸ‡¹', 'ðŸ‡¹ðŸ‡»', 'ðŸ‡¹ðŸ‡¼', 'ðŸ‡¹ðŸ‡¿', 'ðŸ‡ºðŸ‡¦', 'ðŸ‡ºðŸ‡¬', 'ðŸ‡ºðŸ‡¸', 'ðŸ‡ºðŸ‡¾', 'ðŸ‡ºðŸ‡¿', 'ðŸ‡»ðŸ‡¦', 'ðŸ‡»ðŸ‡¨',
    'ðŸ‡»ðŸ‡ª', 'ðŸ‡»ðŸ‡¬', 'ðŸ‡»ðŸ‡®', 'ðŸ‡»ðŸ‡³', 'ðŸ‡»ðŸ‡º', 'ðŸ‡¼ðŸ‡¸', 'ðŸ‡¾ðŸ‡ª', 'ðŸ‡¿ðŸ‡¦', 'ðŸ‡¿ðŸ‡²', 'ðŸ‡¿ðŸ‡¼',
))


def is_regional_indicator(s: str) -> bool:
    return REGIONAL_A <= s <= REGIONAL_Z


# todo: replace this with country code detection
def allowed_pair(a,b):
    return


def detect_possible_country_flags_in_line(s: str) -> List[str]:

    token_length = 0
    glyphs = []

    s_length = len(s)

    current_index = 0
    while current_index < s_length:
        current_char = s[current_index]
        if is_regional_indicator(current_char):
            next_index = current_index + 1
            if next_index < s_length:
                pair_of_chars = s[current_index:current_index+2]

                if next_index < s_length and pair_of_chars in COUNTRY_CODES:
                    glyphs.append(pair_of_chars)
                else:
                    glyphs.extend(pair_of_chars)

                current_index += 2
        else:
            glyphs.append(current_char)
            current_index += 1

    return glyphs


print(detect_possible_country_flags_in_line("eðŸ‡ºðŸ‡¸iðŸ‡¦ðŸ‡¦i"))


def detect_regional_flags(s: str, start, end):
    pass

raw_font = ImageFont.truetype("/home/user/Downloads/Noto_Emoji/static/NotoEmoji-Regular.ttf", 16)

#raster_font =

text = "ðŸ˜ŠðŸŽ¶ðŸ¥ºðŸ’€ðŸ˜’ðŸ¤ ðŸ˜¨ðŸ‘½ðŸ‡ºðŸ‡¸â™»ðŸ—‘ðŸ’¡ðŸŒ©â›ˆðŸŒªðŸ—¿"
bbox = raw_font.getbbox(text)
image = Image.new("RGBA", bbox[:2], 0)
draw = ImageDraw.Draw(image)
#draw.text((0,0), text)
#image.show()