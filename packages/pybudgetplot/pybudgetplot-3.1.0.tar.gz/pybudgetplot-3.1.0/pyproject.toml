[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pybudgetplot"
description = "CLI app to read and plot budget definition to multiple formats."
readme = { "file" = "README.md", "content-type" = "text/markdown" }
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
    { name = "Hrissimir", email = "hrisimir.dakov@gmail.com" },
]
maintainers = [
    { name = "Hrissimir", email = "hrisimir.dakov@gmail.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Office/Business :: Financial :: Spreadsheet",
    "Topic :: Utilities",
]
dependencies = [
    "click>=8.1.3",
    "tabulate>=0.9.0",
    "pyyaml>=6.0",
    "pytz>=2022.6",
    "parsedatetime>=2.6",
    "python-dateutil>=2.8.2",
    "recurrent>=0.4.1",
    "numpy>=1.21.6",
    "pandas>=1.3.5",
    "matplotlib>=3.5.3",
    "xlsxwriter>=3.0.3",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/Hrissimir/PyBudgetPlot#readme"
Issues = "https://github.com/Hrissimir/PyBudgetPlot/issues"
Source = "https://github.com/Hrissimir/PyBudgetPlot"

[project.scripts]
budget = "pybudgetplot.cli:cli"

[tool.hatch.version]
path = "src/pybudgetplot/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "black>=22.10.0",
    "blacken-docs>=1.12.1",
    "isort>=5.10.1",
    "coverage[toml]>=6.2",
    "pylint>=2.15.5",
    "pytest>=7.1.3",
    "pytest-cov>=4.0.0",
    "twine>=4.0.1",
    "mccabe>=0.7.0",
    "pyflakes>=2.5.0",
    "pycodestyle>=2.9.1",
    "flake8>=5.0.4",
    "flake8-builtins>=2.0.0",
    "flake8-comprehensions>=3.10.0",
]

[tool.hatch.envs.default.scripts]
cov = "pytest {args}"
no-cov = "cov --no-cov {args}"
code-check = [
    "pylint --verbose ./src ./tests",
    "flake8 --verbose --config=.flake8 --require-plugins=mccabe,pyflakes,pycodestyle,flake8-builtins,flake8-comprehensions ./src ./tests",
    "black --verbose --config=.black --check --diff ./src ./tests",
    "isort --verbose --settings-path=.isort.cfg --check-only --diff ./src ./tests",
]
code-format = [
    "isort --verbose --settings-path=.isort.cfg ./src ./tests",
    "black --verbose --config=.black ./src ./tests",
    "code-check"
]

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]
