# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/Gait_Analysis',
                'doc_host': 'https://Defense-Circuits-Lab.github.io',
                'git_url': 'https://github.com/Defense-Circuits-Lab/Gait_Analysis',
                'lib_path': 'gait_analysis'},
  'syms': { 'gait_analysis.core': { 'gait_analysis.core.Bodypart': ('core.html#bodypart', 'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart.__init__': ('core.html#bodypart.__init__', 'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart._add_immobility_to_df': ( 'core.html#bodypart._add_immobility_to_df',
                                                                                           'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart._add_rolling_speed_to_df': ( 'core.html#bodypart._add_rolling_speed_to_df',
                                                                                              'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart._add_speed_to_df': ( 'core.html#bodypart._add_speed_to_df',
                                                                                      'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart._apply_exclusion_criteria': ( 'core.html#bodypart._apply_exclusion_criteria',
                                                                                               'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart._slice_df': ('core.html#bodypart._slice_df', 'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart.calculate_speed_and_identify_immobility': ( 'core.html#bodypart.calculate_speed_and_identify_immobility',
                                                                                                             'gait_analysis/core.py'),
                                    'gait_analysis.core.Bodypart.exclusion_criteria': ( 'core.html#bodypart.exclusion_criteria',
                                                                                        'gait_analysis/core.py'),
                                    'gait_analysis.core.EventBout': ('core.html#eventbout', 'gait_analysis/core.py'),
                                    'gait_analysis.core.EventBout.__init__': ('core.html#eventbout.__init__', 'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording': ('core.html#trackedrecording', 'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.__init__': ( 'core.html#trackedrecording.__init__',
                                                                                      'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording._attempt_loading_df_from_dlc_output': ( 'core.html#trackedrecording._attempt_loading_df_from_dlc_output',
                                                                                                                 'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording._load_remaining_metadata': ( 'core.html#trackedrecording._load_remaining_metadata',
                                                                                                      'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.export_results': ( 'core.html#trackedrecording.export_results',
                                                                                            'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.inspect_processing': ( 'core.html#trackedrecording.inspect_processing',
                                                                                                'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.marker_ids_to_exclude_for_smoothing_and_interpolation': ( 'core.html#trackedrecording.marker_ids_to_exclude_for_smoothing_and_interpolation',
                                                                                                                                   'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.preprocess_tracking': ( 'core.html#trackedrecording.preprocess_tracking',
                                                                                                 'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.run_event_detection': ( 'core.html#trackedrecording.run_event_detection',
                                                                                                 'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.valid_mouse_lines': ( 'core.html#trackedrecording.valid_mouse_lines',
                                                                                               'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.valid_paradigms': ( 'core.html#trackedrecording.valid_paradigms',
                                                                                             'gait_analysis/core.py'),
                                    'gait_analysis.core.TrackedRecording.valid_recording_weeks': ( 'core.html#trackedrecording.valid_recording_weeks',
                                                                                                   'gait_analysis/core.py')},
            'gait_analysis.inspect': { 'gait_analysis.inspect.check_data_availability': ( 'inspect.html#check_data_availability',
                                                                                          'gait_analysis/inspect.py'),
                                       'gait_analysis.inspect.collect_all_available_data': ( 'inspect.html#collect_all_available_data',
                                                                                             'gait_analysis/inspect.py'),
                                       'gait_analysis.inspect.filter_dataframe': ( 'inspect.html#filter_dataframe',
                                                                                   'gait_analysis/inspect.py'),
                                       'gait_analysis.inspect.get_metadata_from_filename': ( 'inspect.html#get_metadata_from_filename',
                                                                                             'gait_analysis/inspect.py'),
                                       'gait_analysis.inspect.get_only_matching_xlsx_files': ( 'inspect.html#get_only_matching_xlsx_files',
                                                                                               'gait_analysis/inspect.py'),
                                       'gait_analysis.inspect.plot': ('inspect.html#plot', 'gait_analysis/inspect.py')},
            'gait_analysis.twoD.cam_interfaces': { 'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording': ( 'twod_cam_interfaces.html#toptracked2drecording',
                                                                                                                'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._add_to_logs': ( 'twod_cam_interfaces.html#toptracked2drecording._add_to_logs',
                                                                                                                             'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._check_metadata': ( 'twod_cam_interfaces.html#toptracked2drecording._check_metadata',
                                                                                                                                'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._get_correct_fps': ( 'twod_cam_interfaces.html#toptracked2drecording._get_correct_fps',
                                                                                                                                 'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._get_normalized_maze_corners': ( 'twod_cam_interfaces.html#toptracked2drecording._get_normalized_maze_corners',
                                                                                                                                             'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._get_parameters_to_normalize_maze_coordinates': ( 'twod_cam_interfaces.html#toptracked2drecording._get_parameters_to_normalize_maze_coordinates',
                                                                                                                                                              'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._load_remaining_metadata': ( 'twod_cam_interfaces.html#toptracked2drecording._load_remaining_metadata',
                                                                                                                                         'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._plot_selected_marker_ids_on_normalized_maze': ( 'twod_cam_interfaces.html#toptracked2drecording._plot_selected_marker_ids_on_normalized_maze',
                                                                                                                                                             'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording._retrieve_metadata': ( 'twod_cam_interfaces.html#toptracked2drecording._retrieve_metadata',
                                                                                                                                   'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording.export_results': ( 'twod_cam_interfaces.html#toptracked2drecording.export_results',
                                                                                                                               'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording.inspect_processing': ( 'twod_cam_interfaces.html#toptracked2drecording.inspect_processing',
                                                                                                                                   'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording.preprocess_tracking': ( 'twod_cam_interfaces.html#toptracked2drecording.preprocess_tracking',
                                                                                                                                    'gait_analysis/twoD/cam_interfaces.py'),
                                                   'gait_analysis.twoD.cam_interfaces.TopTracked2DRecording.run_event_detection': ( 'twod_cam_interfaces.html#toptracked2drecording.run_event_detection',
                                                                                                                                    'gait_analysis/twoD/cam_interfaces.py')},
            'gait_analysis.twoD.detect': { 'gait_analysis.twoD.detect.add_event_bouts_to_behavior_df': ( 'twod_detect.html#add_event_bouts_to_behavior_df',
                                                                                                         'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.add_immobility_based_on_several_bodyparts_to_behavior_df': ( 'twod_detect.html#add_immobility_based_on_several_bodyparts_to_behavior_df',
                                                                                                                                   'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.add_orientation_to_behavior_df': ( 'twod_detect.html#add_orientation_to_behavior_df',
                                                                                                         'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.create_behavior_df': ( 'twod_detect.html#create_behavior_df',
                                                                                             'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.create_event_objects': ( 'twod_detect.html#create_event_objects',
                                                                                               'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.get_gait_disruption_events': ( 'twod_detect.html#get_gait_disruption_events',
                                                                                                     'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.get_gait_events': ( 'twod_detect.html#get_gait_events',
                                                                                          'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.get_immobility_related_events': ( 'twod_detect.html#get_immobility_related_events',
                                                                                                        'gait_analysis/twoD/detect.py'),
                                           'gait_analysis.twoD.detect.get_interval_border_idxs_from_event_type_and_id': ( 'twod_detect.html#get_interval_border_idxs_from_event_type_and_id',
                                                                                                                          'gait_analysis/twoD/detect.py')},
            'gait_analysis.twoD.export': { 'gait_analysis.twoD.export.add_results_to_session_overview': ( 'twod_export.html#add_results_to_session_overview',
                                                                                                          'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.create_parameter_settings_df': ( 'twod_export.html#create_parameter_settings_df',
                                                                                                       'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.create_session_overview_df': ( 'twod_export.html#create_session_overview_df',
                                                                                                     'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.export_gait_related_bouts': ( 'twod_export.html#export_gait_related_bouts',
                                                                                                    'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.export_immobility_related_bouts': ( 'twod_export.html#export_immobility_related_bouts',
                                                                                                          'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.get_all_bout_ids': ( 'twod_export.html#get_all_bout_ids',
                                                                                           'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.get_bout_duration_per_bout_id': ( 'twod_export.html#get_bout_duration_per_bout_id',
                                                                                                        'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.get_bout_id_splits_depending_on_direction': ( 'twod_export.html#get_bout_id_splits_depending_on_direction',
                                                                                                                    'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.get_column_name_from_substring': ( 'twod_export.html#get_column_name_from_substring',
                                                                                                         'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.get_column_values_at_event_borders': ( 'twod_export.html#get_column_values_at_event_borders',
                                                                                                             'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.get_distance_covered_per_event': ( 'twod_export.html#get_distance_covered_per_event',
                                                                                                         'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.get_interval_start_and_end_time_per_event': ( 'twod_export.html#get_interval_start_and_end_time_per_event',
                                                                                                                    'gait_analysis/twoD/export.py'),
                                           'gait_analysis.twoD.export.write_xlsx_file_to_disk': ( 'twod_export.html#write_xlsx_file_to_disk',
                                                                                                  'gait_analysis/twoD/export.py')},
            'gait_analysis.twoD.preprocess': { 'gait_analysis.twoD.preprocess.add_new_marker_derived_from_existing_markers': ( 'twod_preprocess.html#add_new_marker_derived_from_existing_markers',
                                                                                                                               'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.compute_angle_error': ( 'twod_preprocess.html#compute_angle_error',
                                                                                                      'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.compute_distance_ratio_error': ( 'twod_preprocess.html#compute_distance_ratio_error',
                                                                                                               'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.compute_error_proportion': ( 'twod_preprocess.html#compute_error_proportion',
                                                                                                           'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.convert_df_to_cm': ( 'twod_preprocess.html#convert_df_to_cm',
                                                                                                   'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.create_bodypart_objects': ( 'twod_preprocess.html#create_bodypart_objects',
                                                                                                          'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.evaluate_maze_shape_using_open_corners': ( 'twod_preprocess.html#evaluate_maze_shape_using_open_corners',
                                                                                                                         'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_all_unique_marker_ids': ( 'twod_preprocess.html#get_all_unique_marker_ids',
                                                                                                            'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_conversion_factor_px_to_cm': ( 'twod_preprocess.html#get_conversion_factor_px_to_cm',
                                                                                                                 'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_corner_coords_with_likelihoods': ( 'twod_preprocess.html#get_corner_coords_with_likelihoods',
                                                                                                                     'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_distance_between_two_points': ( 'twod_preprocess.html#get_distance_between_two_points',
                                                                                                                  'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_low_likelihood_interval_border_idxs': ( 'twod_preprocess.html#get_low_likelihood_interval_border_idxs',
                                                                                                                          'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_most_reliable_marker_position_with_likelihood': ( 'twod_preprocess.html#get_most_reliable_marker_position_with_likelihood',
                                                                                                                                    'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_preprocessing_relevant_marker_ids': ( 'twod_preprocess.html#get_preprocessing_relevant_marker_ids',
                                                                                                                        'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_rotation_angle_with_closed_corners_only': ( 'twod_preprocess.html#get_rotation_angle_with_closed_corners_only',
                                                                                                                              'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_rotation_angle_with_open_corner': ( 'twod_preprocess.html#get_rotation_angle_with_open_corner',
                                                                                                                      'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.get_translation_vector': ( 'twod_preprocess.html#get_translation_vector',
                                                                                                         'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.interpolate_low_likelihood_intervals': ( 'twod_preprocess.html#interpolate_low_likelihood_intervals',
                                                                                                                       'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.normalize_df': ( 'twod_preprocess.html#normalize_df',
                                                                                               'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.rotate_df': ( 'twod_preprocess.html#rotate_df',
                                                                                            'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.smooth_tracked_coords_and_likelihood': ( 'twod_preprocess.html#smooth_tracked_coords_and_likelihood',
                                                                                                                       'gait_analysis/twoD/preprocess.py'),
                                               'gait_analysis.twoD.preprocess.translate_df': ( 'twod_preprocess.html#translate_df',
                                                                                               'gait_analysis/twoD/preprocess.py')},
            'gait_analysis.twoD.utils': { 'gait_analysis.twoD.utils.compute_coverage': ( 'twod_utils.html#compute_coverage',
                                                                                         'gait_analysis/twoD/utils.py'),
                                          'gait_analysis.twoD.utils.get_column_names': ( 'twod_utils.html#get_column_names',
                                                                                         'gait_analysis/twoD/utils.py'),
                                          'gait_analysis.twoD.utils.get_idxs_where_all_markers_exceed_likelihood': ( 'twod_utils.html#get_idxs_where_all_markers_exceed_likelihood',
                                                                                                                     'gait_analysis/twoD/utils.py'),
                                          'gait_analysis.twoD.utils.get_interval_border_idxs': ( 'twod_utils.html#get_interval_border_idxs',
                                                                                                 'gait_analysis/twoD/utils.py'),
                                          'gait_analysis.twoD.utils.get_max_odd_n_frames_for_time_interval': ( 'twod_utils.html#get_max_odd_n_frames_for_time_interval',
                                                                                                               'gait_analysis/twoD/utils.py'),
                                          'gait_analysis.twoD.utils.process_all_dlc_tracking_h5s_with_default_settings': ( 'twod_utils.html#process_all_dlc_tracking_h5s_with_default_settings',
                                                                                                                           'gait_analysis/twoD/utils.py')}}}
