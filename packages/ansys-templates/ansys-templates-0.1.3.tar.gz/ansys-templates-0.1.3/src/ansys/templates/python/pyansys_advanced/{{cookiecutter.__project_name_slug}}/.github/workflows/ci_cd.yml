name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: {{ cookiecutter.requires_python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.build_system }} tox
      - name: Test with tox
        run: tox -e style


  tests:
    name: Tests and coverage
    runs-on: {{ '${{ matrix.os }}' }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python {{ '${{ matrix.python-version }}' }}
        uses: actions/setup-python@v2
        with:
          python-version: {{ '${{ matrix.python-version }}' }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.build_system }} tox tox-gh-actions
      - name: Test with tox
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: tox


  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.build_system }} tox
      - name: Test with tox
        run: tox -e doc


  build:
    name: Build library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.build_system }}
          python -m pip install -r requirements/requirements_build.txt
          {% if cookiecutter.build_system in ["flit", "poetry"] -%}
          {{ cookiecutter.build_system }} build
          {% elif cookiecutter.build_system == "setuptools" -%}
          python -m build
          {% endif -%}
          python -m twine check dist/*
