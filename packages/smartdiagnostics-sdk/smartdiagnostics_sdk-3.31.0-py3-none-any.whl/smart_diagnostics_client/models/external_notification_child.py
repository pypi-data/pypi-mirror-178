# coding: utf-8

"""
    Internal API

    SmartDiagnostics REST API for internal users only  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ExternalNotificationChild(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'external_notification_id': 'str',
        'external_notification_requested_time': 'datetime',
        'external_notification_user_id': 'str',
        'external_notification_user_email': 'str'
    }

    attribute_map = {
        'external_notification_id': 'ExternalNotificationId',
        'external_notification_requested_time': 'ExternalNotificationRequestedTime',
        'external_notification_user_id': 'ExternalNotificationUserId',
        'external_notification_user_email': 'ExternalNotificationUserEmail'
    }

    def __init__(self, external_notification_id=None, external_notification_requested_time=None, external_notification_user_id=None, external_notification_user_email=None):  # noqa: E501
        """ExternalNotificationChild - a model defined in Swagger"""  # noqa: E501
        self._external_notification_id = None
        self._external_notification_requested_time = None
        self._external_notification_user_id = None
        self._external_notification_user_email = None
        self.discriminator = None
        self.external_notification_id = external_notification_id
        self.external_notification_requested_time = external_notification_requested_time
        self.external_notification_user_id = external_notification_user_id
        self.external_notification_user_email = external_notification_user_email

    @property
    def external_notification_id(self):
        """Gets the external_notification_id of this ExternalNotificationChild.  # noqa: E501

        The id of the external notification  # noqa: E501

        :return: The external_notification_id of this ExternalNotificationChild.  # noqa: E501
        :rtype: str
        """
        return self._external_notification_id

    @external_notification_id.setter
    def external_notification_id(self, external_notification_id):
        """Sets the external_notification_id of this ExternalNotificationChild.

        The id of the external notification  # noqa: E501

        :param external_notification_id: The external_notification_id of this ExternalNotificationChild.  # noqa: E501
        :type: str
        """
        if external_notification_id is None:
            raise ValueError("Invalid value for `external_notification_id`, must not be `None`")  # noqa: E501

        self._external_notification_id = external_notification_id

    @property
    def external_notification_requested_time(self):
        """Gets the external_notification_requested_time of this ExternalNotificationChild.  # noqa: E501

        The time the external notification was requested  # noqa: E501

        :return: The external_notification_requested_time of this ExternalNotificationChild.  # noqa: E501
        :rtype: datetime
        """
        return self._external_notification_requested_time

    @external_notification_requested_time.setter
    def external_notification_requested_time(self, external_notification_requested_time):
        """Sets the external_notification_requested_time of this ExternalNotificationChild.

        The time the external notification was requested  # noqa: E501

        :param external_notification_requested_time: The external_notification_requested_time of this ExternalNotificationChild.  # noqa: E501
        :type: datetime
        """
        if external_notification_requested_time is None:
            raise ValueError("Invalid value for `external_notification_requested_time`, must not be `None`")  # noqa: E501

        self._external_notification_requested_time = external_notification_requested_time

    @property
    def external_notification_user_id(self):
        """Gets the external_notification_user_id of this ExternalNotificationChild.  # noqa: E501

        The id of the user who requested the external notification  # noqa: E501

        :return: The external_notification_user_id of this ExternalNotificationChild.  # noqa: E501
        :rtype: str
        """
        return self._external_notification_user_id

    @external_notification_user_id.setter
    def external_notification_user_id(self, external_notification_user_id):
        """Sets the external_notification_user_id of this ExternalNotificationChild.

        The id of the user who requested the external notification  # noqa: E501

        :param external_notification_user_id: The external_notification_user_id of this ExternalNotificationChild.  # noqa: E501
        :type: str
        """
        if external_notification_user_id is None:
            raise ValueError("Invalid value for `external_notification_user_id`, must not be `None`")  # noqa: E501

        self._external_notification_user_id = external_notification_user_id

    @property
    def external_notification_user_email(self):
        """Gets the external_notification_user_email of this ExternalNotificationChild.  # noqa: E501

        The email of the user who requested the external notification  # noqa: E501

        :return: The external_notification_user_email of this ExternalNotificationChild.  # noqa: E501
        :rtype: str
        """
        return self._external_notification_user_email

    @external_notification_user_email.setter
    def external_notification_user_email(self, external_notification_user_email):
        """Sets the external_notification_user_email of this ExternalNotificationChild.

        The email of the user who requested the external notification  # noqa: E501

        :param external_notification_user_email: The external_notification_user_email of this ExternalNotificationChild.  # noqa: E501
        :type: str
        """
        if external_notification_user_email is None:
            raise ValueError("Invalid value for `external_notification_user_email`, must not be `None`")  # noqa: E501

        self._external_notification_user_email = external_notification_user_email

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ExternalNotificationChild, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExternalNotificationChild):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
