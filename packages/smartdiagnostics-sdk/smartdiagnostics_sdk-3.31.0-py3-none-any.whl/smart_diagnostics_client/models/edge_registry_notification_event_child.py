# coding: utf-8

"""
    Internal API

    SmartDiagnostics REST API for internal users only  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EdgeRegistryNotificationEventChild(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'action': 'str',
        'timestamp': 'datetime',
        'target': 'EdgeRegistryNotificationTargetChild',
        'request': 'EdgeRegistryNotificationRequestRecordChild',
        'actor': 'EdgeRegistryNotificationActorChild',
        'source': 'EdgeRegistryNotificationSourceChild'
    }

    attribute_map = {
        'id': 'Id',
        'action': 'Action',
        'timestamp': 'Timestamp',
        'target': 'Target',
        'request': 'Request',
        'actor': 'Actor',
        'source': 'Source'
    }

    def __init__(self, id=None, action=None, timestamp=None, target=None, request=None, actor=None, source=None):  # noqa: E501
        """EdgeRegistryNotificationEventChild - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._action = None
        self._timestamp = None
        self._target = None
        self._request = None
        self._actor = None
        self._source = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if action is not None:
            self.action = action
        if timestamp is not None:
            self.timestamp = timestamp
        if target is not None:
            self.target = target
        if request is not None:
            self.request = request
        if actor is not None:
            self.actor = actor
        if source is not None:
            self.source = source

    @property
    def id(self):
        """Gets the id of this EdgeRegistryNotificationEventChild.  # noqa: E501

        Unique identifier for the event  # noqa: E501

        :return: The id of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EdgeRegistryNotificationEventChild.

        Unique identifier for the event  # noqa: E501

        :param id: The id of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def action(self):
        """Gets the action of this EdgeRegistryNotificationEventChild.  # noqa: E501

        What action encompasses the provided event  # noqa: E501

        :return: The action of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this EdgeRegistryNotificationEventChild.

        What action encompasses the provided event  # noqa: E501

        :param action: The action of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :type: str
        """

        self._action = action

    @property
    def timestamp(self):
        """Gets the timestamp of this EdgeRegistryNotificationEventChild.  # noqa: E501

        Time at which the event occurred  # noqa: E501

        :return: The timestamp of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this EdgeRegistryNotificationEventChild.

        Time at which the event occurred  # noqa: E501

        :param timestamp: The timestamp of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :type: datetime
        """

        self._timestamp = timestamp

    @property
    def target(self):
        """Gets the target of this EdgeRegistryNotificationEventChild.  # noqa: E501


        :return: The target of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :rtype: EdgeRegistryNotificationTargetChild
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this EdgeRegistryNotificationEventChild.


        :param target: The target of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :type: EdgeRegistryNotificationTargetChild
        """

        self._target = target

    @property
    def request(self):
        """Gets the request of this EdgeRegistryNotificationEventChild.  # noqa: E501


        :return: The request of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :rtype: EdgeRegistryNotificationRequestRecordChild
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this EdgeRegistryNotificationEventChild.


        :param request: The request of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :type: EdgeRegistryNotificationRequestRecordChild
        """

        self._request = request

    @property
    def actor(self):
        """Gets the actor of this EdgeRegistryNotificationEventChild.  # noqa: E501


        :return: The actor of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :rtype: EdgeRegistryNotificationActorChild
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this EdgeRegistryNotificationEventChild.


        :param actor: The actor of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :type: EdgeRegistryNotificationActorChild
        """

        self._actor = actor

    @property
    def source(self):
        """Gets the source of this EdgeRegistryNotificationEventChild.  # noqa: E501


        :return: The source of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :rtype: EdgeRegistryNotificationSourceChild
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this EdgeRegistryNotificationEventChild.


        :param source: The source of this EdgeRegistryNotificationEventChild.  # noqa: E501
        :type: EdgeRegistryNotificationSourceChild
        """

        self._source = source

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EdgeRegistryNotificationEventChild, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EdgeRegistryNotificationEventChild):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
