# coding: utf-8

"""
    Internal API

    SmartDiagnostics REST API for internal users only  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EdgeLogDataResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'base_station_serial_number': 'str',
        'message': 'str',
        'timestamp': 'datetime',
        'container_name': 'str',
        'container_image_name': 'str'
    }

    attribute_map = {
        'id': 'Id',
        'base_station_serial_number': 'BaseStationSerialNumber',
        'message': 'Message',
        'timestamp': 'Timestamp',
        'container_name': 'ContainerName',
        'container_image_name': 'ContainerImageName'
    }

    def __init__(self, id=None, base_station_serial_number=None, message=None, timestamp=None, container_name=None, container_image_name=None):  # noqa: E501
        """EdgeLogDataResponse - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._base_station_serial_number = None
        self._message = None
        self._timestamp = None
        self._container_name = None
        self._container_image_name = None
        self.discriminator = None
        self.id = id
        self.base_station_serial_number = base_station_serial_number
        self.message = message
        self.timestamp = timestamp
        if container_name is not None:
            self.container_name = container_name
        if container_image_name is not None:
            self.container_image_name = container_image_name

    @property
    def id(self):
        """Gets the id of this EdgeLogDataResponse.  # noqa: E501

        The id of the log entry  # noqa: E501

        :return: The id of this EdgeLogDataResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EdgeLogDataResponse.

        The id of the log entry  # noqa: E501

        :param id: The id of this EdgeLogDataResponse.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def base_station_serial_number(self):
        """Gets the base_station_serial_number of this EdgeLogDataResponse.  # noqa: E501

        The serial number of the Base Station  # noqa: E501

        :return: The base_station_serial_number of this EdgeLogDataResponse.  # noqa: E501
        :rtype: str
        """
        return self._base_station_serial_number

    @base_station_serial_number.setter
    def base_station_serial_number(self, base_station_serial_number):
        """Sets the base_station_serial_number of this EdgeLogDataResponse.

        The serial number of the Base Station  # noqa: E501

        :param base_station_serial_number: The base_station_serial_number of this EdgeLogDataResponse.  # noqa: E501
        :type: str
        """
        if base_station_serial_number is None:
            raise ValueError("Invalid value for `base_station_serial_number`, must not be `None`")  # noqa: E501

        self._base_station_serial_number = base_station_serial_number

    @property
    def message(self):
        """Gets the message of this EdgeLogDataResponse.  # noqa: E501

        Log message  # noqa: E501

        :return: The message of this EdgeLogDataResponse.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this EdgeLogDataResponse.

        Log message  # noqa: E501

        :param message: The message of this EdgeLogDataResponse.  # noqa: E501
        :type: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def timestamp(self):
        """Gets the timestamp of this EdgeLogDataResponse.  # noqa: E501

        Date / time of log entry  # noqa: E501

        :return: The timestamp of this EdgeLogDataResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this EdgeLogDataResponse.

        Date / time of log entry  # noqa: E501

        :param timestamp: The timestamp of this EdgeLogDataResponse.  # noqa: E501
        :type: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def container_name(self):
        """Gets the container_name of this EdgeLogDataResponse.  # noqa: E501

        Container Name  # noqa: E501

        :return: The container_name of this EdgeLogDataResponse.  # noqa: E501
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this EdgeLogDataResponse.

        Container Name  # noqa: E501

        :param container_name: The container_name of this EdgeLogDataResponse.  # noqa: E501
        :type: str
        """

        self._container_name = container_name

    @property
    def container_image_name(self):
        """Gets the container_image_name of this EdgeLogDataResponse.  # noqa: E501

        Container Image Name  # noqa: E501

        :return: The container_image_name of this EdgeLogDataResponse.  # noqa: E501
        :rtype: str
        """
        return self._container_image_name

    @container_image_name.setter
    def container_image_name(self, container_image_name):
        """Sets the container_image_name of this EdgeLogDataResponse.

        Container Image Name  # noqa: E501

        :param container_image_name: The container_image_name of this EdgeLogDataResponse.  # noqa: E501
        :type: str
        """

        self._container_image_name = container_image_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EdgeLogDataResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EdgeLogDataResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
