# coding: utf-8

"""
    Internal API

    SmartDiagnostics REST API for internal users only  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SystemAssetsStatusSummaryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'system': 'SystemChild',
        'asset_count': 'int',
        'status_count': 'AssetsStatusCountChild',
        'status_percentage': 'AssetsStatusPercentageChild'
    }

    attribute_map = {
        'system': 'System',
        'asset_count': 'AssetCount',
        'status_count': 'StatusCount',
        'status_percentage': 'StatusPercentage'
    }

    def __init__(self, system=None, asset_count=None, status_count=None, status_percentage=None):  # noqa: E501
        """SystemAssetsStatusSummaryResponse - a model defined in Swagger"""  # noqa: E501
        self._system = None
        self._asset_count = None
        self._status_count = None
        self._status_percentage = None
        self.discriminator = None
        self.system = system
        self.asset_count = asset_count
        self.status_count = status_count
        if status_percentage is not None:
            self.status_percentage = status_percentage

    @property
    def system(self):
        """Gets the system of this SystemAssetsStatusSummaryResponse.  # noqa: E501


        :return: The system of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :rtype: SystemChild
        """
        return self._system

    @system.setter
    def system(self, system):
        """Sets the system of this SystemAssetsStatusSummaryResponse.


        :param system: The system of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :type: SystemChild
        """
        if system is None:
            raise ValueError("Invalid value for `system`, must not be `None`")  # noqa: E501

        self._system = system

    @property
    def asset_count(self):
        """Gets the asset_count of this SystemAssetsStatusSummaryResponse.  # noqa: E501


        :return: The asset_count of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :rtype: int
        """
        return self._asset_count

    @asset_count.setter
    def asset_count(self, asset_count):
        """Sets the asset_count of this SystemAssetsStatusSummaryResponse.


        :param asset_count: The asset_count of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :type: int
        """
        if asset_count is None:
            raise ValueError("Invalid value for `asset_count`, must not be `None`")  # noqa: E501

        self._asset_count = asset_count

    @property
    def status_count(self):
        """Gets the status_count of this SystemAssetsStatusSummaryResponse.  # noqa: E501


        :return: The status_count of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :rtype: AssetsStatusCountChild
        """
        return self._status_count

    @status_count.setter
    def status_count(self, status_count):
        """Sets the status_count of this SystemAssetsStatusSummaryResponse.


        :param status_count: The status_count of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :type: AssetsStatusCountChild
        """
        if status_count is None:
            raise ValueError("Invalid value for `status_count`, must not be `None`")  # noqa: E501

        self._status_count = status_count

    @property
    def status_percentage(self):
        """Gets the status_percentage of this SystemAssetsStatusSummaryResponse.  # noqa: E501


        :return: The status_percentage of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :rtype: AssetsStatusPercentageChild
        """
        return self._status_percentage

    @status_percentage.setter
    def status_percentage(self, status_percentage):
        """Sets the status_percentage of this SystemAssetsStatusSummaryResponse.


        :param status_percentage: The status_percentage of this SystemAssetsStatusSummaryResponse.  # noqa: E501
        :type: AssetsStatusPercentageChild
        """

        self._status_percentage = status_percentage

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SystemAssetsStatusSummaryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SystemAssetsStatusSummaryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
