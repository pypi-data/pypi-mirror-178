msgid ""
msgstr ""
"Project-Id-Version: friendly-traceback\n"
"POT-Creation-Date: 2022-10-24 10:58-0300\n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.1.1\n"

#: __init__.py:284 __main__.py:171
msgid "The file {filename} does not exist."
msgstr "Il file {filename} non esiste."

#: __init__.py:367
msgid "The available languages are:"
msgstr ""

#: __init__.py:395
msgid "{include}: Unrecognized value."
msgstr ""

#: __init__.py:396
msgid "The allowed values are:"
msgstr ""

#: about_warnings.py:88
msgid "Warning issued on line `{line}` of code block {filename}."
msgstr ""
"Eccezione rilevata alla linea `{line}` della porzione di codice {filename}."

#: about_warnings.py:92
msgid "Warning issued on line `{line}` of file '{filename}'."
msgstr "Eccezione rilevata alla linea `{line}` del file '{filename}'."

#: about_warnings.py:137
msgid ""
"The source is unavailable.\n"
"If you used `exec`, consider using `friendly_exec` instead."
msgstr ""

#: base_formatters.py:192 base_formatters.py:198
msgid "I have no suggestion to offer."
msgstr "Non ho suggerimenti da proporre."

#: base_formatters.py:196
msgid "I have no suggestion to offer; try `why()`."
msgstr "Non ho suggerimenti da proporre; prova a digitare `why()`."

#: config.py:42
msgid ""
"Are you using a regular Python console instead of a Friendly console?\n"
"If so, to continue, try: `start_console(local_vars=locals())`.\n"
"You will need to import `start_console` if you have not already done so.\n"
msgstr ""
"Stai ancora utilizzando la console standard di Python invece che una console "
"Friendly? Se è così, allora per continuare prova: "
"`start_console(local_vars=locals())`.\n"
"Se non l’hai ancora fatto, dovrai importare il modulo `start_console`.\n"

#: config.py:76 config.py:194 console_helpers.py:43
msgid "Nothing to show: no exception recorded."
msgstr "Non c'è nulla da mostrare: non sono state rilevate eccezioni."

#: config.py:81 console_helpers.py:306
msgid "Invalid index value."
msgstr ""

#: config.py:320
msgid ""
"An exception occurred before friendly-traceback was imported.\n"
"Some information is available."
msgstr ""
"Una eccezione è stata sollevata prima che il friendly-traceback fosse "
"importata. Sono disponibili delle informazioni."

#: console_helpers.py:49
msgid "Friendly-traceback is already disabled."
msgstr ""

#: console_helpers.py:59
msgid "Friendly-traceback is already enabled."
msgstr ""

#: console_helpers.py:109 functions_help.py:15
msgid "Shows a list of recorded traceback messages."
msgstr "Mostra una lista di messaggi traceback registrati."

#: console_helpers.py:111 functions_help.py:17
msgid "You can also use `history.clear()` and `history.pop()`."
msgstr ""

#: console_helpers.py:121
#, fuzzy
#| msgid "Nothing to show: no exception recorded."
msgid "Nothing to delete: no exception recorded."
msgstr "Non c'è nulla da mostrare: non sono state rilevate eccezioni."

#: console_helpers.py:128
msgid "There is no such history item."
msgstr ""

#: console_helpers.py:172 console_helpers.py:176
msgid "{exception} is not an exception."
msgstr "{exception} non è una eccezione."

#: console_helpers.py:270
msgid "The default web browser cannot be used for searching."
msgstr "Il browser di default non può essere utilizzato per la ricerca."

#: console_helpers.py:280
#, fuzzy
#| msgid ""
#| "Invalid argument for `www()`.\n"
#| "Valid arguments include `None` or one of `{sites}`.\n"
msgid ""
"Invalid argument for `www()`.\n"
"Valid arguments are integer values or one of `{sites}`.\n"
msgstr ""
"Parametro di input non valido per la funzione `www()`. Parametri di input "
"validi sono `None` oppure uno tra `{sites}`.\n"

#: console_helpers.py:478
msgid ""
"The following methods of the Friendly object should also be available as "
"functions."
msgstr ""
"I seguenti metodi dell'oggetto Friendly dovrebbero essere resi disponibili "
"anche come funzioni."

#: core.py:125
msgid "More lines not shown."
msgstr "Ci sono altre linee non visibili."

#: core.py:127 core.py:166
msgid "Python exception:"
msgstr "Eccezione Python:"

#: core.py:180
msgid "The exception includes the following note:\n"
msgstr ""

#: core.py:184
msgid "The exception includes the following notes:\n"
msgstr ""

#: core.py:204
msgid ""
"Warning: improperly formed exception.\n"
"I suspect that a custom exception has been raised\n"
"with a non-string value used as a message.\n"
"This can occur if a `__repr__` or a `__str__` method\n"
"raises an exception or does not return a string.\n"
msgstr ""
"Warning: eccezione impropriamente sollevata. \n"
"Sospetto che una eccezione custom sia stata sollevata utilizzando come "
"messaggio un valore non di tipo \"stringa\". \n"
"Questo può accadere se un metodo `__repr__` oppure `__str__` solleva una "
"eccezione e non viene restituito un valore non di tipo \"stringa\". \n"

#: core.py:255
msgid "The encoding of the file was not valid.\n"
msgstr "L'encoding del file non è valido.\n"

#: core.py:335 core.py:356
msgid ""
"{filename} is not a regular Python file whose contents can be analyzed.\n"
msgstr ""
"{filename} non è un file in formato Python. Il contenuto non può essere "
"analizzato\n"

#: core.py:339
msgid "If you used `exec`, consider using `friendly_exec` instead.\n"
msgstr ""

#: core.py:344
msgid "Exception raised on line `{linenumber}` of code block {filename}.\n"
msgstr ""
"Eccezione rilevata alla linea `{linenumber}` della porzione di codice "
"{filename}.\n"

#: core.py:348
msgid "Exception raised on line `{linenumber}` of file '{filename}'.\n"
msgstr "Eccezione rilevata alla linea `{linenumber}` del file '{filename}'.\n"

#: core.py:384
msgid "Execution stopped on line `{linenumber}` of code block {filename}.\n"
msgstr ""
"L'esecuzione si è arrestata alla linea `{linenumber}` della porzione di "
"codice {filename}.\n"

#: core.py:388
msgid "Execution stopped on line `{linenumber}` of file '{filename}'.\n"
msgstr ""
"L'esecuzione si è arrestata alla linea `{linenumber}` del file "
"'{filename}'.\n"

#: core.py:412
msgid "Code block {filename}, line `{line}`"
msgstr "File {filename}, linea `{line}`"

#: core.py:416
msgid "File '{filename}', line `{line}`"
msgstr "File '{filename}', linea `{line}`"

#: core.py:430
msgid "The entire content of `{filename}` is not available.\n"
msgstr "L'intero contenuto di `{filename}` non è disponibile.\n"

#: core.py:444
msgid "Python could not understand the code in the code block {filename}\n"
msgstr "L'interprete Python non comprende la porzione di codice {filename}.\n"

#: core.py:448
msgid ""
"Python could not understand the code in the file\n"
"'{filename}'\n"
msgstr ""
"Python non riesce ad interpretare il codice contenuto nel file '{filename}'\n"

#: core.py:453
msgid "at the location indicated.\n"
msgstr "nella posizione indicata.\n"

#: core.py:689
msgid ""
"Unfortunately, no additional information is available:\n"
"the content of file '<stdin>' is not accessible.\n"
msgstr ""
"Ci dispiace, ma non sono disponibili informazioni aggiuntive:\n"
"il contenuto del file '<stdin>' non è accessibile.\n"

#: debug_helper.py:41
msgid "Fatal error - aborting"
msgstr ""

#: debug_helper.py:42
msgid "Please report this issue."
msgstr ""

#: frame_info.py:85
msgid "Problem: source of `{filename}` is not available\n"
msgstr "Problema: il codice sorgente del file `{filename}` non è disponibile\n"

#: ft_console.py:30
msgid "Use exit() or Ctrl-Z plus Return to exit."
msgstr ""

#: ft_console.py:32
msgid "Use exit() or Ctrl-D to exit."
msgstr ""

#: ft_console.py:33
msgid "Type 'Friendly' for help on special functions/methods."
msgstr "Digita 'Friendly' per supporto su funzioni o metodi speciali."

#: ft_gettext.py:82
msgid ""
"Please report this example to\n"
"https://github.com/friendly-traceback/friendly-traceback/issues/new\n"
"If you are using a REPL, use `www('bug')` to do so.\n"
"\n"
msgstr ""
"Cortesemente riporta questo esempio su https://github.com/friendly-traceback/"
"friendly-traceback/issues/new\n"
"Se stai usando REPL, usa il comando `www('bug')` per farlo.\n"

#: ft_gettext.py:90
msgid "Friendly-traceback does not know the cause of this error.\n"
msgstr "Friendly-traceback non conosce la causa di questo errore. \n"

#: ft_gettext.py:96
msgid "No information is known about this exception.\n"
msgstr "Non ci sono informazioni disponibili per questa eccezione.\n"

#: ft_gettext.py:98
msgid ""
"If you are using the Friendly console, use `www()` to\n"
"do an Internet search for this particular case.\n"
msgstr ""
"Se stai usando la console Friendly, usa `www()` per effettuare una ricerca "
"su internet per questo caso particolare.\n"

#: ft_gettext.py:107
msgid "Internal error for Friendly.\n"
msgstr "Errore interno per Friendly.\n"

#: functions_help.py:10
msgid "Disable friendly-traceback and restore previous exception hook."
msgstr ""

#: functions_help.py:13
msgid "Enable friendly-traceback as an exception hook"
msgstr ""

#: functions_help.py:14
msgid "Shows all the information about the last traceback."
msgstr "Mostra tutte le informazioni riguardo l'ultimo traceback."

#: functions_help.py:18
msgid "Sets the language to be used."
msgstr "Imposta la lingua da utilizzare."

#: functions_help.py:19
msgid "Shows the paths corresponding to synonyms used."
msgstr "Mostra i percorsi corrispondenti ai sinonimi utilizzati."

#: functions_help.py:20
msgid "Shows the generic meaning of a given exception."
msgstr "Mostra il significato generale di una eccezione."

#: functions_help.py:21
msgid "Shows where an exception was raised."
msgstr "Mostra il punto in cui è stata sollevata una eccezione."

#: functions_help.py:22
msgid "Shows the likely cause of the exception."
msgstr "Mostra la probabile causa dell'eccezione."

#: functions_help.py:23
msgid "Opens a web browser at a useful location."
msgstr "Apre un browser web ad un indirizzo utile."

#: functions_help.py:24
msgid "Suggestion sometimes added to a friendly traceback."
msgstr ""

#: functions_help.py:25
msgid "Shows a normal Python traceback."
msgstr "Mostra un traceback Python standard."

#: functions_help.py:26
msgid "Shows a simplified Python traceback."
msgstr "Mostra un traceback Python semplificato."

#: functions_help.py:27
msgid "Returns the current value used for items to include by default."
msgstr ""
"Restituisce l'attuale valore utilizzato per gli elementi da includere da "
"standard."

#: functions_help.py:30
msgid "Sets the items to show by default when an exception is raised."
msgstr ""
"Imposta gli elementi da mostrare da standard quando viene sollevata una "
"eccezione."

#: functions_help.py:33
msgid "Returns the language currently used."
msgstr "Restituisce la lingua utilizzata."

#: functions_help.py:34
msgid "Sets the formatter to use for display."
msgstr "Imposta il formatter da utilizzare per mostrare l'output."

#: functions_help.py:35
msgid "Use True (default) or False to enable debugging methods."
msgstr "Usa True (predefinito) o False per abilitare i metodi di debug."

#: info_generic.py:43
#, fuzzy
#| msgid "An exception of type `{name}` is a subclass of `{parent}`.\n"
msgid "A warning of type `{name}` is a subclass of `{parent}`.\n"
msgstr "Un'eccezione di tipo `{name}` è una sottoclasse di `{parent}`.\n"

#: info_generic.py:47
msgid "An exception of type `{name}` is a subclass of `{parent}`.\n"
msgstr "Un'eccezione di tipo `{name}` è una sottoclasse di `{parent}`.\n"

#: info_generic.py:50
msgid "Nothing more specific is known about `{name}`."
msgstr ""

#: info_generic.py:54
msgid ""
"The inheritance is as follows:\n"
"\n"
"    {tree}\n"
msgstr ""

#: info_generic.py:97
msgid ""
"All built-in exceptions defined by Python are derived from `Exception`.\n"
"All user-defined exceptions should also be derived from this class.\n"
msgstr ""

#: info_generic.py:105
msgid ""
"`BaseException` is the base class for all built-in exceptions.\n"
"It is not meant to be directly inherited by user-defined classes.\n"
msgstr ""

#: info_generic.py:113
msgid ""
"`ArithmeticError` is the base class for those built-in exceptions\n"
"that are raised for various arithmetic errors.\n"
msgstr ""

#: info_generic.py:121
msgid ""
"In Python, the keyword `assert` is used in statements of the form\n"
"`assert condition`, to confirm that `condition` is not `False`,\n"
"nor equivalent to `False` such as an empty list, etc.\n"
"\n"
"If `condition` is `False` or equivalent, an `AssertionError` is raised.\n"
msgstr ""

#: info_generic.py:131
msgid ""
"An `AttributeError` occurs when the code contains something like\n"
"    `object.x`\n"
"and `x` is not a method or attribute (variable) belonging to `object`.\n"
msgstr ""

#: info_generic.py:140
msgid ""
"An `EOFError` is raised when the `input()` function hits\n"
"an end-of-file condition (EOF) without reading any data.\n"
msgstr ""

#: info_generic.py:148
msgid ""
"A `FileNotFoundError` exception indicates that you\n"
"are trying to open a file that cannot be found by Python.\n"
"This could be because you misspelled the name of the file.\n"
msgstr ""
"Una eccezione di tipo `FileNotFoundError` indica che si sta cercando di "
"aprire un file che non viene trovato da Python. Ciò può avvenire perché hai "
"magari digitato male il nome del file.\n"

#: info_generic.py:157
msgid ""
"An `ImportError` exception indicates that a certain object could not\n"
"be imported from a module or package. Most often, this is\n"
"because the name of the object is not spelled correctly.\n"
msgstr ""

#: info_generic.py:166
msgid ""
"An `IndentationError` occurs when a given line of code is\n"
"not indented (aligned vertically with other lines) as expected.\n"
msgstr ""

#: info_generic.py:174
msgid ""
"An `IndexError` occurs when you try to get an item from a list,\n"
"a tuple, or a similar object (sequence), and use an index which\n"
"does not exist; typically, this happens because the index you give\n"
"is greater than the length of the sequence.\n"
msgstr ""

#: info_generic.py:184
msgid ""
"A `KeyError` is raised when a value is not found as a\n"
"key in a Python dict or in a similar object.\n"
msgstr ""
"Un errore del tipo `KeyError` viene sollevato quando un valore non è trovato "
"in un oggetto di tipo dizionario Python oppure in un oggetto simile. \n"

#: info_generic.py:192
msgid ""
"`LookupError` is the base class for the exceptions that are raised\n"
"when a key or index used on a mapping or sequence is invalid.\n"
"It can also be raised directly by codecs.lookup().\n"
msgstr ""

#: info_generic.py:201
msgid ""
"Like the name indicates, a `MemoryError` occurs when Python\n"
"runs out of memory. This can happen if you create an object\n"
"that is too big, like a list with too many items.\n"
msgstr ""

#: info_generic.py:210
msgid ""
"A `ModuleNotFoundError` exception indicates that you\n"
"are trying to import a module that cannot be found by Python.\n"
"This could be because you misspelled the name of the module\n"
"or because it is not installed on your computer.\n"
msgstr ""

#: info_generic.py:220
msgid ""
"A `NameError` exception indicates that a variable or\n"
"function name is not known to Python.\n"
"Most often, this is because there is a spelling mistake.\n"
"However, sometimes it is because the name is used\n"
"before being defined or given a value.\n"
msgstr ""

#: info_generic.py:231
msgid ""
"An `OSError` exception is usually raised by the Operating System\n"
"to indicate that an operation is not allowed or that\n"
"a resource is not available.\n"
msgstr ""

#: info_generic.py:240
msgid ""
"An `OverflowError` is raised when the result of an arithmetic operation\n"
"is too large to be handled by the computer's processor.\n"
msgstr ""

#: info_generic.py:248
msgid ""
"A `RecursionError` is raised when a function calls itself,\n"
"directly or indirectly, too many times.\n"
"It almost always indicates that you made an error in your code\n"
"and that your program would never stop.\n"
msgstr ""

#: info_generic.py:258
msgid ""
"A `RuntimeError` is raised when an error is detected that doesn't fall in "
"any\n"
"of the more specific exception types defined by Python.\n"
msgstr ""

#: info_generic.py:266
msgid ""
"`StopIteration` is raised to indicate that an iterator has no more\n"
"item to provide when its `__next__` method is called by\n"
"the `next()` builtin function.\n"
msgstr ""

#: info_generic.py:275
msgid "A `SyntaxError` occurs when Python cannot understand your code.\n"
msgstr ""
"Un errore di tipo `SyntaxError` accade quando Python non riesce ad "
"interpretare il tuo codice.\n"

#: info_generic.py:280
msgid ""
"A `TabError` indicates that you have used both spaces\n"
"and tab characters to indent your code.\n"
"This is not allowed in Python.\n"
"Indenting your code means to have block of codes aligned vertically\n"
"by inserting either spaces or tab characters at the beginning of lines.\n"
"Python's recommendation is to always use spaces to indent your code.\n"
msgstr ""

#: info_generic.py:292
msgid ""
"A `TypeError` is usually caused by trying\n"
"to combine two incompatible types of objects,\n"
"by calling a function with the wrong type of object,\n"
"or by trying to do an operation not allowed on a given type of object.\n"
msgstr ""

#: info_generic.py:302
msgid ""
"A `ValueError` indicates that a function or an operation\n"
"received an argument of the right type, but an inappropriate value.\n"
msgstr ""

#: info_generic.py:310
msgid ""
"In Python, variables that are used inside a function are known as \n"
"local variables. Before they are used, they must be assigned a value.\n"
"A variable that is used before it is assigned a value is assumed to\n"
"be defined outside that function; it is known as a `global`\n"
"(or sometimes `nonlocal`) variable. You cannot assign a value to such\n"
"a global variable inside a function without first indicating to\n"
"Python that this is a global variable, otherwise you will see\n"
"an `UnboundLocalError`.\n"
msgstr ""

#: info_generic.py:324
msgid ""
"A `ZeroDivisionError` occurs when you are attempting to divide a value\n"
"by zero either directly or by using some other mathematical operation.\n"
msgstr ""
"Un `ZeroDivisionError` viene riscontrato quando si sta tentando di dividere "
"un valore per zero, sia direttamente sia mediante l'utilizzo di una funzione "
"matematica. \n"

#: info_generic.py:332
msgid "`UserWarning` is the default class for `warnings.warn()`.\n"
msgstr ""

#: info_generic.py:337
msgid ""
"`SyntaxWarning` often indicates that your code will likely not give the "
"result you expect.\n"
msgstr ""

#: info_generic.py:344
msgid ""
"`DeprecationWarning` indicates that some feature will not be available in a "
"future version.\n"
msgstr ""

#: info_generic.py:351
msgid ""
"`RuntimeWarning` often indicates some not recommended runtime features.\n"
msgstr ""

#: info_generic.py:358
msgid ""
"`FutureWarning` is the base category for features that will likely be "
"deprecated\n"
"in future Python versions.\n"
msgstr ""

#: info_generic.py:366
msgid ""
"`UnicodeWarning` is the base category for warnings related to unicode.\n"
msgstr ""

#: info_generic.py:371
msgid ""
"`BytesWarning` is the base category for warnings related to bytes and "
"bytearray.\n"
msgstr ""

#: info_generic.py:378
msgid "`Warning` is the base class of all warning category classes.\n"
msgstr ""

#: info_variables.py:69
msgid "a complex number"
msgstr "un numero complesso"

#: info_variables.py:70
msgid "a dictionary (`dict`)"
msgstr "un tipo dizionario (`dict`)"

#: info_variables.py:71
msgid "a number (`float`)"
msgstr "un numero (`float`)"

#: info_variables.py:72
msgid "a `frozenset`"
msgstr "un `frozenset`"

#: info_variables.py:73
msgid "an integer (`int`)"
msgstr "un intero (`int`)"

#: info_variables.py:74
msgid "a `list`"
msgstr "una `list`"

#: info_variables.py:75
msgid "a variable equal to `None` (`NoneType`)"
msgstr "una variabile uguale a `None` (`NoneType`)"

#: info_variables.py:76
msgid "a `set`"
msgstr "un `set`"

#: info_variables.py:77 info_variables.py:78
msgid "a string (`str`)"
msgstr "una stringa (`str`)"

#: info_variables.py:79
msgid "a `tuple`"
msgstr "una `tuple`"

#: info_variables.py:357
msgid "Friendly warning: you have redefined the python builtin `{name}`.\n"
msgstr ""

#: info_variables.py:531
msgid "Object too large to be processed by Python."
msgstr ""

#: info_variables.py:535
msgid "Unable to compute."
msgstr ""

#: info_variables.py:592
msgid ""
"A type hint found for `{name}` in the {scope} scope.\n"
"Perhaps you had used a colon instead of an equal sign and wrote\n"
"\n"
"    {name} : {hint}\n"
"\n"
"instead of\n"
"\n"
"    {name} = {hint}\n"
msgstr ""

#: path_info.py:213
msgid "The default directory is {dirname}."
msgstr "La cartella standard è {dirname}."

#: runtime_errors\attribute_error.py:32 runtime_errors\attribute_error.py:79
#: runtime_errors\attribute_error.py:117
msgid "Did you give your program the same name as a Python module?\n"
msgstr "Hai dato al tuo programma lo stesso nome di un modulo Python?\n"

#: runtime_errors\attribute_error.py:33 runtime_errors\attribute_error.py:80
msgid ""
"I suspect that you used the name `{module}.py` for your program\n"
"and that you also wanted to import a module with the same name\n"
"from Python's standard library.\n"
"If so, you should use a different name for your program.\n"
msgstr ""

#: runtime_errors\attribute_error.py:42 runtime_errors\import_error.py:63
msgid "You have a circular import.\n"
msgstr "Hai una referenza circolare.\n"

#: runtime_errors\attribute_error.py:46 runtime_errors\attribute_error.py:88
msgid "You likely have a circular import.\n"
msgstr "Probabilmente c'è una referenza circolare.\n"

#: runtime_errors\attribute_error.py:47
msgid "Python indicated that the module `{module}` was not fully imported.\n"
msgstr ""
"Python rileva che il modulo `{module}` non è stato importato completamente.\n"

#: runtime_errors\attribute_error.py:48 runtime_errors\attribute_error.py:89
msgid ""
"This can occur if, during the execution of the code in module `{module}`\n"
"an attempt is made to import the same module again.\n"
msgstr ""

#: runtime_errors\attribute_error.py:72
msgid ""
"This should not happen:\n"
"Python tells us that module `{module}` does not have an attribute named "
"`{attribute}`.\n"
"However, it does not appear that module `{module}` was imported.\n"
msgstr ""

#: runtime_errors\attribute_error.py:98 runtime_errors\attribute_error.py:106
#: runtime_errors\attribute_error.py:139 runtime_errors\attribute_error.py:405
#: runtime_errors\import_error.py:106 runtime_errors\key_error.py:184
#: runtime_errors\key_error.py:191 runtime_errors\module_not_found_error.py:121
#: runtime_errors\name_error.py:111 runtime_errors\unbound_local_error.py:54
#: syntax_errors\message_analyzer.py:459 syntax_errors\message_analyzer.py:1151
#: syntax_errors\statement_analyzer.py:1389
msgid "Did you mean `{name}`?\n"
msgstr "Intendevi `{name}`?\n"

#: runtime_errors\attribute_error.py:99
msgid ""
"Perhaps you meant to write `{module}.{correct}` instead of `{module}.{typo}"
"`\n"
msgstr ""
"Forse intendevi scrivere `{module}.{correct}` invece di `{module}.{typo}`\n"

#: runtime_errors\attribute_error.py:107
msgid ""
"Instead of writing `{module}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of module `{module}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:118
msgid ""
"You imported a module named `{module}` from `{mod_path}`.\n"
"There is also a module named `{module}` in Python's standard library.\n"
"Perhaps you need to rename your module.\n"
msgstr ""

#: runtime_errors\attribute_error.py:140
msgid ""
"Perhaps you meant to use the attribute `{attribute}` of \n"
"module `{mod_name}` instead of module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:146
msgid "Did you mean one of the following modules: `{names}`?"
msgstr "Intendevi uno dei seguenti moduli `{names}`?"

#: runtime_errors\attribute_error.py:149
msgid ""
"Instead of the module `{module}`, perhaps you wanted to use\n"
"the attribute `{attribute}` of one of the following modules:\n"
"`{names}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:158
msgid ""
"Python tells us that no object with name `{attribute}` is\n"
"found in module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:179
msgid "`add_note()` is only allowed for Python version 3.11 and newer.\n"
msgstr ""

#: runtime_errors\attribute_error.py:180
msgid "You are using Python version {version}.\n"
msgstr ""

#: runtime_errors\attribute_error.py:197
msgid ""
"You are attempting to access the attribute `{attr}`\n"
"for a variable whose value is `None`."
msgstr ""

#: runtime_errors\attribute_error.py:222
msgid ""
"The value of attribute `{attribute}` of objects of type `{obj_type}`\n"
"cannot be changed.\n"
"I have no further information.\n"
msgstr ""

#: runtime_errors\attribute_error.py:241
msgid ""
"Object `{name}` uses an empty `__slots__` to prevent the modification\n"
"of any of its attributes.\n"
msgstr ""

#: runtime_errors\attribute_error.py:247
msgid ""
"Object `{name}` uses `__slots__` to specify which attributes can\n"
"be changed. The value of attribute `{name}.{attribute}` cannot be changed.\n"
msgstr ""

#: runtime_errors\attribute_error.py:272
msgid ""
"`{obj_name}` is a function. Perhaps you meant to write\n"
"`{obj_name}({attribute})`\n"
msgstr ""

#: runtime_errors\attribute_error.py:276
msgid "Did you mean `{obj_name}({attribute})`?\n"
msgstr "Intendevi `{obj_name}({attribute})`?\n"

#: runtime_errors\attribute_error.py:281
msgid ""
"`{obj_name}` is a Python built-in function or method\n"
"which does not have an attribute named `{attribute}.`\n"
msgstr ""

#: runtime_errors\attribute_error.py:300
msgid ""
"An object of type `{obj_type}` has no attribute named `{attr}`.\n"
"Unfortunately I cannot find such an object on the line where\n"
"the problem occurs.\n"
msgstr ""

#: runtime_errors\attribute_error.py:328
msgid ""
"An object of type `{obj_type}` has no attribute named `{attr}`.\n"
"\n"
"I cannot give additional information:\n"
"I found one object of this type in the current scope\n"
"but it does not appear to be the object causing the problem.\n"
msgstr ""

#: runtime_errors\attribute_error.py:337
msgid ""
"An object of type `{obj_type}` has no attribute named `{attr}`.\n"
"\n"
"The following objects might be the cause of the problem: \n"
"{names}.\n"
msgstr ""

#: runtime_errors\attribute_error.py:377
msgid "The object `{obj}` has no attribute named `{attr}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:381
msgid ""
"Note that object `{obj}` uses `__slots__` which prevents\n"
"the creation of new attributes.\n"
msgstr ""

#: runtime_errors\attribute_error.py:389
msgid ""
"The following are some of its known attributes:\n"
"`{names}`."
msgstr ""

#: runtime_errors\attribute_error.py:401
msgid "The object `{obj_name}` has no attribute named `{attribute}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:406
msgid ""
"Perhaps you meant to write `{obj}.{correct}` instead of `{obj}.{typo}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:412 runtime_errors\import_error.py:113
msgid "Did you mean one of the following: `{names}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:413
msgid ""
"Instead of writing `{obj}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of object `{obj}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:438 syntax_errors\message_analyzer.py:1817
#: syntax_errors\message_analyzer.py:1830
msgid "Did you write a comma by mistake?\n"
msgstr ""

#: runtime_errors\attribute_error.py:439
msgid ""
"`{obj_name}` is a tuple that contains a single item\n"
"which does have `'{attribute}'` as an attribute.\n"
"Perhaps you added a trailing comma by mistake at the end of the line\n"
"where you defined `{obj_name}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:452
msgid "Did you mean `{str_content}.join({obj_name})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:453
msgid ""
"The object `{obj_name}` has no attribute named `join`.\n"
"Perhaps you wanted something like `{str_content}.join({obj_name})`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:476
msgid "Did you mean `{known_builtin}({obj_name})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:479
msgid ""
"The object `{obj_name}` has no attribute named `{attribute}`.\n"
"Perhaps you can use the Python builtin function `{known_builtin}` instead:\n"
"`{known_builtin}({obj_name})`."
msgstr ""

#: runtime_errors\attribute_error.py:508
msgid "Did you mean `{attr}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:509
msgid "The object `{name}` has no attribute named `{attribute}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:513
msgid "However, `{attr}` is an attribute of `{name}` with a similar meaning.\n"
msgstr ""

#: runtime_errors\attribute_error.py:517
msgid ""
"However, `{name}` has the following attributes with similar meanings:\n"
"`{attributes}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:526
msgid "Did you mean to separate object names by a comma?\n"
msgstr ""

#: runtime_errors\attribute_error.py:528
msgid ""
"`{second}` is not an attribute of `{first}`.\n"
"However, both `{first}` and `{second}` are known objects.\n"
"Perhaps you wrote a period to separate these two objects, \n"
"instead of using a comma.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:25
#: runtime_errors\file_not_found_error.py:36
msgid ""
"In your program, the name of the\n"
"file that cannot be found is `{filename}`.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:32
msgid ""
"{directory}\n"
"is not a valid directory.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:41
msgid ""
"It was expected to be found in the\n"
"`{directory}` directory.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:45
msgid "Did you mean `{similar}`?\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:47
msgid "The file `{similar}` has a similar name.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:52
msgid "Perhaps you meant one of the following files with similar names:\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:59 runtime_errors\name_error.py:131
msgid "I have no additional information for you.\n"
msgstr ""

#: runtime_errors\import_error.py:66
msgid ""
"The object that could not be imported is `{name}`.\n"
"The module or package where it was \n"
"expected to be found is `{module}`.\n"
msgstr ""

#: runtime_errors\import_error.py:83
msgid ""
"Python indicated that you have a circular import.\n"
"This can occur if executing the code in module 'A'\n"
"results in executing the code in module 'B' where\n"
"an attempt to import a name from module 'A' is made\n"
"before the execution of the code in module 'A' had been completed.\n"
msgstr ""

#: runtime_errors\import_error.py:95
msgid ""
"Inconsistent state: `'{module}'` was apparently not imported.\n"
"As a result, no further analysis can be done.\n"
msgstr ""

#: runtime_errors\import_error.py:107
msgid ""
"Perhaps you meant to import `{correct}` (from `{module}`) instead of `{typo}"
"`\n"
msgstr ""

#: runtime_errors\import_error.py:116
msgid ""
"Instead of trying to import `{typo}` from `{module}`, \n"
"perhaps you meant to import one of \n"
"the following names which are found in module `{module}`:\n"
"`{candidates}`\n"
msgstr ""

#: runtime_errors\import_error.py:134
msgid "The object that could not be imported is `{name}`.\n"
msgstr ""

#: runtime_errors\import_error.py:186
msgid ""
"The problem was likely caused by what is known as a 'circular import'.\n"
"First, Python imported and started executing the code in file\n"
"   '{file}'.\n"
"which imports module `{last_module}`.\n"
"During this process, the code in another file,\n"
"   '{last_file}'\n"
"was executed. However in this last file, an attempt was made\n"
"to import the original module `{last_module}`\n"
"a second time, before Python had completed the first import.\n"
msgstr ""

#: runtime_errors\index_error.py:36
msgid ""
"You have tried to assign a value to an item of an object\n"
"of type `{obj_type}` which I cannot identify.\n"
"The index you gave was not an allowed value.\n"
msgstr ""

#: runtime_errors\index_error.py:46
msgid ""
"You have tried to assign a value to index `{index}` of `{name}`,\n"
"{obj_type} of length `{length}`.\n"
msgstr ""

#: runtime_errors\index_error.py:57 runtime_errors\index_error.py:145
msgid ""
"The valid index values of `{name}` are integers ranging from\n"
"`{min}` to `{max}`.\n"
msgstr ""

#: runtime_errors\index_error.py:62 runtime_errors\index_error.py:150
msgid ""
"Remember: the first item of {obj_type} is not at index 1 but at index 0.\n"
msgstr ""

#: runtime_errors\index_error.py:67 runtime_errors\index_error.py:155
msgid "`{name}` contains no item.\n"
msgstr ""

#: runtime_errors\index_error.py:68
msgid ""
"You have tried to assign a value to index `{index}` of `{name}`,\n"
"{obj_type} which contains no item.\n"
msgstr ""

#: runtime_errors\index_error.py:80
msgid ""
"You have tried to get an item of an object\n"
"of type `{obj_type}` which I cannot identify.\n"
"The index you gave was not an allowed value.\n"
msgstr ""

#: runtime_errors\index_error.py:125
msgid ""
"You have tried to get an item from `{name}`,\n"
"{obj_type} of length `{length}`, by using a value for the index\n"
"that I cannot determine but which is not allowed.\n"
msgstr ""

#: runtime_errors\index_error.py:134
msgid ""
"You have tried to get the item with index `{index}` of `{name}`,\n"
"{obj_type} of length `{length}`.\n"
msgstr ""

#: runtime_errors\index_error.py:156
msgid ""
"You have tried to get the item with index `{index}` of `{name}`,\n"
"{obj_type} which contains no item.\n"
msgstr ""

#: runtime_errors\key_error.py:23
msgid ""
"You tried to retrieve an item from an empty `dict`\n"
"or a similar object which I cannot identify.\n"
msgstr ""

#: runtime_errors\key_error.py:29
msgid "`{name}` is an empty `dict`.\n"
msgstr ""

#: runtime_errors\key_error.py:30
msgid "You tried to retrieve an item from `{name}` which is an empty `dict`.\n"
msgstr ""

#: runtime_errors\key_error.py:49
msgid ""
"You tried to retrieve an item from an empty ChainMap\n"
"or similar object which I cannot identify.\n"
msgstr ""

#: runtime_errors\key_error.py:55
msgid "`{name}` is an empty `ChainMap`.\n"
msgstr ""

#: runtime_errors\key_error.py:56
msgid ""
"You tried to retrieve an item from `{name}` which is an empty `ChainMap`.\n"
msgstr ""

#: runtime_errors\key_error.py:97
msgid "Missing key `{key}` in a `ChainMap` or in a similar object.\n"
msgstr ""

#: runtime_errors\key_error.py:137
msgid ""
"A `dict` or a similar object which I cannot identify\n"
"does not have `{key}` as a key.\n"
msgstr ""

#: runtime_errors\key_error.py:144
msgid "The key `{key}` cannot be found in the dict `{name}`.\n"
msgstr ""

#: runtime_errors\key_error.py:149
msgid ""
"The key `{key}` cannot be found in `{name}`, an object of type `{obj_type}"
"`.\n"
msgstr ""

#: runtime_errors\key_error.py:159
msgid ""
"`{name}` contains a string key which is identical to `str({key})`.\n"
"Perhaps you forgot to convert the key into a string.\n"
msgstr ""

#: runtime_errors\key_error.py:163
msgid "Did you forget to convert `{key}` into a string?\n"
msgstr ""

#: runtime_errors\key_error.py:172
msgid ""
"`{key}` is a string.\n"
"There is a key of `{name}` whose string representation\n"
"is identical to `{key}`.\n"
msgstr ""

#: runtime_errors\key_error.py:177
msgid "Did you convert `{key}` into a string by mistake?\n"
msgstr ""

#: runtime_errors\key_error.py:185
msgid "`{name}` is a key of `{dict_}` which is similar to `{key}`.\n"
msgstr ""

#: runtime_errors\key_error.py:193
msgid ""
"`{name}` has some keys similar to `{key}` including:\n"
"`{names}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:35
msgid ""
"No additional information available since `{name}` cannot be imported.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:46
msgid "Did you mean `from {name} import {rest}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:49
msgid ""
"`{rest}` is not a separate module but an object that is part of `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:59
msgid "Did you mean `import {name}.{attr}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:62
msgid ""
"Perhaps you meant `import {name}.{attr}`.\n"
"`{attr}` is a name similar to `{rest}` and is a module that\n"
"can be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:70
msgid "Did you mean `from {name} import {attr}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:73
msgid ""
"Perhaps you meant `from {name} import {attr}`.\n"
"`{attr}` is a name similar to `{rest}` and is an object that\n"
"can be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:80
msgid ""
"Other objects with similar names that are part of\n"
" `{name}` include `{others}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:86
msgid "`{rest}` cannot be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:95
msgid "The curses module is rarely installed with Python on Windows.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:97
msgid "The curses module is often not installed with Python.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:98
msgid "You have tried to import the curses module.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:114
msgid ""
"No module named `{name}` can be imported.\n"
"Perhaps you need to install it.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:123
msgid ""
"The following existing modules have names that are similar \n"
"to the module you tried to import: `{names}`\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:128
msgid "`{name}` is an existing module that has a similar name.\n"
msgstr ""

#: runtime_errors\name_error.py:19
msgid "You are already using Python!"
msgstr ""

#: runtime_errors\name_error.py:34
msgid ""
"`{name}` is a name found in module `{mod}`.\n"
"Perhaps you forgot to write\n"
"\n"
"    from {mod} import {name}\n"
msgstr ""

#: runtime_errors\name_error.py:38
msgid ""
"`{name}` is a name found in the following modules:\n"
"{modules}.\n"
"Perhaps you forgot to import `{name}` from one of these modules.\n"
msgstr ""

#: runtime_errors\name_error.py:61
msgid ""
"In your program, `{var_name}` is an unknown name\n"
"that exists in an enclosing scope,\n"
"but has not yet been assigned a value.\n"
msgstr ""

#: runtime_errors\name_error.py:88 runtime_errors\name_error.py:147
msgid "In your program, no object with the name `{var_name}` exists.\n"
msgstr ""

#: runtime_errors\name_error.py:107
#, fuzzy
#| msgid "Did you mean `{name}`?\n"
msgid " Or did you mean `{name}`?\n"
msgstr "Intendevi `{name}`?\n"

#: runtime_errors\name_error.py:113
msgid "Did you use a colon instead of an equal sign?\n"
msgstr ""

#: runtime_errors\name_error.py:146
msgid "Did you mean `1j`?\n"
msgstr ""

#: runtime_errors\name_error.py:150
msgid ""
"However, sometimes `{name}` is intended to represent\n"
"the square root of `-1` which is written as `1j` in Python.\n"
msgstr ""

#: runtime_errors\name_error.py:180
#, fuzzy
#| msgid "Did you mean `{name}`?\n"
msgid "Did you mean `{word}`?\n"
msgstr "Intendevi `{name}`?\n"

#: runtime_errors\name_error.py:181
msgid "I suspect you meant to write the keyword `{word}` and made a typo.\n"
msgstr ""

#: runtime_errors\name_error.py:189
msgid "`__debug__` is a constant.\n"
msgstr ""

#: runtime_errors\name_error.py:190
msgid ""
"`__debug__` is a constant that cannot be deleted.\n"
"In future Python versions, attempting to delete it will be a SyntaxError.\n"
msgstr ""

#: runtime_errors\name_error.py:198
msgid "You must be a fan of PyConAu!\n"
msgstr ""

#: runtime_errors\name_error.py:199
msgid ""
"I am guessing that you tried to use (one of) the flipfloperators\n"
"shown during the second Lightning Talk session of PyConAu 2018,\n"
"but that you forgot to install the module from PyPI.\n"
"\n"
"#### Note that it is still a bad idea.\n"
msgstr ""

#: runtime_errors\name_error.py:214 runtime_errors\name_error.py:238
msgid "Did you forget to import `{name}`?\n"
msgstr ""

#: runtime_errors\name_error.py:217
msgid ""
"The name `{name}` is not defined in your program.\n"
"Perhaps you forgot to import `{lowercase}` which is found\n"
"in Python's standard library.\n"
msgstr ""

#: runtime_errors\name_error.py:226
msgid "Note that the name of the module is `{lowercase}` and not `{name}`.\n"
msgstr ""

#: runtime_errors\name_error.py:241
msgid ""
"The name `{name}` is not defined in your program.\n"
"Perhaps you forgot to import `{name}` which is a known library.\n"
msgstr ""

#: runtime_errors\name_error.py:251
#, fuzzy
#| msgid "Did you mean `{name}`?\n"
msgid "Did you forget to import `{true_name}`?\n"
msgstr "Intendevi `{name}`?\n"

#: runtime_errors\name_error.py:256
msgid ""
"The name `{name}` is not defined in your program.\n"
"Perhaps you forgot to write\n"
"\n"
"   import {true_name} as {name}\n"
msgstr ""

#: runtime_errors\name_error.py:275
msgid "The similar name `{name}` was found in the local scope.\n"
msgstr ""

#: runtime_errors\name_error.py:276
msgid "The similar name `{name}` was found in the global scope.\n"
msgstr ""

#: runtime_errors\name_error.py:277
msgid "The Python builtin `{name}` has a similar name.\n"
msgstr ""

#: runtime_errors\name_error.py:286 runtime_errors\unbound_local_error.py:124
msgid "Instead of writing `{name}`, perhaps you meant one of the following:\n"
msgstr ""

#: runtime_errors\name_error.py:291 runtime_errors\unbound_local_error.py:128
msgid "*   Local scope: "
msgstr ""

#: runtime_errors\name_error.py:292
msgid "*   Global scope: "
msgstr ""

#: runtime_errors\name_error.py:293
msgid "*   Python builtins: "
msgstr ""

#: runtime_errors\name_error.py:357
msgid "Did you write `self` at the wrong place?\n"
msgstr ""

#: runtime_errors\name_error.py:358
msgid ""
"The {scope} object `{obj}`\n"
"has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `self.{unknown_name}(...`\n"
"instead of `{unknown_name}(self, ...`.\n"
msgstr ""

#: runtime_errors\name_error.py:365
msgid "Did you forget to add `self.`?\n"
msgstr ""

#: runtime_errors\name_error.py:366
msgid ""
"A {scope} object, `{obj}`,\n"
"has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `self.{unknown_name}`\n"
"instead of `{unknown_name}`.\n"
msgstr ""

#: runtime_errors\name_error.py:373
msgid "Did you forget to add `{name}.`?\n"
msgstr ""

#: runtime_errors\name_error.py:374
msgid ""
"The {scope} object `{name}`\n"
"has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `{name}.{unknown_name}`\n"
"instead of `{unknown_name}`.\n"
msgstr ""

#: runtime_errors\os_error.py:19
msgid ""
"I suspect that you are trying to connect to a server and\n"
"that a connection cannot be made.\n"
"\n"
"If that is the case, check for typos in the URL\n"
"and check your internet connectivity.\n"
msgstr ""

#: runtime_errors\os_error.py:37 syntax_errors\message_analyzer.py:1902
msgid "Perhaps you need to double the backslash characters.\n"
msgstr ""

#: runtime_errors\os_error.py:38
msgid ""
"I suspect that you wrote a filename or path that contains\n"
"at least one backslash character, `\\`.\n"
"Python likely interpreted this as indicating the beginning of\n"
"what is known as an escape sequence.\n"
"To solve the problem, either write a so-called 'raw string'\n"
"by adding the letter `r` as a prefix in\n"
"front of the filename or path, or replace all single backslash\n"
"characters, `\\`, by double ones: `\\\\`.\n"
msgstr ""

#: runtime_errors\runtime_error.py:48
msgid ""
"While you were iterating over the items of `{name}` ({container_type})\n"
"in a `{for_while}` loop, you either tried to add or remove items from it.\n"
"Suggestion: start by making a copy of `{name}` and iterate over the items\n"
"of that copy if you want to change `{name}` inside a loop.\n"
"You might want to do this as follows:\n"
"\n"
"    my_{name} = {name}.copy()\n"
"    for item in my_{name}:\n"
"        # Change {name}\n"
msgstr ""

#: runtime_errors\runtime_error.py:59
msgid ""
"While you were iterating over the items of a container ({container_type})\n"
"in a `{for_while}` loop, you either tried to add or remove items from it.\n"
"Suggestion: start by making a copy of the container and iterate over the "
"items\n"
"of that copy if you want to change that container inside a loop.\n"
msgstr ""

#: runtime_errors\type_error.py:54
msgid "Did you forget to convert the string `{name}` into {number_type}?\n"
msgstr ""

#: runtime_errors\type_error.py:59
msgid "Perhaps you forgot to convert the string `{name}` into {number_type}.\n"
msgstr ""

#: runtime_errors\type_error.py:71
msgid "You cannot use complex numbers with the modulo operator `%`.\n"
msgstr ""

#: runtime_errors\type_error.py:88 runtime_errors\type_error.py:102
msgid ""
"The arguments of `divmod` must be integers (`int`) or real (`float`) "
"numbers.\n"
msgstr ""

#: runtime_errors\type_error.py:93 runtime_errors\type_error.py:106
msgid "At least one of the arguments was a complex number.\n"
msgstr ""

#: runtime_errors\type_error.py:123
msgid "The second argument of the function `getattr()` must be a string.\n"
msgstr ""

#: runtime_errors\type_error.py:128
msgid "The second argument of the function `hasattr()` must be a string.\n"
msgstr ""

#: runtime_errors\type_error.py:131
msgid "Some attribute of a function you called is expected to be a string.\n"
msgstr ""

#: runtime_errors\type_error.py:152 runtime_errors\type_error.py:175
msgid ""
"You tried to concatenate (add) two different types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:205
msgid ""
"You tried to add two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:213
msgid ""
"You tried to subtract two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:221
msgid ""
"You tried to multiply two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:229
msgid ""
"You tried to divide two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:237
msgid ""
"You tried to perform the bitwise operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:252 runtime_errors\type_error.py:854
#: runtime_errors\type_error.py:962 syntax_errors\statement_analyzer.py:1259
#: syntax_errors\statement_analyzer.py:1535
msgid "Did you mean `{line}`?\n"
msgstr ""

#: runtime_errors\type_error.py:253
msgid "Outside of Python, `^` is often used to indicate exponentiation.\n"
msgstr ""

#: runtime_errors\type_error.py:256 runtime_errors\type_error.py:857
msgid "Perhaps you meant `{line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:259
msgid ""
"You tried to perform the bit shifting operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:269
msgid ""
"You tried to exponentiate (raise to a power)\n"
"using two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:278
msgid ""
"You tried to use the operator {operator}\n"
"using two incompatible types of objects:\n"
"{first} and {second}.\n"
"This operator is normally used only\n"
"for multiplication of matrices.\n"
msgstr ""

#: runtime_errors\type_error.py:313
msgid "Complex numbers cannot be ordered.\n"
msgstr ""

#: runtime_errors\type_error.py:314
msgid ""
"You tried to do an order comparison ({operator})\n"
"between two complex numbers.\n"
msgstr ""

#: runtime_errors\type_error.py:320
msgid ""
"You tried to do an order comparison ({operator})\n"
"between two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:348
msgid ""
"`{iter}` is an iterator. You likely needed to write something like\n"
"\n"
"    next({iter}())\n"
"\n"
"or use it in a `for` loop to get a number from it\n"
"before comparing it to {number}.\n"
msgstr ""

#: runtime_errors\type_error.py:380
msgid "Perhaps you meant to write `{operator}=` instead of `={operator}`"
msgstr ""

#: runtime_errors\type_error.py:384
msgid ""
"You tried to use the unary operator '{operator}'\n"
"with the following type of object: {obj}.\n"
"This operation is not defined for this type of object.\n"
msgstr ""

#: runtime_errors\type_error.py:410
msgid ""
"In Python, some objects are known as immutable:\n"
"once defined, their value cannot be changed.\n"
"You tried change part of such an immutable object: {obj},\n"
"most likely by using an indexing operation.\n"
msgstr ""

#: runtime_errors\type_error.py:417
msgid "Did you mean to use a list?\n"
msgstr ""

#: runtime_errors\type_error.py:418
msgid "Perhaps you meant to use a list instead.\n"
msgstr ""

#: runtime_errors\type_error.py:431
msgid ""
"Exceptions must be derived from `BaseException`.\n"
"It is recommended that user-defined exceptions derive from\n"
"`Exception`, a subclass of `BaseException`.\n"
msgstr ""

#: runtime_errors\type_error.py:457
msgid ""
"In an `except` statement, you must only have classes that derive from "
"`BaseException`.\n"
msgstr ""

#: runtime_errors\type_error.py:461
msgid "The following is not a valid classes: `{not_exception}`.\n"
msgstr ""

#: runtime_errors\type_error.py:465
msgid "The following are not valid classes: `{not_exception}`.\n"
msgstr ""

#: runtime_errors\type_error.py:502
msgid ""
"You apparently have called the function `{fn_name}` with\n"
"{nb_given} positional argument(s) while it requires {nb_required}\n"
"such positional argument(s).\n"
msgstr ""

#: runtime_errors\type_error.py:508
msgid "Perhaps you forgot `self` when defining `{fn_name}`.\n"
msgstr ""

#: runtime_errors\type_error.py:528
msgid ""
"You apparently have called the function '{fn_name}' with\n"
"fewer positional arguments than it requires ({nb_required} missing).\n"
msgstr ""

#: runtime_errors\type_error.py:545 runtime_errors\type_error.py:928
#: warning_parsers\syntax_warning.py:21 warning_parsers\syntax_warning.py:69
msgid ""
"\n"
"Note: `NoneType` means that the object has a value of `None`.\n"
msgstr ""

#: runtime_errors\type_error.py:552 warning_parsers\syntax_warning.py:27
msgid ""
"Python indicates that you have an object of type `{obj_type}`,\n"
"followed by something surrounded by parentheses, `(...)`,\n"
"which Python took as an indication of a function call.\n"
"Either the object of type `{obj_type}` was meant to be a function,\n"
"or you forgot a comma before `(...)`.\n"
msgstr ""

#: runtime_errors\type_error.py:574
msgid ""
"The parenthesis `()` following `{obj_name}` are interpreted\n"
"by Python as a function call for `{obj_name}`.\n"
"However, `{obj_name}` is not a function but an object of type `{obj_type}`.\n"
msgstr ""

#: runtime_errors\type_error.py:581
msgid ""
"Because of the surrounding parenthesis, `{fn_call}` \n"
"is interpreted by Python as indicating a function call for \n"
"`{obj_name}`, which is an object of type `{obj_type}`\n"
"which cannot be called.\n"
"\n"
msgstr ""

#: runtime_errors\type_error.py:594
msgid ""
"However, `{fn_call}` is a `tuple`.\n"
"Either the object `{obj_name}` was meant to be a function\n"
"or you have a missing comma between the object `{obj_name}`\n"
"and the tuple `{fn_call}` and meant to write\n"
"`{obj_name}, {fn_call}`.\n"
msgstr ""

#: runtime_errors\type_error.py:601
msgid "Did you forget a comma between `{obj_name}` and `{fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:607
msgid ""
"However, `{obj_name}` is a sequence.\n"
"Perhaps you meant to use `[]` instead of `()` and write\n"
"`{obj_name}[{slice}]`\n"
msgstr ""

#: runtime_errors\type_error.py:612
msgid "Did you mean `{obj_name}[{slice}]`?\n"
msgstr ""

#: runtime_errors\type_error.py:623
msgid ""
"However, both `{obj_name}` and `{fn_call}` are numbers.\n"
"Perhaps you forgot a multiplication operator, `*`,\n"
"and meant to write `{obj_name} * {fn_call}`.\n"
msgstr ""

#: runtime_errors\type_error.py:628
msgid "Did you mean `{obj_name} * {fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:640
msgid "Did you forget to convert `{name}` into an integer?\n"
msgstr ""

#: runtime_errors\type_error.py:641
msgid "Perhaps you forgot to convert `{name}` into an integer.\n"
msgstr ""

#: runtime_errors\type_error.py:653
msgid ""
"You can only multiply sequences, such as list, tuples,\n"
" strings, etc., by integers.\n"
msgstr ""

#: runtime_errors\type_error.py:675
msgid "Did you forget to convert `{name1}` and `{name2}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:678
msgid "Perhaps you forgot to convert `{name1}` and `{name2}` into integers.\n"
msgstr ""

#: runtime_errors\type_error.py:714
msgid ""
"You wrote an object whose value is `None` where an integer was expected.\n"
msgstr ""

#: runtime_errors\type_error.py:724
msgid "You wrote an object of type `{obj}` where an integer was expected.\n"
msgstr ""

#: runtime_errors\type_error.py:734
msgid "Did you forget to convert `{names}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:737
msgid "Perhaps you forgot to convert `{names}` into integers."
msgstr ""

#: runtime_errors\type_error.py:760
msgid ""
"In the expression `{line}`\n"
"what is included between the square brackets, `[...]`,\n"
"must be either an integer or a slice\n"
"(`start:stop` or `start:stop:step`) \n"
"and you have used {obj_type} instead.\n"
msgstr ""

#: runtime_errors\type_error.py:771
msgid ""
"Note: sometimes this exception is raised because what Python\n"
"interprets as indices was meant to be a separate list, and a comma\n"
"should have been written before the opening `[` of that list.\n"
msgstr ""

#: runtime_errors\type_error.py:776 syntax_errors\statement_analyzer.py:1159
#: syntax_errors\statement_analyzer.py:1531
msgid "Did you forget a comma?\n"
msgstr ""

#: runtime_errors\type_error.py:811
msgid ""
"Perhaps you have forgotten a comma between two identical lists\n"
"`{container}`. The second list had been interpreted as\n"
"the indexation of the first one by the index `{new_index}`\n"
msgstr ""

#: runtime_errors\type_error.py:817
msgid ""
"Perhaps you have forgotten a comma between the object `{container}`\n"
"and the list `{index}`.  The list `{index}` had been interpreted as\n"
"the indexation of object `{container}` by the index `{new_index}`\n"
msgstr ""

#: runtime_errors\type_error.py:822
msgid "Did you forget a comma before `{index}`?\n"
msgstr ""

#: runtime_errors\type_error.py:881
msgid ""
"When using a slice to extract a range of elements\n"
"from a sequence, that is something like\n"
"`[start:stop]` or `[start:stop:step]`\n"
"each of `start`, `stop`, `step` must be either an integer, `None`,\n"
"or possibly some other object having an `__index__` method.\n"
msgstr ""

#: runtime_errors\type_error.py:898
msgid ""
"Only hashable objects can be used\n"
"as elements of `set` or keys of `dict`.\n"
"Hashable objects are objects that do not change value\n"
"once they have been created."
msgstr ""

#: runtime_errors\type_error.py:908
msgid "Instead of using {original}, consider using {replacement}.\n"
msgstr ""

#: runtime_errors\type_error.py:934 warning_parsers\syntax_warning.py:75
msgid ""
"Subscriptable objects are typically containers from which\n"
"you can retrieve item using the notation `[...]`.\n"
msgstr ""

#: runtime_errors\type_error.py:946 warning_parsers\syntax_warning.py:79
msgid ""
"Using this notation, you attempted to retrieve an item\n"
"from an object of type `{obj_type}` which is not allowed.\n"
msgstr ""

#: runtime_errors\type_error.py:963
msgid "Perhaps you meant to write `{line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:966
msgid ""
"Using this notation, you attempted to retrieve an item\n"
"from `{name}`, an object of type `{obj_type}`. This is not allowed.\n"
msgstr ""

#: runtime_errors\type_error.py:1000
msgid ""
"An iterable is an object capable of returning its members one at a time.\n"
"Python containers (`list, tuple, dict`, etc.) are iterables.\n"
"'{obj_name}' is not a container. A container is required here.\n"
msgstr ""

#: runtime_errors\type_error.py:1015
msgid ""
"An iterable is an object capable of returning its members one at a time.\n"
"Python containers (`list, tuple, dict`, etc.) are iterables.\n"
"An iterable is required here.\n"
msgstr ""

#: runtime_errors\type_error.py:1030 runtime_errors\value_error.py:25
msgid ""
"Unpacking is a convenient way to assign a name,\n"
"to each item of an iterable.\n"
msgstr ""

#: runtime_errors\type_error.py:1034
msgid ""
"An iterable is an object capable of returning its members one at a time.\n"
"Python containers (`list, tuple, dict`, etc.) are iterables,\n"
"but not objects of type `{obj_type}`.\n"
msgstr ""

#: runtime_errors\type_error.py:1049
msgid ""
"{function} does not accept a sequence as an argument.\n"
"Instead of writing `{line}`\n"
"perhaps you should use the `dict.fromkeys()` method: `{new_line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:1054
msgid "Perhaps you need to use the `dict.fromkeys()` method.\n"
msgstr ""

#: runtime_errors\type_error.py:1092 runtime_errors\type_error.py:1116
msgid "Did you forget to call `{name}`?\n"
msgstr ""

#: runtime_errors\type_error.py:1093 runtime_errors\type_error.py:1117
msgid ""
"I suspect that you forgot to add parentheses to call `{name}`.\n"
"You might have meant to write:\n"
"`{line}`\n"
msgstr ""

#: runtime_errors\type_error.py:1131
msgid ""
"The function `vars` is used to list the content of the\n"
"`__dict__` attribute of an object.\n"
msgstr ""

#: runtime_errors\type_error.py:1140
msgid "Object `{name}` uses `__slots__` instead of `__dict__`.\n"
msgstr ""

#: runtime_errors\type_error.py:1144
msgid ""
"`{name}`, the argument of `vars`, is an object without such an attribute.\n"
msgstr ""

#: runtime_errors\type_error.py:1165
msgid ""
"You have specified the value of argument `{argument}` more than once\n"
"when calling the function named `{function}`.\n"
msgstr ""

#: runtime_errors\type_error.py:1186
msgid "This function has only one argument: `{arguments}`\n"
msgstr ""

#: runtime_errors\type_error.py:1190
msgid ""
"This function has the following arguments:\n"
"`{arguments}`\n"
msgstr ""

#: runtime_errors\type_error.py:1200
msgid ""
"I am guessing that you were trying to count the number of elements\n"
"produced by a generator expression. You first need to capture them\n"
"in a list:\n"
"\n"
msgstr ""

#: runtime_errors\type_error.py:1221
msgid "    {new_line}\n"
msgstr ""

#: runtime_errors\type_error.py:1222
msgid "You likely need to build a list first.\n"
msgstr ""
"You likely need to build a list first.\n"
"\n"

#: runtime_errors\unbound_local_error.py:31
msgid ""
"You're trying to use the name `{name}` identified by Python as being\n"
"in the local scope of a function before having assigned it a value.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:62
msgid ""
"The name `{var_name}` exists in both the global and nonlocal scope.\n"
"This can be rather confusing and is not recommended.\n"
"Depending on which variable you wanted to refer to, you needed to add "
"either\n"
"\n"
"    global {var_name}\n"
"\n"
"or\n"
"\n"
"    nonlocal {var_name}\n"
"\n"
"as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:72
msgid ""
"Did you forget to add either `global {var_name}` or \n"
"`nonlocal {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:84
msgid ""
"`{name}` is a Python builtin function.\n"
"You have tried to assign a value to `{name}` inside a function\n"
"while also using its original meaning in the function.\n"
"\n"
"Note that it is generally not a good idea to give a local variable\n"
"the same name as a Python builtin function (like `{name}`).\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:101
msgid ""
"The name `{var_name}` exists in the {scope} scope.\n"
"Perhaps the statement\n"
"\n"
"    {scope} {var_name}\n"
"\n"
"should have been included as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:108
msgid "Did you forget to add `{scope} {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:119
msgid "The similar name `{name}` was found in the local scope. "
msgstr ""

#: runtime_errors\value_error.py:72 runtime_errors\value_error.py:81
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than {length}, the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:87
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: runtime_errors\value_error.py:105 runtime_errors\value_error.py:115
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:121
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: runtime_errors\value_error.py:137
msgid ""
"`int()` expects an argument that looks like a number in base `{base}`\n"
"but you gave it an empty string.\n"
msgstr ""

#: runtime_errors\value_error.py:143
msgid "`{value}` is an invalid argument for `int()` in base `{base}`.\n"
msgstr ""

#: runtime_errors\value_error.py:159
msgid "The following characters are not allowed: `{invalid}`.\n"
msgstr ""

#: runtime_errors\value_error.py:171
msgid ""
"When base `0` is specified, `int()` expects the argument\n"
"to be an integer literal, written in\n"
"base 2 (`0b...`), 8 (`0o...`), 10, or 16 (`0x...`).\n"
msgstr ""

#: runtime_errors\value_error.py:177
msgid ""
"In base `{base}`, `int()` is most often use to convert a string\n"
"containing the digits `0` to `{max_n}` into an integer.\n"
msgstr ""

#: runtime_errors\value_error.py:182
msgid ""
"In base `11`, `int()` is most often use to convert a string\n"
"containing the digits `0` to `9` and the letter `'a'` into an integer.\n"
msgstr ""

#: runtime_errors\value_error.py:187
msgid ""
"In base `base`, `int()` is most often use to convert a string\n"
"containing the digits `0` to `9` and the letters\n"
"from `'a'` to `'{max_n}'` into an integer.\n"
msgstr ""

#: runtime_errors\value_error.py:203
msgid "You need to convert `'{value}'` to a float first.\n"
msgstr ""

#: runtime_errors\value_error.py:204
msgid ""
"The string `'{value}'` needs to be first converted using `float()`\n"
"before the result can be converted into an integer using `int()`.\n"
msgstr ""

#: runtime_errors\value_error.py:216
msgid ""
"The argument `base` of `int()` must be either zero\n"
"or any integer from 2 to 36.\n"
msgstr ""

#: runtime_errors\value_error.py:224
msgid "You wrote {base} which is not allowed.\n"
msgstr ""

#: runtime_errors\value_error.py:235
msgid "Did you specify an invalid month?\n"
msgstr ""

#: runtime_errors\value_error.py:236
msgid ""
"I am guessing that you specify an invalid value for a month\n"
"in a `date` object. Valid values are integers, from 1 to 12.\n"
msgstr ""

#: runtime_errors\value_error.py:253
msgid ""
"The string `{string}` cannot be converted to a `float`\n"
"as it does not represent a number.\n"
msgstr ""

#: runtime_errors\value_error.py:269
msgid ""
"The name `{var}` is used both as the name of a class variable\n"
"and as a string item in the class `__slots__`;\n"
"this is not allowed.\n"
msgstr ""

#: runtime_errors\value_error.py:281
msgid "The third argument of the function `pow()` cannot be zero.\n"
msgstr ""

#: runtime_errors\value_error.py:310
msgid ""
"I do not recognize this error message.\n"
"I am guessing that the problem is with the function `{name}`.\n"
msgstr ""

#: runtime_errors\value_error.py:316
msgid ""
"Its docstring is:\n"
"\n"
"{docstring}\n"
msgstr ""

#: runtime_errors\value_error.py:320
msgid "I have no more information.\n"
msgstr ""

#: runtime_errors\value_error.py:330
msgid ""
"The value you gave for the time is not in the format you specified.\n"
"Make sure to use the same separator between items\n"
"(for example, between day and month) and keep the order the same\n"
"in both the data provided and the format you specified.\n"
"The following table might be useful:\n"
"https://docs.python.org/3/library/time.html#time.strftime\n"
"The following site might also be useful: https://www.strfti.me/\n"
msgstr ""

#: runtime_errors\value_error.py:365
msgid ""
"You have attempted to remove `{item}` from the list `{the_list}`.\n"
"However, `{the_list}` does not contain `{item}`.\n"
msgstr ""

#: runtime_errors\value_error.py:370
msgid ""
"You have attempted to remove an item from the list `{the_list}`.\n"
"However, `{the_list}` does not contain that item.\n"
msgstr ""

#: runtime_errors\value_error.py:375
msgid ""
"You have attempted to remove an item a list that does not contain such an "
"item.\n"
msgstr ""

#: runtime_errors\value_error.py:391
msgid ""
"An explanation of `{exception}` already exists.\n"
"If you think that a better explanation can be given, please file an issue.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:20
msgid "Using the modulo operator, `%`, you are dividing by zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:21
msgid "You are dividing by zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:41
#: runtime_errors\zero_division_error.py:73
msgid ""
"You are dividing by the following term\n"
"\n"
"    {expression}\n"
"\n"
"which is equal to zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:53
#: runtime_errors\zero_division_error.py:127
msgid "<'expression not found'>"
msgstr ""

#: runtime_errors\zero_division_error.py:54
msgid ""
"The following mathematical expression includes a division by zero:\n"
"\n"
"    {expression}\n"
msgstr ""

#: runtime_errors\zero_division_error.py:85
#: runtime_errors\zero_division_error.py:120
msgid ""
"Using the modulo operator, `%`, you are dividing by the following term\n"
"\n"
"    {expression}\n"
"\n"
"which is equal to zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:93
msgid "The second argument of the `divmod()` function is zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:104
msgid ""
"You are attempting to raise the number 0 to a negative power\n"
"which is equivalent to dividing by zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:128
msgid ""
"The following mathematical expression includes a division by zero\n"
"done using the modulo operator:\n"
"\n"
"    {expression}\n"
msgstr ""

#: runtime_errors\zero_division_error.py:143
msgid "The second argument of the `divmod()` function is equal to zero.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:29
msgid ""
"Currently, I cannot guess the likely cause of this error.\n"
"Try to examine closely the line indicated as well as the line\n"
"immediately above to see if you can identify some misspelled\n"
"word, or missing symbols, like (, ), [, ], :, etc.\n"
"\n"
"Unless your code uses type annotations, which are beyond our scope,\n"
"if you think that this is something which should be handled\n"
"by friendly, please report this case to\n"
"https://github.com/friendly-traceback/friendly-traceback/issues\n"
"\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:72
msgid ""
"Python told us that it expected a colon at the position indicated.\n"
"However, adding a colon or replacing something else by a colon\n"
"would not fix the problem.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:86
msgid ""
"Python gave us the following informative message\n"
"about the possible cause of the error:\n"
"\n"
"    {message}\n"
"\n"
"However, I do not recognize this information and I have\n"
"to guess what caused the problem, but I might be wrong.\n"
"\n"
msgstr ""

#: syntax_errors\error_in_def.py:19 syntax_errors\statement_analyzer.py:20
msgid ""
"However, making such a change would still not correct\n"
"all the syntax errors in the code you wrote.\n"
msgstr ""

#: syntax_errors\error_in_def.py:28
msgid ""
"The correct syntax is:\n"
"\n"
"    {async_}def name ( ... ):"
msgstr ""

#: syntax_errors\error_in_def.py:80
msgid "A function needs a name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:81
msgid "You tried to define a function and did not use the correct syntax.\n"
msgstr ""

#: syntax_errors\error_in_def.py:85
msgid "Functions and methods need a name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:86
msgid ""
"You tried to define a function or method and did not use the correct "
"syntax.\n"
msgstr ""

#: syntax_errors\error_in_def.py:116 syntax_errors\error_in_def.py:147
#: syntax_errors\message_analyzer.py:1111
#: syntax_errors\message_analyzer.py:1649
#: syntax_errors\statement_analyzer.py:1312
#: syntax_errors\statement_analyzer.py:1331
msgid "Did you forget parentheses?\n"
msgstr ""

#: syntax_errors\error_in_def.py:117 syntax_errors\error_in_def.py:148
msgid ""
"Perhaps you forgot to include parentheses.\n"
"You might have meant to write\n"
"\n"
"    {line}\n"
msgstr ""

#: syntax_errors\error_in_def.py:175
msgid "A function definition statement must end with a colon.\n"
msgstr ""

#: syntax_errors\error_in_def.py:181 syntax_errors\error_in_def.py:205
msgid "Did you forget to write a colon?\n"
msgstr ""

#: syntax_errors\error_in_def.py:182 syntax_errors\message_analyzer.py:765
msgid "You wrote `{bad}` instead of a colon.\n"
msgstr ""

#: syntax_errors\error_in_def.py:191
msgid "Did you write something by mistake after the colon?\n"
msgstr ""

#: syntax_errors\error_in_def.py:192
msgid "A block of code must come after the colon.\n"
msgstr ""

#: syntax_errors\error_in_def.py:193
msgid "Removing `{bad}`, might fix the problem.\n"
msgstr ""

#: syntax_errors\error_in_def.py:225
msgid "You cannot use a Python keyword as a function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:226
msgid "You tried to use the Python keyword `{kwd}` as a function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:234
msgid "There are more syntax errors later in your code.\n"
msgstr ""

#: syntax_errors\error_in_def.py:257
msgid "You wrote an invalid function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:258
msgid ""
"The name of a function must be a valid Python identifier,\n"
"that is a name that begins with a letter or an underscore character, `_`,\n"
"and which contains only letters, digits or the underscore character.\n"
msgstr ""

#: syntax_errors\error_in_def.py:264
msgid "You attempted to use a string as a function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:285
msgid "You forgot to name your function.\n"
msgstr ""

#: syntax_errors\error_in_def.py:293
msgid "However, there are some other syntax errors in your code.\n"
msgstr ""

#: syntax_errors\error_in_def.py:314
msgid ""
"I am guessing that you tried to use the Python keyword\n"
"`{kwd}` as an argument in the definition of a function\n"
"where an identifier (variable name) was expected.\n"
msgstr ""

#: syntax_errors\error_in_def.py:329
msgid "You cannot use dotted names as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:331
msgid "Perhaps you meant to write a comma.\n"
msgstr ""

#: syntax_errors\error_in_def.py:332 syntax_errors\error_in_def.py:524
#: syntax_errors\statement_analyzer.py:827 syntax_errors\syntax_utils.py:119
msgid "Did you mean to write a comma?\n"
msgstr ""

#: syntax_errors\error_in_def.py:336
msgid "You cannot use dots in function names.\n"
msgstr ""

#: syntax_errors\error_in_def.py:345
msgid ""
"`/` indicates that the previous arguments in a function definition\n"
"are positional arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:351
msgid ""
"Function definitions cannot include the symbol `/` in this Python version.\n"
msgstr ""

#: syntax_errors\error_in_def.py:354
msgid ""
"This symbol can only be used with Python versions 3.8.0 or newer.\n"
"You are using Python version {version}.\n"
msgstr ""

#: syntax_errors\error_in_def.py:363
msgid ""
"You have unspecified keyword arguments that appear before\n"
"the symbol `/`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:367
msgid "Keyword arguments must appear after the `/` symbol.\n"
msgstr ""

#: syntax_errors\error_in_def.py:372
msgid ""
"However, `*` indicates that the arguments\n"
"that follow must be keyword arguments.\n"
"When they are used together, `/` must appear before `*`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:377
msgid "`*` must appear after `/` in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:379
msgid "`*{name}` must appear after `/` in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:386
msgid "You can only use `/` once in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:400
msgid "You can only use `*` once in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:406
msgid "You have used it twice, with `*{first}` and `*{second}`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:414
msgid ""
"It must either be used by itself, `*`,\n"
"or in the form `*{args}`, but not both.\n"
msgstr ""

#: syntax_errors\error_in_def.py:423
msgid "`*{args}` must appear before `**{kwargs}`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:427
msgid "`**{kwargs}` must appear after the `*` operator.\n"
msgstr ""

#: syntax_errors\error_in_def.py:441
msgid "You cannot use numbers as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:442
msgid ""
"You used a number as an argument when defining a function.\n"
"You can only use identifiers (variable names) as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:454
msgid "You cannot use strings as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:455
msgid ""
"You used a string as an argument when defining a function.\n"
"You can only use identifiers (variable names) as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:467
msgid "You cannot have explicit tuples as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:469
msgid ""
"You can only use identifiers (variable names) as function arguments.\n"
"Assign any tuple to a parameter and unpack it\n"
"within the body of the function.\n"
msgstr ""

#: syntax_errors\error_in_def.py:482
msgid "You cannot have explicit lists as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:483 syntax_errors\error_in_def.py:495
msgid "You can only use identifiers (variable names) as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:494
msgid "You cannot have any explicit dict or set as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:517
msgid "You cannot have operators as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:525
msgid ""
"I suspect you made a typo and wrote `{op}` instead of a comma.\n"
"The following statement contains no syntax error:\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\error_in_def.py:537
msgid "Did you mean to write an equal sign?\n"
msgstr ""

#: syntax_errors\error_in_def.py:538
msgid ""
"I suspect you made a typo and wrote `{op}` instead of an equal sign.\n"
"The following statement contains no syntax error:\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\error_in_def.py:550
msgid "Did you mean to write `{op}`?\n"
msgstr ""

#: syntax_errors\error_in_def.py:551
msgid ""
"I suspect you made a typo and added `{op}` by mistake.\n"
"The following statement contains no syntax error:\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\error_in_def.py:567
msgid "You cannot use `{op}` as an argument.\n"
msgstr ""

#: syntax_errors\error_in_def.py:571
msgid ""
"I suspect you made a typo and wrote `{op}` by mistake.\n"
"If you replace it by a unique variable name, the result\n"
"will contain no syntax error.\n"
msgstr ""

#: syntax_errors\error_in_def.py:579
msgid ""
"I suspect you made a typo and wrote `{op}` by mistake,\n"
"perhaps instead of writing an identifier (variable name).\n"
msgstr ""

#: syntax_errors\error_in_def.py:588
msgid ""
"The `**` operator needs to be followed by an identifier (variable name).\n"
msgstr ""

#: syntax_errors\error_in_def.py:611
msgid "Positional arguments must come before keyword arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:612
msgid ""
"`{arg}` is a positional argument that appears after one or more\n"
"keyword arguments in your function definition.\n"
msgstr ""

#: syntax_errors\indentation_error.py:11
msgid "Line `{number}` identified above is more indented than expected.\n"
msgstr ""

#: syntax_errors\indentation_error.py:15
msgid ""
"Line `{number}` identified above was expected to begin a new indented "
"block.\n"
msgstr ""

#: syntax_errors\indentation_error.py:20
msgid "Line `{number}` identified above is less indented than expected.\n"
msgstr ""

#: syntax_errors\indentation_error.py:32
msgid ""
"However, line {number}, which is identified as having a problem,\n"
"consists of a single string which is also the case\n"
"for the preceding line.\n"
"Perhaps you meant to include a continuation character, `\\`,\n"
"at the end of line {preceding}.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:22
msgid "You can only assign objects to identifiers (variable names).\n"
msgstr ""

#: syntax_errors\message_analyzer.py:26
#: syntax_errors\statement_analyzer.py:1657
msgid ""
"You can only delete names of objects, or items in mutable containers\n"
"such as `list`, `set`, or `dict`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:54
msgid "of type `int`"
msgstr ""

#: syntax_errors\message_analyzer.py:55
msgid "of type `complex`"
msgstr ""

#: syntax_errors\message_analyzer.py:56
msgid "of type `float`"
msgstr ""

#: syntax_errors\message_analyzer.py:57
msgid "of type `str`"
msgstr ""

#: syntax_errors\message_analyzer.py:58
msgid "of type `dict`"
msgstr ""

#: syntax_errors\message_analyzer.py:59
msgid "of type `list`"
msgstr ""

#: syntax_errors\message_analyzer.py:60
msgid "of type `set`"
msgstr ""

#: syntax_errors\message_analyzer.py:61
msgid "of type `tuple`"
msgstr ""

#: syntax_errors\message_analyzer.py:81 syntax_errors\message_analyzer.py:91
msgid "Did you mean `{num}`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:82
msgid ""
"Perhaps you meant to write the octal number `{num}`\n"
"and forgot the letter 'o', or perhaps you meant to write\n"
"a decimal integer and did not know that it could not start with zeros.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:92
msgid ""
"Perhaps you meant to write the integer `{num}`\n"
"and did not know that it could not start with zeros.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:131
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"conditional expression instead of the name of a variable.\n"
"A conditional expression has the following form:\n"
"\n"
"    variable = object if condition else other_object\n"
msgstr ""

#: syntax_errors\message_analyzer.py:149
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"conditional expression instead of the name of a variable.\n"
"    {expression} = ...\n"
"    {mark}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:170
msgid ""
"On the left-hand side of an equal sign, you have\n"
"an expression instead of the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:195
msgid ""
"You wrote the expression\n"
"\n"
"    {fn_call} = ...\n"
"where `{fn_call}`, on the left-hand side of the equal sign, either is\n"
"or includes a function call and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:207
msgid ""
"You wrote the expression\n"
"\n"
"    {fn_call} = ...\n"
"    {mark}\n"
"where `{fn_call}`, on the left-hand side of the equal sign, either is\n"
"or includes a function call and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:228
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"generator expression instead of the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:246 syntax_errors\message_analyzer.py:372
msgid ""
"You wrote an expression that has the f-string `{fstring}`\n"
"on the left-hand side of the equal sign.\n"
"An f-string should only appear on the right-hand side of an equal sign.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:290 syntax_errors\message_analyzer.py:1018
msgid "You cannot assign a value to `{keyword}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:293
msgid "You cannot assign a value to the ellipsis symbol [`...`].\n"
msgstr ""

#: syntax_errors\message_analyzer.py:294
msgid ""
"The ellipsis symbol `...` is a constant in Python;you cannot assign it a "
"different value.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:299
msgid ""
"`{keyword}` is a constant in Python; you cannot assign it a different "
"value.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:304
#: syntax_errors\statement_analyzer.py:1021
msgid ""
"You were trying to assign a value to the Python keyword `{keyword}`.\n"
"This is not allowed.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:324
msgid ""
"A for loop must have the form:\n"
"\n"
"    for ... in sequence:\n"
"\n"
"where `...` must contain only identifiers (variable names)\n"
"and not literals like `{bad_token}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:381
msgid "variable_name"
msgstr ""

#: syntax_errors\message_analyzer.py:385
msgid ""
"Perhaps you meant to write:\n"
"\n"
"    {name} = {literal}\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:391
msgid "Perhaps you meant to write `{name} = {literal}`"
msgstr ""

#: syntax_errors\message_analyzer.py:410
msgid ""
"You wrote an expression like\n"
"\n"
"    {literal} = {name}\n"
"where `{literal}`, on the left-hand side of the equal sign,\n"
"is or includes an actual object {of_type}\n"
"and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:420
msgid ""
"It is possible that you used an equal sign `=` instead of a colon `:`\n"
"to assign values to keys in a dict.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:438
msgid ""
"You wrote an expression that includes some mathematical operations\n"
"on the left-hand side of the equal sign which should be\n"
"only used to assign a value to a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:460
msgid "Perhaps you meant to write `{name}` instead of `{original}`\n"
msgstr ""

#: syntax_errors\message_analyzer.py:465 syntax_errors\message_analyzer.py:603
#: syntax_errors\statement_analyzer.py:607
msgid "Perhaps you needed `==` instead of `=`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:477
msgid ""
"You wrote an expression that includes the `yield` keyword\n"
"on the left-hand side of the equal sign.\n"
"You cannot assign a value to such an expression.\n"
"Note that, like the keyword `return`,\n"
"`yield` can only be used inside a function.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:496 syntax_errors\message_analyzer.py:518
msgid ""
"You are using the augmented assignment operator `:=` inside\n"
"a comprehension to assign a value to the iteration variable `{var}`.\n"
"This variable is meant to be used only inside the comprehension.\n"
"The augmented assignment operator is normally used to assign a value\n"
"to a variable so that the variable can be reused later.\n"
"This is not possible for variable `{var}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:535
msgid ""
"The object named `{name}` is defined with type annotation\n"
"as a local variable. It cannot be declared to be a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:550
msgid ""
"You cannot use the augmented assignment operator `:=`,\n"
"sometimes called the walrus operator, with literals like `{bad_token}`.\n"
"You can only assign objects to identifiers (variable names).\n"
msgstr ""

#: syntax_errors\message_analyzer.py:561
msgid ""
"You declared `{name}` as being both a global and nonlocal variable.\n"
"A variable can be global, or nonlocal, but not both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:576
msgid "Python tells us that the {bracket} was never closed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:579
msgid "The {bracket} was never closed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:591
msgid ""
"The Python keyword `break` can only be used inside a `for` loop or inside a "
"`while` loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:604
#: syntax_errors\statement_analyzer.py:608
msgid ""
"You likely used an assignment operator `=` instead of an equality operator "
"`==`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:612
msgid ""
"The following statement would not contain a syntax error:\n"
"\n"
"    {new_statement}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:632
msgid "You cannot delete the constant `{constant}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:652 syntax_errors\message_analyzer.py:706
msgid "You cannot delete a Python expression.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:655
msgid "You cannot delete the expression `{expression}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:672
msgid ""
"You attempted to delete a function call\n"
"\n"
"    {line}\n"
"instead of deleting the function's name\n"
"\n"
"    {correct}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:690
msgid "You cannot delete the literal `{literal}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:709
msgid "You cannot delete the named expression `{expression}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:725
msgid ""
"The star operator `*` is interpreted to mean that\n"
"iterable unpacking is to be used to assign a name\n"
"to each item of an iterable, which does not make sense here.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:739
msgid ""
"It looks like you surrounded a starred name by parentheses.\n"
"This was not considered a SyntaxError before Python version 3.9.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:758
msgid "Did you forget a colon?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:759
msgid "Python expected a colon at the position indicated.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:787
msgid ""
"It looks like the error occurred as you were writing a Python dict.\n"
"Perhaps you wrote a dict key without writing the corresponding value.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:791 syntax_errors\message_analyzer.py:1049
#: syntax_errors\statement_analyzer.py:1725
msgid "Did you forget to write a dict value?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:798
msgid ""
"The Python keyword `continue` can only be used inside a `for` loop or inside "
"a `while` loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:810
msgid ""
"You have defined a function repeating the argument\n"
"\n"
"    {name}\n"
"Each argument should appear only once in a function definition.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:850
msgid "Did you forget to add `else`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:851
msgid "An `else some_value` clause was expected after the `if` expression.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:863
msgid ""
"You started writing a triple-quoted string but never wrote\n"
"the triple quotes needed to end the string.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:880
msgid "Did you forget a closing quote?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:881
msgid ""
"You started writing a string with a single or double quote\n"
"but never ended the string with another quote on that line.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:894
msgid ""
"Perhaps you meant to write the backslash character, `\\`\n"
"as the last character in the string and forgot that you\n"
"needed to escape it by writing two `\\` in a row.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:899
msgid "Did you forget to escape a backslash character?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:934
#: syntax_errors\statement_analyzer.py:375
msgid "Perhaps you forgot to escape a quote character.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:935
#: syntax_errors\statement_analyzer.py:376
msgid ""
"I suspect that you were trying to use a quote character inside a string\n"
"that was enclosed in quotes of the same kind.\n"
"Perhaps you should have escaped the inner quote character:\n"
"\n"
"    {new_line}\n"
"    {mark}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:950
msgid ""
"You wrote a `try` block which did not include an `except` nor a `finally` "
"block.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:965 syntax_errors\message_analyzer.py:982
msgid ""
"Perhaps you meant to write\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\message_analyzer.py:968 syntax_errors\message_analyzer.py:985
#, fuzzy
#| msgid "Did you mean `{name}`?\n"
msgid "Did you mean `{new_statement}`?"
msgstr "Intendevi `{name}`?\n"

#: syntax_errors\message_analyzer.py:975
msgid ""
"Perhaps you meant to write either\n"
"\n"
"    {new_statement}\n"
"\n"
"or\n"
"\n"
"    {new_statement2}"
msgstr ""

#: syntax_errors\message_analyzer.py:1020
msgid ""
"You likely called a function using the Python keyword `{keyword}` as an "
"argument:\n"
"\n"
"    a_function({keyword}=something) \n"
"\n"
"which Python interpreted as trying to assign a value to a Python keyword.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1031
msgid ""
"You likely called a function with a named argument:\n"
"\n"
"    a_function(invalid=something) \n"
"\n"
"where `invalid` is not a valid variable name in Python\n"
"either because it starts with a number, or is a string,\n"
"or contains a period, etc.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1045
#: syntax_errors\statement_analyzer.py:1716
msgid ""
"It looks like the error occurred as you were writing a Python dict.\n"
"Perhaps you forgot to write a value after a colon.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1058
msgid ""
"You have written an f-string whose content `{...}`\n"
"includes a backslash; this is not allowed.\n"
"Perhaps you can replace the part that contains a backslash by\n"
"some variable. For example, suppose that you have an f-string like:\n"
"\n"
"    f\"{... 'hello\\n' ...}\"\n"
"\n"
"you could write this as\n"
"\n"
"    hello = 'hello\\n'\n"
"    f\"{... hello ...}\"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1075
msgid ""
"You have written an f-string which has an unmatched `}`.\n"
"If you want to print a single `}`, you need to write `}}` in the f-string;\n"
"otherwise, you need to add an opening `{`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1087
msgid ""
"You have written an f-string which has an unmatched `{`.\n"
"If you want to print a single `{`, you need to write `{{` in the f-string;\n"
"otherwise, you need to add a closing `}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1103
#: syntax_errors\statement_analyzer.py:1284
msgid ""
"I am guessing that you were writing a comprehension or a generator "
"expression\n"
"and forgot to include parentheses around tuples.\n"
"As an example, instead of writing\n"
"\n"
"    [i, i**2 for i in range(10)]\n"
"\n"
"you would need to write\n"
"\n"
"    [(i, i**2) for i in range(10)]\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1120
msgid ""
"A `from __future__ import` statement changes the way Python\n"
"interprets the code in a file.\n"
"It must appear at the beginning of the file."
msgstr ""

#: syntax_errors\message_analyzer.py:1136
msgid "The available features are `{names}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1141
msgid ""
"When using a `from __future__ import` statement,\n"
"you must import specific named features.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1152
msgid "Instead of `{feature}`, perhaps you meant to import `{name}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1157
msgid "`{feature}` is not a valid feature of module `__future__`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1182
msgid ""
"You are using a generator expression, something of the form\n"
"\n"
"    x for x in thing\n"
"\n"
"You must add parentheses enclosing that expression.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1195
msgid ""
"I suspect you wrote `from __future__ import braces` following\n"
"someone else's suggestion. This will never work.\n"
"\n"
"Unlike other programming languages, Python's code block are defined by\n"
"their indentation level, and not by using some curly braces, like `{...}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1210
#: syntax_errors\statement_analyzer.py:190
msgid "Did you use copy-paste?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1211
msgid ""
"Python indicates that you used the unicode character `{bad_character}`\n"
"which is not allowed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1237
msgid "Python tells us that you have written an invalid number."
msgstr ""

#: syntax_errors\message_analyzer.py:1238
msgid "However, I think that the problem might be the following."
msgstr ""

#: syntax_errors\message_analyzer.py:1272
msgid "I have no suggestion to offer to fix this problem.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1281
#: syntax_errors\statement_analyzer.py:740
msgid ""
"The double star operator `**` is likely interpreted to mean that\n"
"dict unpacking is to be used which is not allowed or does not make sense "
"here.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1339
msgid ""
"You cannot use the `*` operator to unpack the iteration variable\n"
"in a comprehension.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1351
#: syntax_errors\message_analyzer.py:1741
#: syntax_errors\statement_analyzer.py:524
msgid ""
"The following statement has no syntax error:\n"
"\n"
"    {statement}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1372
msgid ""
"You have called a function repeating the same keyword argument (`{arg}`).\n"
"Each keyword argument should appear only once in a function call.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1435
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}` on line {lineno}.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1440
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}`.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1454
msgid "Did you forget something after `*`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1455
msgid ""
"Assuming you were defining a function, you need\n"
"to replace `*` by either `*arguments` or\n"
"by `*, named_argument=value`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1470
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1494
msgid "Did you forget to add `nonlocal`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1495
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1526
msgid ""
"You are including the statement\n"
"\n"
"    {newline}\n"
"\n"
"indicating that `{name}` is a variable defined outside a function.\n"
"You are also using the same `{name}` as an argument for that\n"
"function, thus indicating that it should be variable known only\n"
"inside that function, which is the contrary of what `global` implied.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1543
msgid ""
"You used `{name}` as a parameter for a function\n"
"before declaring it also as a nonlocal variable:\n"
"`{name}` cannot be both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1558
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1581
msgid "Did you forget to write `nonlocal` first?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1583
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1607
msgid ""
"You declared the variable `{name}` as being a\n"
"nonlocal variable but it cannot be found.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1618
msgid ""
"You used the nonlocal keyword at a module level.\n"
"The nonlocal keyword refers to a variable inside a function\n"
"given a value outside that function."
msgstr ""

#: syntax_errors\message_analyzer.py:1630
msgid ""
"In Python, you can define functions with only positional arguments\n"
"\n"
"    def test(a, b, c): ...\n"
"\n"
"or only keyword arguments\n"
"\n"
"    def test(a=1, b=2, c=3): ...\n"
"\n"
"or a combination of the two\n"
"\n"
"    def test(a, b, c=3): ...\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1650
#: syntax_errors\statement_analyzer.py:1332
msgid ""
"I am guessing that you wanted to use an `except` statement\n"
"with multiple exception types. If that is the case, you must\n"
"surround them with parentheses.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1662
msgid ""
"In Python, you can call functions with only positional arguments\n"
"\n"
"    test(1, 2, 3)\n"
"\n"
"or only keyword arguments\n"
"\n"
"    test(a=1, b=2, c=3)\n"
"\n"
"or a combination of the two\n"
"\n"
"    test(1, 2, c=3)\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1689
#: syntax_errors\statement_analyzer.py:658
msgid ""
"Perhaps you need to type\n"
"\n"
"     print({message})\n"
"\n"
"In older version of Python, `print` was a keyword.\n"
"Now, `print` is a function; you need to use parentheses to call it.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1696
#: syntax_errors\statement_analyzer.py:665
msgid "Note that arguments of `print` must be separated by commas.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1697
#: syntax_errors\statement_analyzer.py:666
msgid "Did you mean `print({message})`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1706
msgid "You can only use a `return` statement inside a function or method.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1715
msgid ""
"A star assignment must be of the form:\n"
"\n"
"    ... *name = list_or_tuple\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1725
msgid ""
"It looks like you tried to use a starred expression as a dict value;\n"
"this is not allowed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1752
msgid ""
"Your code is too complex for Python:\n"
"you need to reduce the number of indented code blocks\n"
"contained inside other code blocks.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1765
msgid ""
"Your code is too complex for Python:\n"
"you need to reduce the number of parentheses\n"
"contained inside other parentheses.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1780
msgid ""
"Python indicates that you need to surround an expression\n"
"ending with a comma by parentheses.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1784
msgid ""
"I have no additional suggestion to offer.\n"
"Please feel free to report this case.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1794
msgid ""
"Perhaps you meant to write\n"
"\n"
"`{new_statement}`\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1802
msgid "However, I suspect that you wrote the keyword `{boolean}` by mistake.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1806
msgid ""
"The Python keyword `{boolean}` can only be used for boolean expressions.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1818
#: syntax_errors\message_analyzer.py:1831
msgid "However, if you remove the last comma, there will be no syntax error.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1846
msgid ""
"You are using the continuation character `\\` outside of a string,\n"
"and it is followed by some other character(s).\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1869
msgid ""
"I am guessing that you wanted to divide by the number {number} \n"
"and wrote \\ instead of /."
msgstr ""

#: syntax_errors\message_analyzer.py:1873
msgid "Did you mean to divide by {number}?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1876
msgid "I am guessing that you forgot to enclose some content in a string.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1885
msgid ""
"Python tells us that it reached the end of the file\n"
"and expected more content.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1892
msgid ""
"I will attempt to be give a bit more information.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1903
msgid ""
"I suspect that you wrote a string that contains\n"
"one backslash character, `\\` followed by an uppercase `U`\n"
"and some more characters.\n"
"Python likely interpreted this as indicating the beginning of\n"
"what is known as an escape sequence for special unicode characters.\n"
"To solve the problem, either write a so-called 'raw string'\n"
"by adding the letter `r` as a prefix in\n"
"front of the string, or replace `\\U`, by `\\\\U`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1927
#: syntax_errors\statement_analyzer.py:127
msgid "The closing {bracket} on line {linenumber} does not match anything.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1938
msgid "Perhaps you forgot a closing quote.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1955
msgid ""
"Inside the f-string `{fstring}`, \n"
"you have another string, which starts with either a\n"
"single quote (') or double quote (\"), without a matching closing one.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1968
msgid "You can only use a `yield` statement inside a function.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1977
msgid ""
"This is a message that was added in Python 3.9\n"
"to prevent redefining `__peg_parser__`.\n"
"It should not be present in other versions.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:2039
msgid ""
"Friendly-traceback cannot identify the non-printable character.\n"
"This should not happen. Please report this case"
msgstr ""

#: syntax_errors\message_analyzer.py:2053
#: syntax_errors\statement_analyzer.py:107
msgid "Your code contains the invalid non-printable character {char}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:162
msgid ""
"The closing {bracket} on line {close_lineno} does not match the opening "
"{open_bracket} on line {open_lineno}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:184
msgid "Did you mean to write `...`?\n"
msgstr ""
"Did you mean to write `...`?\n"
"\n"

#: syntax_errors\statement_analyzer.py:185
msgid ""
"It looks like you meant to write `...` but added an extra `.` by mistake.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:199
msgid ""
"It looks like you copy-pasted code from an interactive interpreter.\n"
"The Python prompt, `>>>`, should not be included in your code.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:209
msgid ""
"It looks like you copy-pasted code from an interactive interpreter.\n"
"The Python prompt, `...`, should not be included in your code.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:223
msgid "You should not use the backquote character.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:224
msgid ""
"You are using the backquote character.\n"
"Either you meant to write a single quote, ', or copied Python 2 code;\n"
"in this latter case, use the function `repr(x)`."
msgstr ""

#: syntax_errors\statement_analyzer.py:245
msgid "You forgot to add a condition.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:247
msgid ""
"An `if` statement requires a condition:\n"
"\n"
"    if condition:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:253
msgid ""
"A `while` loop requires a condition:\n"
"\n"
"    while condition:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:259
msgid "A `for` loop requires at least 3 more terms.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:260
msgid ""
"A `for` loop is an iteration over a sequence:\n"
"\n"
"    for element in sequence:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:266
msgid "A class needs a name.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:267
msgid ""
"A `class` statement requires a name:\n"
"\n"
"    class SomeName:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:284
msgid ""
"You cannot use the Python keyword `{word}` as an attribute.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:290
msgid "`{word}` cannot be used as an attribute.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:312
msgid "Perhaps you meant to write `elif`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:313
msgid ""
"You likely meant to use Python's `elif` keyword\n"
"but wrote `{name}` instead.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:332
msgid "Did you mean `from {module} import {function}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:335
msgid ""
"You wrote something like\n"
"\n"
"    import {function} from {module}\n"
"\n"
"instead of\n"
"\n"
"    from {module} import {function}\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:406
msgid ""
"The augmented assignment operator is not allowed in Python version "
"{version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:409
msgid ""
"You appear to be using the operator `:=`, sometimes called\n"
"the walrus operator. This operator requires the use of\n"
"Python 3.8 or newer. You are using version {version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:453
msgid "Did you write operators in an incorrect order?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:454
msgid ""
"It looks like you wrote two operators (`{first}` and `{second}`)\n"
"in the wrong order: `{wrong}` instead of `{correct}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:490
msgid ""
"You wrote three equal signs in a row which is allowed in some\n"
"programming languages, but not in Python. To check if two objects\n"
"are equal, use two equal signs, `==`; to see if two names represent\n"
"the exact same object, use the operator `is`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:496
msgid "Did you mean to use `is` instead of `===`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:500
msgid ""
"You cannot have write the same operator, `{op}`, twice in a row.\n"
"Perhaps you wrote one of them by mistake\n"
"or forgot to write something between them.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:511
msgid ""
"You cannot have these two operators, `{first}` and `{second}`,\n"
"following each other.\n"
"It looks like you tried to use a starred expression as a dict value;\n"
"this is not allowed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:528
msgid ""
"You cannot have these two operators, `{first}` and `{second}`,\n"
"following each other. Perhaps you wrote one of them by mistake\n"
"or forgot to write something between them.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:535
msgid ""
"Or perhaps you included a space by mistake between the two operators\n"
"and meant to write `{oper}` as a single operator.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:570
msgid "Did you mean to use `=`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:571
msgid ""
"You use the augmented assignment operator `:=` where\n"
"the normal assignment operator `=` was required.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:617
msgid ""
"The following statement would not contain a syntax error:\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\statement_analyzer.py:623
msgid "Perhaps you needed `==` or `:=` instead of `=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:624
msgid ""
"You used an assignment operator `=`; perhaps you meant to use \n"
"an equality operator, `==`, or the walrus operator `:=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:682
msgid ""
"It looks as if you are attempting to use pip to install a module.\n"
"`pip` is a command that needs to run in a terminal,\n"
"not from a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:690
msgid "Pip cannot be used in a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:693
msgid ""
"I am guessing that you are attempting to use Python to run a program.\n"
"You must do so from a terminal and not from a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:703
msgid "You cannot have a dot `.` followed by `{bracket}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:719
msgid "Perhaps you need to replace the dot by a comma.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:730
msgid ""
"It looks like you are trying to raise an exception using Python 2 syntax.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:791
msgid "Did you forget a colon `:`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:795
msgid ""
"You wrote a `{for_while}` loop but\n"
"forgot to add a colon `:` at the end\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:802
msgid ""
"You wrote a statement beginning with\n"
"`{name}` but forgot to add a colon `:` at the end.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:826
msgid "You wrote a semicolon, `;`, where a comma was expected.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:846
msgid "You wrote semicolons, `;`, where commas were expected.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:847
msgid "Did you mean to write commas?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:867
msgid "You wrote a semicolon, `;`, where a colon was expected.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:868
msgid "Did you mean to write a colon?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:886
msgid "Did you made a mistake in writing an hexadecimal integer?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:887
msgid ""
"It looks like you used an invalid character (`{character}`) in an "
"hexadecimal number.\n"
"\n"
"Hexadecimal numbers are base 16 integers that use the symbols `0` to `9`\n"
"to represent values 0 to 9, and the letters `a` to `f` (or `A` to `F`)\n"
"to represent values 10 to 15.\n"
"In Python, hexadecimal numbers start with either `0x` or `0X`,\n"
"followed by the characters used to represent the value of that integer.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:906
msgid "Did you made a mistake in writing an octal integer?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:907
msgid ""
"It looks like you used an invalid character (`{character}`) in an octal "
"number.\n"
"\n"
"Octal numbers are base 8 integers that only use the symbols `0` to `7`\n"
"to represent values.\n"
"In Python, octal numbers start with either `0o` or `0O`,\n"
"(the digit zero followed by the letter `o`)\n"
"followed by the characters used to represent the value of that integer.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:934
msgid "Valid names cannot begin with a number.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:941
msgid "Did you mean `{number}j`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:942
msgid ""
"Perhaps you thought that `i` could be used to represent\n"
"the square root of `-1`. In Python, the symbol used for this is `j`\n"
"and the complex part is written as `some_number` immediately\n"
"followed by `j`, with no spaces in between.\n"
"Perhaps you meant to write `{number}j`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:952
#, fuzzy
#| msgid "Did you mean `{name}`?\n"
msgid "Did you mean `{number}{second}0`?\n"
msgstr "Intendevi `{name}`?\n"

#: syntax_errors\statement_analyzer.py:955
msgid ""
"Perhaps you meant to write `{number}{second}0` in scientific notation\n"
"and forgot the numerical value for the exponent.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:962
msgid ""
"[Note: `{first} * {second}` would also be valid\n"
"since `{first}` is a complex number.]\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:973
msgid "Perhaps you forgot a multiplication operator, `{first} * {second}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:988
msgid "Your Python version does not support this f-string feature.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:989
msgid ""
"You are likely using a 'debug' syntax of f-strings introduced\n"
"in Python version 3.8. You are using version {version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:995
msgid ""
"You are likely trying to assign a value within an f-string.\n"
"This is not allowed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1010
msgid ""
"The content of your f-string is invalid. Please consult the documentation:\n"
"https://docs.python.org/3/reference/lexical_analysis.html#f-strings\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1020
msgid "Python keywords cannot be used as identifiers (variable names).\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1044
msgid ""
"`lambda` does not allow parentheses around its arguments.\n"
"This was allowed in Python 2 but it not allowed in Python 3.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1061
msgid ""
"You cannot have explicit tuples as arguments.\n"
"Assign any tuple to a parameter and unpack it\n"
"within the body of the function.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1099
msgid "If you remove `{type_decl}`, you will have a valid Python statement.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1103
msgid ""
"However, even if you remove `{type_decl}`, there would still be some\n"
"some syntax errors.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1108
msgid "You do not need to declare variables in Python.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1109
msgid ""
"It looks like you were trying to declare that `{var}` was\n"
"a variable using the word `{type_decl}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1146
msgid ""
"I am guessing that you forgot a comma between two strings\n"
"when defining a dict.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1198
msgid "Did you forget to write `in`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1199
msgid ""
"It looks as though you forgot to use the keyword `in`\n"
"as part of a `for` statement. Perhaps you meant:\n"
"\n"
"    {new_statement}\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1227
msgid "Did you forget to write parenthesis?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1228
msgid ""
"It looks as though you forgot to use to use parenthesis with `range`.\n"
"Perhaps you meant:\n"
"\n"
"    {new_statement}\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1260
msgid ""
"Perhaps you meant to write `{keyword}` and made a typo.\n"
"The correct line might be `{line}`\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1273
msgid ""
"I am guessing that you were writing a comprehension or a generator "
"expression\n"
"and use the wrong order for a condition.\n"
"The correct order depends if there is an `else` clause or not.\n"
"For example, the correct order for a list comprehensions with\n"
"condition can be either\n"
"\n"
"    [f(x) if condition else other for x in sequence]  # 'if' before 'for'\n"
"\n"
"or, if there is no `else`\n"
"\n"
"    [f(x) for x in sequence if condition]  # 'if' after 'for'\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1385
msgid ""
"You cannot have spaces in identifiers (variable names).\n"
"Perhaps you meant `{name}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1407
msgid "`bf` is an illegal string prefix.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1408
msgid ""
"I am guessing that you wanted a binary f-string;\n"
"this is not allowed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1432
msgid ""
"It is possible that you forgot a comma between items in a tuple, \n"
"or between function arguments, \n"
"at the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1440
msgid ""
"It is possible that you forgot a comma between items in a list\n"
"at the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1446
msgid ""
"It is possible that you forgot a comma between items in a set or dict\n"
"at the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1476
msgid ""
"Python indicates that the error is caused by `{second}` written immediately "
"after `{first}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1533
msgid "Perhaps you meant{line}"
msgstr ""

#: syntax_errors\statement_analyzer.py:1540
msgid "Did you forget something between `{first}` and `{second}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1555
msgid ""
"Perhaps you meant to insert an operator like `{operators}`\n"
"between `{first}` and `{second}`.\n"
"The following lines of code would not cause any `SyntaxError`:\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1564
msgid ""
"Note: these are just some of the possible choices and that\n"
"some of them might raise other types of exceptions.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1571
msgid "There is an additional possibility.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1586
msgid ""
"It is possible that you used an equal sign `=` instead of a colon `:`\n"
"to assign values to keys in a dict\n"
"before or at the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1609
msgid ""
"The Python keyword `{boolean}` can only be used for boolean expressions.\n"
"Perhaps you meant to write\n"
"\n"
"`{new_statement}`\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1639
msgid ""
"I am guessing that you are trying to import at least one object\n"
"from module `{module}` and rename it using the Python keyword `as`;\n"
"this keyword can only be used to rename one object at a time\n"
"using a well defined syntax.\n"
"I suggest that you split up any such import statement with each object\n"
"renamed on a separate line as follows:\n"
"\n"
"    from {module} import object_1 as name_1\n"
"    from {module} import object_2 as name_2  # if needed\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1669
msgid ""
"I am guessing that you wrote {bad_token} twice in a row by mistake.\n"
"If that is the case, you need to remove the second one.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1673
msgid "Did you write {bad_token} twice by mistake?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1700
msgid ""
"I am guessing that you wrote {bad_token} by mistake.\n"
"Removing it and writing `{line}` seems to fix the error.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1704
msgid "Did you write {bad_token} by mistake?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1721
msgid ""
"It looks like the error occurred as you were writing a Python dict.\n"
"Perhaps wrote a dict key without writing the corresponding value.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1737
msgid ""
"The `else` keyword does not begin a code block that matches\n"
"a valid code block, possibly because `else` is not indented correctly.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1749
msgid ""
"The `elif` keyword does not begin a code block that matches\n"
"an `if` block, possibly because `elif` is not indented correctly.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1762
msgid ""
"The `except` keyword does not begin a code block that matches\n"
"a `try` block, possibly because `except` is not indented correctly.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1775
msgid ""
"The `finally` keyword does not begin a code block that matches\n"
"a `try` block, possibly because `finally` is not indented correctly.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1814
msgid "You used square brackets, `[...]` instead of parentheses.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1818
msgid ""
"Write the following instead:\n"
"\n"
"{new_statement}"
msgstr ""

#: syntax_errors\statement_analyzer.py:1862
msgid "The opening {bracket} on line {linenumber} is not closed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1876
msgid "If this is incorrect, please report this case.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1888
msgid ""
"Perhaps you wrote a statement beginning a code block\n"
"intended to be part of a generator expression.\n"
"You cannot have separate code blocks inside generator expressions.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1894
msgid ""
"Perhaps you wrote a statement beginning a code block\n"
"intended to be part of a list comprehension.\n"
"You cannot have separate code blocks inside list comprehensions.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1900
msgid ""
"Perhaps you wrote a statement beginning a code block\n"
"intended to be part of a dict or set comprehension.\n"
"You cannot have separate code blocks inside dict or set comprehensions.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1906
msgid "If this explanation is incorrect, please report this case.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:22
msgid "parenthesis `(`"
msgstr ""

#: syntax_errors\syntax_utils.py:23
msgid "parenthesis `)`"
msgstr ""

#: syntax_errors\syntax_utils.py:24
msgid "square bracket `[`"
msgstr ""

#: syntax_errors\syntax_utils.py:25
msgid "square bracket `]`"
msgstr ""

#: syntax_errors\syntax_utils.py:26
msgid "curly bracket `{`"
msgstr ""

#: syntax_errors\syntax_utils.py:27
msgid "curly bracket `}`"
msgstr ""

#: syntax_errors\syntax_utils.py:60
msgid "Did you mean to use a normal quote character, `'` or `\"`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:61
msgid ""
"I suspect that you used a fancy unicode quotation mark\n"
"whose name is {name}\n"
"instead of a normal single or double quote for a string.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:76
msgid "Or perhaps, you meant to write a less than sign, `<`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:78
msgid "Or perhaps, you meant to write a greater than sign, `>`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:80
msgid "Or perhaps, you meant to write a comma.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:97
msgid ""
"I suspect that you used a fancy unicode quotation mark\n"
"whose name is {name}.\n"
"\n"
msgstr ""

#: syntax_errors\syntax_utils.py:112
msgid "Perhaps, you meant to write a less than sign, `<`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:113
msgid "Did you mean to write a less than sign, `<`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:115
msgid "Perhaps, you meant to write a greater than sign, `>`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:116
msgid "Did you mean to write a greater than sign, `>`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:118
msgid "Perhaps, you meant to write a comma.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:136
msgid ""
"I suspect that you used the unicode character known as\n"
"'FRACTION SLASH', which looks similar to\n"
"but is different from the division operator `/`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:143
msgid "Did you use a unicode fraction?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:144
msgid ""
"I suspect that you used the unicode character `{char}`meant to represent a "
"fraction.\n"
"The name of this unicode character is {name}.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:181
msgid "Did you mean `{num}/{denom}`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:182
msgid ""
"You used the unicode character {char} which is known as\n"
"{name}\n"
"I suspect that you meant to write the fraction `{num}/{denom}` instead.\n"
msgstr ""

#: warning_parsers\syntax_warning.py:47
msgid ""
"You have {container_type} followed by square brackets, `[...]`.\n"
"What is included between the square brackets, `[...]`,\n"
"must be either an integer or a slice\n"
"(`start:stop` or `start:stop:step`) \n"
"and you have used {obj_type} instead.\n"
msgstr ""

#~ msgid "Changes the prompt style to be used in the Friendly console."
#~ msgstr "Cambia lo stile del prompt da usare nella console di Friendly."

#~ msgid "Nothing to go back to: no exception recorded."
#~ msgstr "Non è possibile tornare indietro: nessuna eccezione rilevata."

#~ msgid "Removes the last recorded traceback item."
#~ msgstr "Rimuove l'ultimo record traceback registrato."

#~ msgid "No information is available about this warning.\n"
#~ msgstr "Non sono disponibili informazioni circa questo \"warning\".\n"

#~ msgid ""
#~ "`{filename}` is not a regular Python file whose contents\n"
#~ "can be analyzed.\n"
#~ msgstr ""
#~ "`{filename}` non è un file in formato Python. Il suo contenuto non può "
#~ "essere analizzato.\n"
