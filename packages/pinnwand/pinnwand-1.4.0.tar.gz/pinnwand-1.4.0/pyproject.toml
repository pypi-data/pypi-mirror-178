[tool.poetry]
name = "pinnwand"
version = "1.4.0"
description = "Straightforward pastebin software."
authors = ["Simon de Vlieger <cmdr@supakeen.com>"]
license = "MIT"
readme = "README.md"
keywords = ["pastebin", "python", "tornado"]
repository = "https://github.com/supakeen/pinnwand"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
]
packages = [
    { include = "pinnwand", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.7,<4"
tornado = "^6.2"
pygments = "^2.13"
sqlalchemy = "^1.4"
click = "^8.1"
docutils = "^0.19"
pygments-better-html = "^0.1.4"
token-bucket = "^0.3.0"
tomli = { version = "^2.0.1", python = "<3.11" }

[tool.poetry.dev-dependencies]
pytest = "^7.2"
coverage = "^6.5"
black = "^22.10"
pytest-cov = "^4.0"
pre-commit = "^2.20"
mypy = "^0.991"
types-docutils = "^0.19.1.1"
isort = "^5.10.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.4"
pip-audit = "^2.4.6"

[tool.black]
line-length = 80
target_version = ["py36"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.eggs
  | \.mypy_cache
  | \.tox
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
[tool.poetry.scripts]
pinnwand = 'pinnwand.__main__:main'

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
python_version = "3.7"
platform = "linux"
show_column_numbers = true
follow_imports = "normal"
ignore_missing_imports = true
disallow_untyped_calls = true
warn_return_any = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pylint]
extension-pkg-whitelist = ["lxml"]
ignore = ["CVS"]
jobs = 1
persistent = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "no"

[tool.pylint.'MESSAGES CONTROL']
disable = [
        "raw-checker-failed",
        "bad-inline-option",
        "locally-disabled",
        "file-ignored",
        "suppressed-message",
        "useless-suppression",
        "deprecated-pragma",
        "invalid-name",
        "line-too-long"
]

enable = "c-extension-no-member"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
