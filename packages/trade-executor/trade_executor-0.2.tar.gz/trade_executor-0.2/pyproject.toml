[tool.poetry]
name = "trade-executor"
version = "0.2"
description = "Trading strategy execution and backtesting"
authors = ["Mikko Ohtamaa <mikko@tradingstrategy.ai>"]
homepage = "https://tradingstrategy.ai"
repository = "https://github.com/tradingstrategy-ai/trade-executor"
license = "APGL"
readme = "README.md"
keywords = ["algorithmic trading", "ethereum", "cryptocurrency", "uniswap", "quantitative finance", "binance", "blockchain", "pancakeswap", "polygon", "web3"]
packages = [
    { include = "tradeexecutor" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"

# Use these during development
# web3-ethereum-defi = {path = "deps/web3-ethereum-defi", develop = true}
# trading-strategy = {path = "deps/trading-strategy", develop = true}
requests = "^2.27.1"
web3 = "^5.26.0"
web3-ethereum-defi = "^0.11.1"
trading-strategy = "0.8.5"
matplotlib = "^3.6.0"
jupyterlab = "^3.5.0"
pandas-ta = "^0.3.14-beta.0"
tqdm-loggable = "^0.1.1"

# tqdm progress bar doesn't show up in VScode Jupyter with ipywidgets>=8
# https://github.com/microsoft/vscode-jupyter/issues/11014
ipywidgets = ">=7.0,<8.0"

#
# Execution deps
#
typer = {version="^0.4.0", optional = true}
colorama = {version="^0.4.4", optional = true}
coloredlogs = {version="^15.0.1", optional = true}
prompt-toolkit = {version = "^3.0.31", optional = true}
APScheduler = {version="^3.9.1", optional = true}
python-logstash-tradingstrategy = {version="^0.5.0", optional = true}
python-logging-discord-handler = {version="^0.1.3", optional = true}
python-dotenv = {version="^0.21.0", optional = true}

#
# Web server deps
#
pyramid = {version="^2.0", optional = true}
pyramid-openapi3 = {version="^0.13", optional = true}
waitress = {version="^2.0.0", optional = true}
WebTest = {version="^3.0.0", optional = true}

#
# Legacy strategy deps
#
trading-strategy-qstrader = {version="^0.5",  optional = true}

#
# This package is to be used in various environemnts
# - Execution oracles (makes trades)
# - Client side Python within a browser
# - Web server
#
# Note: in the future execution may exist without a web server,
# e.g. in-browser  bots.
#
tqdm = "^4.64.1"
[tool.poetry.extras]

# Legacy strats
qstrader = ["trading-strategy-qstrader"]

# Only needed when running live trades
execution = [
    "python-logging-discord-handler",
    "python-logstash-tradingstrategy",
    "APScheduler",
    "typer",
    "colorama",
    "coloredlogs",
    "prompt-toolkit",
    "python-dotenv",
    "setuptools"
]

# These dependencies are not neededon the client side code
web-server = [
    "pyramid",
    "WebTest",
    "pyramid-openapi3",
    "waitress"
]

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
ipdb = "^0.13.9"
flaky = "^3.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
trade-executor = 'tradeexecutor.cli.main:app'
get-latest-release = 'tradeexecutor.cli.latest_release:main'
prepare-docker-env = 'tradeexecutor.cli.prepare_docker_env:main'

[tool.pytest.ini_options]
addopts = "-s --tb=native"
testpaths = [
    "tests",
]

filterwarnings = [
    # python_openapi complaint
    "ignore:::.*.jsonschema",
    # DeprecationWarning: Subclassing validator classes is not intended to be part of their public API. A future version will make doing so an error, as the behavior of subclasses isn't guaranteed to stay the same between releases of jsonschema. Instead, prefer composition of validators, wrapping them in an object owned entirely by the downstream library.
    "ignore:::.*.validators",
    "ignore::DeprecationWarning:openapi_spec_validator.*:",
    #  DeprecationWarning: abi.decode_single() is deprecated and will be removed in version 4.0.0 in favor of abi.decode()
    "ignore::DeprecationWarning:eth_abi.*:",
    "ignore:::.*.codec",
]
