Metadata-Version: 2.1
Name: trade-executor
Version: 0.2
Summary: Trading strategy execution and backtesting
Home-page: https://tradingstrategy.ai
License: APGL
Keywords: algorithmic trading,ethereum,cryptocurrency,uniswap,quantitative finance,binance,blockchain,pancakeswap,polygon,web3
Author: Mikko Ohtamaa
Author-email: mikko@tradingstrategy.ai
Requires-Python: >=3.10,<3.11
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Provides-Extra: execution
Provides-Extra: qstrader
Provides-Extra: web-server
Requires-Dist: APScheduler (>=3.9.1,<4.0.0); extra == "execution"
Requires-Dist: WebTest (>=3.0.0,<4.0.0); extra == "web-server"
Requires-Dist: colorama (>=0.4.4,<0.5.0); extra == "execution"
Requires-Dist: coloredlogs (>=15.0.1,<16.0.0); extra == "execution"
Requires-Dist: ipywidgets (>=7.0,<8.0)
Requires-Dist: jupyterlab (>=3.5.0,<4.0.0)
Requires-Dist: matplotlib (>=3.6.0,<4.0.0)
Requires-Dist: pandas-ta (>=0.3.14-beta.0,<0.4.0)
Requires-Dist: prompt-toolkit (>=3.0.31,<4.0.0); extra == "execution"
Requires-Dist: pyramid (>=2.0,<3.0); extra == "web-server"
Requires-Dist: pyramid-openapi3 (>=0.13,<0.14); extra == "web-server"
Requires-Dist: python-dotenv (>=0.21.0,<0.22.0); extra == "execution"
Requires-Dist: python-logging-discord-handler (>=0.1.3,<0.2.0); extra == "execution"
Requires-Dist: python-logstash-tradingstrategy (>=0.5.0,<0.6.0); extra == "execution"
Requires-Dist: requests (>=2.27.1,<3.0.0)
Requires-Dist: tqdm (>=4.64.1,<5.0.0)
Requires-Dist: tqdm-loggable (>=0.1.1,<0.2.0)
Requires-Dist: trading-strategy (==0.8.5)
Requires-Dist: trading-strategy-qstrader (>=0.5,<0.6); extra == "qstrader"
Requires-Dist: typer (>=0.4.0,<0.5.0); extra == "execution"
Requires-Dist: waitress (>=2.0.0,<3.0.0); extra == "web-server"
Requires-Dist: web3 (>=5.26.0,<6.0.0)
Requires-Dist: web3-ethereum-defi (>=0.11.1,<0.12.0)
Project-URL: Repository, https://github.com/tradingstrategy-ai/trade-executor
Description-Content-Type: text/markdown

[![.github/workflows/tests.yml](https://github.com/tradingstrategy-ai/trade-executor/actions/workflows/tests.yml/badge.svg)](https://github.com/tradingstrategy-ai/trade-executor/actions/workflows/tests.yml)

# Trade Executor

Trade Executor is a Python framework for executing algorithmic trading strategies on decentralised exchanges. 

**Note**: This is early alpha software. Please pop in to the Discord for any questions. 

## Features

- [High quality documentation](https://tradingstrategy.ai/docs/)
- Support [decentralised markets like Uniswap, PancakeSwap](https://tradingstrategy.ai/docs/overview/supported-markets.html) 
- [Live trading](https://tradingstrategy.ai/docs/running/live-trading.html) and [backtesting](https://tradingstrategy.ai/docs/running/backtesting.html)  
- [Webhook web serverPlain](https://tradingstrategy.ai/docs/running/webhook.html) for web and JavaScript integration
- Run the strategy execution as [Python application or Docker container](https://tradingstrategy.ai/docs/running/cli.html)

## More information

- [Read documentation on running and backtesting strategies](https://tradingstrategy.ai/docs/running/index.html)
- Visit [Trading Strategy website to learn about algorithmic trading on decentralised exchanges](https://tradingstrategy.ai)
- [Join the Discord for any questions](https://tradingstrategy.ai/community)

## Installation

```shell
git clone git@github.com:tradingstrategy-ai/trade-executor.git
cd trade-executor
git submodule update --init --recursive
poetry install -E web-server -E execution
```

## Architecture overview

![Archiecture overview](docs/deployment-overview.drawio.svg)

## Development

See [docs](./docs).

## Community

* [Trading Strategy website](https://tradingstrategy.ai)

* [Blog](https://tradingstrategy.ai/blog)

* [Twitter](https://twitter.com/TradingProtocol)

* [Discord](https://tradingstrategy.ai/community#discord) 

* [Telegram channel](https://t.me/trading_protocol)

## License 

- AGPL

