# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImagePython
else:
    import _itkCudaImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCudaImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCudaImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCudaImageDataManagerPython
import itk.itkCudaDataManagerPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageRegionRTKPython

def itkCudaImageCVF22_New():
    return itkCudaImageCVF22.New()

class itkCudaImageCVF22(itk.itkImagePython.itkImageCVF22):
    r"""Proxy of C++ itkCudaImageCVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF22
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF22

        Create a new object of the class itkCudaImageCVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF22 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF22_swigregister(itkCudaImageCVF22)
itkCudaImageCVF22___New_orig__ = _itkCudaImagePython.itkCudaImageCVF22___New_orig__
itkCudaImageCVF22_cast = _itkCudaImagePython.itkCudaImageCVF22_cast

class itkCudaImageCVF22_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF22_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF22_ConstPointer
        __init__(self, p) -> itkCudaImageCVF22_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF22_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF22_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF22 const *

        """
        _itkCudaImagePython.itkCudaImageCVF22_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF22_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF22_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF22_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF22_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF22_ConstPointer_swigregister(itkCudaImageCVF22_ConstPointer)


def itkCudaImageCVF23_New():
    return itkCudaImageCVF23.New()

class itkCudaImageCVF23(itk.itkImagePython.itkImageCVF23):
    r"""Proxy of C++ itkCudaImageCVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF23
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF23

        Create a new object of the class itkCudaImageCVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF23 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF23_swigregister(itkCudaImageCVF23)
itkCudaImageCVF23___New_orig__ = _itkCudaImagePython.itkCudaImageCVF23___New_orig__
itkCudaImageCVF23_cast = _itkCudaImagePython.itkCudaImageCVF23_cast

class itkCudaImageCVF23_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF23_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF23_ConstPointer
        __init__(self, p) -> itkCudaImageCVF23_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF23_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF23_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF23 const *

        """
        _itkCudaImagePython.itkCudaImageCVF23_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF23_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF23_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF23_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF23_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF23_ConstPointer_swigregister(itkCudaImageCVF23_ConstPointer)


def itkCudaImageCVF24_New():
    return itkCudaImageCVF24.New()

class itkCudaImageCVF24(itk.itkImagePython.itkImageCVF24):
    r"""Proxy of C++ itkCudaImageCVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF24
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF24_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF24

        Create a new object of the class itkCudaImageCVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF24 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF24_swigregister(itkCudaImageCVF24)
itkCudaImageCVF24___New_orig__ = _itkCudaImagePython.itkCudaImageCVF24___New_orig__
itkCudaImageCVF24_cast = _itkCudaImagePython.itkCudaImageCVF24_cast

class itkCudaImageCVF24_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF24_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF24_ConstPointer
        __init__(self, p) -> itkCudaImageCVF24_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF24_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF24_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF24 const *

        """
        _itkCudaImagePython.itkCudaImageCVF24_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF24_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF24_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF24_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF24_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF24_ConstPointer_swigregister(itkCudaImageCVF24_ConstPointer)


def itkCudaImageCVF32_New():
    return itkCudaImageCVF32.New()

class itkCudaImageCVF32(itk.itkImagePython.itkImageCVF32):
    r"""Proxy of C++ itkCudaImageCVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF32
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF32

        Create a new object of the class itkCudaImageCVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF32 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF32_swigregister(itkCudaImageCVF32)
itkCudaImageCVF32___New_orig__ = _itkCudaImagePython.itkCudaImageCVF32___New_orig__
itkCudaImageCVF32_cast = _itkCudaImagePython.itkCudaImageCVF32_cast

class itkCudaImageCVF32_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF32_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF32_ConstPointer
        __init__(self, p) -> itkCudaImageCVF32_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF32_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF32_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF32 const *

        """
        _itkCudaImagePython.itkCudaImageCVF32_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF32_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF32_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF32_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF32_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF32_ConstPointer_swigregister(itkCudaImageCVF32_ConstPointer)


def itkCudaImageCVF33_New():
    return itkCudaImageCVF33.New()

class itkCudaImageCVF33(itk.itkImagePython.itkImageCVF33):
    r"""Proxy of C++ itkCudaImageCVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF33
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF33

        Create a new object of the class itkCudaImageCVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF33 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF33_swigregister(itkCudaImageCVF33)
itkCudaImageCVF33___New_orig__ = _itkCudaImagePython.itkCudaImageCVF33___New_orig__
itkCudaImageCVF33_cast = _itkCudaImagePython.itkCudaImageCVF33_cast

class itkCudaImageCVF33_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF33_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF33_ConstPointer
        __init__(self, p) -> itkCudaImageCVF33_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF33_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF33_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF33 const *

        """
        _itkCudaImagePython.itkCudaImageCVF33_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF33_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF33_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF33_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF33_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF33_ConstPointer_swigregister(itkCudaImageCVF33_ConstPointer)


def itkCudaImageCVF34_New():
    return itkCudaImageCVF34.New()

class itkCudaImageCVF34(itk.itkImagePython.itkImageCVF34):
    r"""Proxy of C++ itkCudaImageCVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF34
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF34_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF34

        Create a new object of the class itkCudaImageCVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF34 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF34_swigregister(itkCudaImageCVF34)
itkCudaImageCVF34___New_orig__ = _itkCudaImagePython.itkCudaImageCVF34___New_orig__
itkCudaImageCVF34_cast = _itkCudaImagePython.itkCudaImageCVF34_cast

class itkCudaImageCVF34_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF34_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF34_ConstPointer
        __init__(self, p) -> itkCudaImageCVF34_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF34_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF34_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF34 const *

        """
        _itkCudaImagePython.itkCudaImageCVF34_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF34_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF34_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF34_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF34_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF34_ConstPointer_swigregister(itkCudaImageCVF34_ConstPointer)


def itkCudaImageCVF42_New():
    return itkCudaImageCVF42.New()

class itkCudaImageCVF42(itk.itkImagePython.itkImageCVF42):
    r"""Proxy of C++ itkCudaImageCVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF42
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF42

        Create a new object of the class itkCudaImageCVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF42 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF42_swigregister(itkCudaImageCVF42)
itkCudaImageCVF42___New_orig__ = _itkCudaImagePython.itkCudaImageCVF42___New_orig__
itkCudaImageCVF42_cast = _itkCudaImagePython.itkCudaImageCVF42_cast

class itkCudaImageCVF42_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF42_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF42_ConstPointer
        __init__(self, p) -> itkCudaImageCVF42_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF42_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF42_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF42 const *

        """
        _itkCudaImagePython.itkCudaImageCVF42_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF42_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF42_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF42_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF42_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF42_ConstPointer_swigregister(itkCudaImageCVF42_ConstPointer)


def itkCudaImageCVF43_New():
    return itkCudaImageCVF43.New()

class itkCudaImageCVF43(itk.itkImagePython.itkImageCVF43):
    r"""Proxy of C++ itkCudaImageCVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF43
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF43

        Create a new object of the class itkCudaImageCVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF43 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF43_swigregister(itkCudaImageCVF43)
itkCudaImageCVF43___New_orig__ = _itkCudaImagePython.itkCudaImageCVF43___New_orig__
itkCudaImageCVF43_cast = _itkCudaImagePython.itkCudaImageCVF43_cast

class itkCudaImageCVF43_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF43_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF43_ConstPointer
        __init__(self, p) -> itkCudaImageCVF43_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF43_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF43_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF43 const *

        """
        _itkCudaImagePython.itkCudaImageCVF43_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF43_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF43_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF43_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF43_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF43_ConstPointer_swigregister(itkCudaImageCVF43_ConstPointer)


def itkCudaImageCVF44_New():
    return itkCudaImageCVF44.New()

class itkCudaImageCVF44(itk.itkImagePython.itkImageCVF44):
    r"""Proxy of C++ itkCudaImageCVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF44
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF44_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF44

        Create a new object of the class itkCudaImageCVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF44 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF44_swigregister(itkCudaImageCVF44)
itkCudaImageCVF44___New_orig__ = _itkCudaImagePython.itkCudaImageCVF44___New_orig__
itkCudaImageCVF44_cast = _itkCudaImagePython.itkCudaImageCVF44_cast

class itkCudaImageCVF44_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF44_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF44_ConstPointer
        __init__(self, p) -> itkCudaImageCVF44_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF44_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF44_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF44 const *

        """
        _itkCudaImagePython.itkCudaImageCVF44_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF44_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF44_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF44_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF44_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF44_ConstPointer_swigregister(itkCudaImageCVF44_ConstPointer)


def itkCudaImageCVF52_New():
    return itkCudaImageCVF52.New()

class itkCudaImageCVF52(itk.itkImageRTKPython.itkImageCVF52):
    r"""Proxy of C++ itkCudaImageCVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF52___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF52
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF52_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF52

        Create a new object of the class itkCudaImageCVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF52 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF52_swigregister(itkCudaImageCVF52)
itkCudaImageCVF52___New_orig__ = _itkCudaImagePython.itkCudaImageCVF52___New_orig__
itkCudaImageCVF52_cast = _itkCudaImagePython.itkCudaImageCVF52_cast

class itkCudaImageCVF52_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF52_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF52_ConstPointer
        __init__(self, p) -> itkCudaImageCVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF52_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF52 const *

        """
        _itkCudaImagePython.itkCudaImageCVF52_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF52_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF52_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF52_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF52_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF52_ConstPointer_swigregister(itkCudaImageCVF52_ConstPointer)


def itkCudaImageCVF53_New():
    return itkCudaImageCVF53.New()

class itkCudaImageCVF53(itk.itkImageRTKPython.itkImageCVF53):
    r"""Proxy of C++ itkCudaImageCVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF53
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF53_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF53

        Create a new object of the class itkCudaImageCVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF53 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF53_swigregister(itkCudaImageCVF53)
itkCudaImageCVF53___New_orig__ = _itkCudaImagePython.itkCudaImageCVF53___New_orig__
itkCudaImageCVF53_cast = _itkCudaImagePython.itkCudaImageCVF53_cast

class itkCudaImageCVF53_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF53_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF53_ConstPointer
        __init__(self, p) -> itkCudaImageCVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF53_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF53 const *

        """
        _itkCudaImagePython.itkCudaImageCVF53_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF53_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF53_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF53_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF53_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF53_ConstPointer_swigregister(itkCudaImageCVF53_ConstPointer)


def itkCudaImageCVF54_New():
    return itkCudaImageCVF54.New()

class itkCudaImageCVF54(itk.itkImageRTKPython.itkImageCVF54):
    r"""Proxy of C++ itkCudaImageCVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF54___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF54
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageCVF54_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF54

        Create a new object of the class itkCudaImageCVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF54 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF54_swigregister(itkCudaImageCVF54)
itkCudaImageCVF54___New_orig__ = _itkCudaImagePython.itkCudaImageCVF54___New_orig__
itkCudaImageCVF54_cast = _itkCudaImagePython.itkCudaImageCVF54_cast

class itkCudaImageCVF54_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF54_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF54_ConstPointer
        __init__(self, p) -> itkCudaImageCVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF54_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF54 const *

        """
        _itkCudaImagePython.itkCudaImageCVF54_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageCVF54_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageCVF54_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageCVF54_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_GetReferenceCount)

# Register itkCudaImageCVF54_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageCVF54_ConstPointer_swigregister(itkCudaImageCVF54_ConstPointer)


def itkCudaImageF2_New():
    return itkCudaImageF2.New()

class itkCudaImageF2(itk.itkImagePython.itkImageF2):
    r"""Proxy of C++ itkCudaImageF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageF2
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageF2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageF2

        Create a new object of the class itkCudaImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageF2 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageF2_swigregister(itkCudaImageF2)
itkCudaImageF2___New_orig__ = _itkCudaImagePython.itkCudaImageF2___New_orig__
itkCudaImageF2_cast = _itkCudaImagePython.itkCudaImageF2_cast

class itkCudaImageF2_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageF2_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageF2_ConstPointer
        __init__(self, p) -> itkCudaImageF2_ConstPointer

        Parameters
        ----------
        p: itkCudaImageF2_ConstPointer const &

        __init__(self, p) -> itkCudaImageF2_ConstPointer

        Parameters
        ----------
        p: itkCudaImageF2 const *

        """
        _itkCudaImagePython.itkCudaImageF2_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageF2_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageF2_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageF2_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF2_ConstPointer_GetReferenceCount)

# Register itkCudaImageF2_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageF2_ConstPointer_swigregister(itkCudaImageF2_ConstPointer)


def itkCudaImageF3_New():
    return itkCudaImageF3.New()

class itkCudaImageF3(itk.itkImagePython.itkImageF3):
    r"""Proxy of C++ itkCudaImageF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageF3
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageF3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageF3

        Create a new object of the class itkCudaImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageF3 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageF3_swigregister(itkCudaImageF3)
itkCudaImageF3___New_orig__ = _itkCudaImagePython.itkCudaImageF3___New_orig__
itkCudaImageF3_cast = _itkCudaImagePython.itkCudaImageF3_cast

class itkCudaImageF3_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageF3_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageF3_ConstPointer
        __init__(self, p) -> itkCudaImageF3_ConstPointer

        Parameters
        ----------
        p: itkCudaImageF3_ConstPointer const &

        __init__(self, p) -> itkCudaImageF3_ConstPointer

        Parameters
        ----------
        p: itkCudaImageF3 const *

        """
        _itkCudaImagePython.itkCudaImageF3_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageF3_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageF3_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageF3_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF3_ConstPointer_GetReferenceCount)

# Register itkCudaImageF3_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageF3_ConstPointer_swigregister(itkCudaImageF3_ConstPointer)


def itkCudaImageF4_New():
    return itkCudaImageF4.New()

class itkCudaImageF4(itk.itkImagePython.itkImageF4):
    r"""Proxy of C++ itkCudaImageF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageF4
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageF4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageF4

        Create a new object of the class itkCudaImageF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageF4 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageF4_swigregister(itkCudaImageF4)
itkCudaImageF4___New_orig__ = _itkCudaImagePython.itkCudaImageF4___New_orig__
itkCudaImageF4_cast = _itkCudaImagePython.itkCudaImageF4_cast

class itkCudaImageF4_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageF4_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageF4_ConstPointer
        __init__(self, p) -> itkCudaImageF4_ConstPointer

        Parameters
        ----------
        p: itkCudaImageF4_ConstPointer const &

        __init__(self, p) -> itkCudaImageF4_ConstPointer

        Parameters
        ----------
        p: itkCudaImageF4 const *

        """
        _itkCudaImagePython.itkCudaImageF4_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageF4_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageF4_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageF4_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageF4_ConstPointer_GetReferenceCount)

# Register itkCudaImageF4_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageF4_ConstPointer_swigregister(itkCudaImageF4_ConstPointer)


def itkCudaImageVF22_New():
    return itkCudaImageVF22.New()

class itkCudaImageVF22(itk.itkImagePython.itkImageVF22):
    r"""Proxy of C++ itkCudaImageVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF22
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF22

        Create a new object of the class itkCudaImageVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF22 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF22_swigregister(itkCudaImageVF22)
itkCudaImageVF22___New_orig__ = _itkCudaImagePython.itkCudaImageVF22___New_orig__
itkCudaImageVF22_cast = _itkCudaImagePython.itkCudaImageVF22_cast

class itkCudaImageVF22_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF22_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF22_ConstPointer
        __init__(self, p) -> itkCudaImageVF22_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF22_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF22_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF22 const *

        """
        _itkCudaImagePython.itkCudaImageVF22_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF22_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF22_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF22_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF22_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF22_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF22_ConstPointer_swigregister(itkCudaImageVF22_ConstPointer)


def itkCudaImageVF23_New():
    return itkCudaImageVF23.New()

class itkCudaImageVF23(itk.itkImagePython.itkImageVF23):
    r"""Proxy of C++ itkCudaImageVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF23
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF23

        Create a new object of the class itkCudaImageVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF23 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF23_swigregister(itkCudaImageVF23)
itkCudaImageVF23___New_orig__ = _itkCudaImagePython.itkCudaImageVF23___New_orig__
itkCudaImageVF23_cast = _itkCudaImagePython.itkCudaImageVF23_cast

class itkCudaImageVF23_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF23_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF23_ConstPointer
        __init__(self, p) -> itkCudaImageVF23_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF23_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF23_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF23 const *

        """
        _itkCudaImagePython.itkCudaImageVF23_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF23_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF23_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF23_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF23_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF23_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF23_ConstPointer_swigregister(itkCudaImageVF23_ConstPointer)


def itkCudaImageVF24_New():
    return itkCudaImageVF24.New()

class itkCudaImageVF24(itk.itkImagePython.itkImageVF24):
    r"""Proxy of C++ itkCudaImageVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF24
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF24_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF24

        Create a new object of the class itkCudaImageVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF24 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF24_swigregister(itkCudaImageVF24)
itkCudaImageVF24___New_orig__ = _itkCudaImagePython.itkCudaImageVF24___New_orig__
itkCudaImageVF24_cast = _itkCudaImagePython.itkCudaImageVF24_cast

class itkCudaImageVF24_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF24_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF24_ConstPointer
        __init__(self, p) -> itkCudaImageVF24_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF24_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF24_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF24 const *

        """
        _itkCudaImagePython.itkCudaImageVF24_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF24_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF24_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF24_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF24_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF24_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF24_ConstPointer_swigregister(itkCudaImageVF24_ConstPointer)


def itkCudaImageVF32_New():
    return itkCudaImageVF32.New()

class itkCudaImageVF32(itk.itkImagePython.itkImageVF32):
    r"""Proxy of C++ itkCudaImageVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF32
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF32

        Create a new object of the class itkCudaImageVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF32 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF32_swigregister(itkCudaImageVF32)
itkCudaImageVF32___New_orig__ = _itkCudaImagePython.itkCudaImageVF32___New_orig__
itkCudaImageVF32_cast = _itkCudaImagePython.itkCudaImageVF32_cast

class itkCudaImageVF32_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF32_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF32_ConstPointer
        __init__(self, p) -> itkCudaImageVF32_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF32_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF32_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF32 const *

        """
        _itkCudaImagePython.itkCudaImageVF32_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF32_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF32_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF32_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF32_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF32_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF32_ConstPointer_swigregister(itkCudaImageVF32_ConstPointer)


def itkCudaImageVF33_New():
    return itkCudaImageVF33.New()

class itkCudaImageVF33(itk.itkImagePython.itkImageVF33):
    r"""Proxy of C++ itkCudaImageVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF33
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF33

        Create a new object of the class itkCudaImageVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF33 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF33_swigregister(itkCudaImageVF33)
itkCudaImageVF33___New_orig__ = _itkCudaImagePython.itkCudaImageVF33___New_orig__
itkCudaImageVF33_cast = _itkCudaImagePython.itkCudaImageVF33_cast

class itkCudaImageVF33_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF33_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF33_ConstPointer
        __init__(self, p) -> itkCudaImageVF33_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF33_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF33_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF33 const *

        """
        _itkCudaImagePython.itkCudaImageVF33_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF33_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF33_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF33_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF33_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF33_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF33_ConstPointer_swigregister(itkCudaImageVF33_ConstPointer)


def itkCudaImageVF34_New():
    return itkCudaImageVF34.New()

class itkCudaImageVF34(itk.itkImagePython.itkImageVF34):
    r"""Proxy of C++ itkCudaImageVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF34
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF34_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF34

        Create a new object of the class itkCudaImageVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF34 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF34_swigregister(itkCudaImageVF34)
itkCudaImageVF34___New_orig__ = _itkCudaImagePython.itkCudaImageVF34___New_orig__
itkCudaImageVF34_cast = _itkCudaImagePython.itkCudaImageVF34_cast

class itkCudaImageVF34_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF34_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF34_ConstPointer
        __init__(self, p) -> itkCudaImageVF34_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF34_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF34_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF34 const *

        """
        _itkCudaImagePython.itkCudaImageVF34_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF34_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF34_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF34_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF34_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF34_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF34_ConstPointer_swigregister(itkCudaImageVF34_ConstPointer)


def itkCudaImageVF42_New():
    return itkCudaImageVF42.New()

class itkCudaImageVF42(itk.itkImagePython.itkImageVF42):
    r"""Proxy of C++ itkCudaImageVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF42
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF42

        Create a new object of the class itkCudaImageVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF42 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF42_swigregister(itkCudaImageVF42)
itkCudaImageVF42___New_orig__ = _itkCudaImagePython.itkCudaImageVF42___New_orig__
itkCudaImageVF42_cast = _itkCudaImagePython.itkCudaImageVF42_cast

class itkCudaImageVF42_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF42_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF42_ConstPointer
        __init__(self, p) -> itkCudaImageVF42_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF42_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF42_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF42 const *

        """
        _itkCudaImagePython.itkCudaImageVF42_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF42_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF42_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF42_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF42_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF42_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF42_ConstPointer_swigregister(itkCudaImageVF42_ConstPointer)


def itkCudaImageVF43_New():
    return itkCudaImageVF43.New()

class itkCudaImageVF43(itk.itkImagePython.itkImageVF43):
    r"""Proxy of C++ itkCudaImageVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF43
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF43

        Create a new object of the class itkCudaImageVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF43 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF43_swigregister(itkCudaImageVF43)
itkCudaImageVF43___New_orig__ = _itkCudaImagePython.itkCudaImageVF43___New_orig__
itkCudaImageVF43_cast = _itkCudaImagePython.itkCudaImageVF43_cast

class itkCudaImageVF43_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF43_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF43_ConstPointer
        __init__(self, p) -> itkCudaImageVF43_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF43_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF43_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF43 const *

        """
        _itkCudaImagePython.itkCudaImageVF43_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF43_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF43_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF43_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF43_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF43_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF43_ConstPointer_swigregister(itkCudaImageVF43_ConstPointer)


def itkCudaImageVF44_New():
    return itkCudaImageVF44.New()

class itkCudaImageVF44(itk.itkImagePython.itkImageVF44):
    r"""Proxy of C++ itkCudaImageVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF44
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF44_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF44

        Create a new object of the class itkCudaImageVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF44 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF44_swigregister(itkCudaImageVF44)
itkCudaImageVF44___New_orig__ = _itkCudaImagePython.itkCudaImageVF44___New_orig__
itkCudaImageVF44_cast = _itkCudaImagePython.itkCudaImageVF44_cast

class itkCudaImageVF44_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF44_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF44_ConstPointer
        __init__(self, p) -> itkCudaImageVF44_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF44_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF44_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF44 const *

        """
        _itkCudaImagePython.itkCudaImageVF44_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF44_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF44_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF44_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF44_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF44_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF44_ConstPointer_swigregister(itkCudaImageVF44_ConstPointer)


def itkCudaImageVF52_New():
    return itkCudaImageVF52.New()

class itkCudaImageVF52(itk.itkImageRTKPython.itkImageVF52):
    r"""Proxy of C++ itkCudaImageVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF52___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF52
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF52_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF52

        Create a new object of the class itkCudaImageVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF52 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF52_swigregister(itkCudaImageVF52)
itkCudaImageVF52___New_orig__ = _itkCudaImagePython.itkCudaImageVF52___New_orig__
itkCudaImageVF52_cast = _itkCudaImagePython.itkCudaImageVF52_cast

class itkCudaImageVF52_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF52_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF52_ConstPointer
        __init__(self, p) -> itkCudaImageVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF52_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF52 const *

        """
        _itkCudaImagePython.itkCudaImageVF52_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF52_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF52_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF52_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF52_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF52_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF52_ConstPointer_swigregister(itkCudaImageVF52_ConstPointer)


def itkCudaImageVF53_New():
    return itkCudaImageVF53.New()

class itkCudaImageVF53(itk.itkImageRTKPython.itkImageVF53):
    r"""Proxy of C++ itkCudaImageVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF53
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF53_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF53

        Create a new object of the class itkCudaImageVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF53 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF53_swigregister(itkCudaImageVF53)
itkCudaImageVF53___New_orig__ = _itkCudaImagePython.itkCudaImageVF53___New_orig__
itkCudaImageVF53_cast = _itkCudaImagePython.itkCudaImageVF53_cast

class itkCudaImageVF53_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF53_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF53_ConstPointer
        __init__(self, p) -> itkCudaImageVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF53_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF53 const *

        """
        _itkCudaImagePython.itkCudaImageVF53_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF53_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF53_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF53_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF53_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF53_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF53_ConstPointer_swigregister(itkCudaImageVF53_ConstPointer)


def itkCudaImageVF54_New():
    return itkCudaImageVF54.New()

class itkCudaImageVF54(itk.itkImageRTKPython.itkImageVF54):
    r"""Proxy of C++ itkCudaImageVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF54___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_Clone)
    Allocate = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetPixel)
    UpdateBuffers = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_UpdateBuffers)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetNeighborhoodAccessor)
    SetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_SetPixelContainer)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetPixelContainer)
    GetModifiableDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetDataManager)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_GetCudaDataManager)
    Graft = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_Graft)
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF54
    cast = _swig_new_static_method(_itkCudaImagePython.itkCudaImageVF54_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF54

        Create a new object of the class itkCudaImageVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF54 in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF54_swigregister(itkCudaImageVF54)
itkCudaImageVF54___New_orig__ = _itkCudaImagePython.itkCudaImageVF54___New_orig__
itkCudaImageVF54_cast = _itkCudaImagePython.itkCudaImageVF54_cast

class itkCudaImageVF54_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF54_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF54_ConstPointer
        __init__(self, p) -> itkCudaImageVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF54_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF54 const *

        """
        _itkCudaImagePython.itkCudaImageVF54_ConstPointer_swiginit(self, _itkCudaImagePython.new_itkCudaImageVF54_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImagePython.delete_itkCudaImageVF54_ConstPointer
    __deref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer___deref__)
    __ref__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer___ref__)
    IsNotNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_IsNotNull)
    IsNull = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_IsNull)
    GetPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetPointer)
    Print = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_Print)
    Swap = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_Swap)
    Clone = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_Clone)
    GetBufferPointer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetBufferPointer)
    GetPixelAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetNeighborhoodAccessor)
    GetPixelContainer = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetPixelContainer)
    GetCudaDataManager = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetCudaDataManager)
    GetDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetDirection)
    GetInverseDirection = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetInverseDirection)
    GetSpacing = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetSpacing)
    GetOrigin = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetOrigin)
    __GetLargestPossibleRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer___GetLargestPossibleRegion_orig__)
    __GetBufferedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer___GetBufferedRegion_orig__)
    __GetRequestedRegion_orig__ = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer___GetRequestedRegion_orig__)
    GetOffsetTable = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetOffsetTable)
    ComputeOffset = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_ComputeOffset)
    ComputeIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_ComputeIndex)
    GetNumberOfComponentsPerPixel = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetNumberOfComponentsPerPixel)
    GetSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetSource)
    GetSourceOutputName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetSourceOutputName)
    GetSourceOutputIndex = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetSourceOutputIndex)
    UpdateSource = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_UpdateSource)
    GetReleaseDataFlag = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetReleaseDataFlag)
    ShouldIReleaseData = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_ShouldIReleaseData)
    GetDataReleased = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetDataReleased)
    GetPipelineMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetPipelineMTime)
    GetUpdateMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetUpdateMTime)
    GetRealTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetRealTimeStamp)
    DebugOn = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_DebugOn)
    DebugOff = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_DebugOff)
    GetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetDebug)
    SetDebug = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_SetDebug)
    GetMTime = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_Modified)

    def AddObserver(self, *args) -> "unsigned long":
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImagePython.itkCudaImageVF54_ConstPointer_AddObserver(self, *args)

    InvokeEvent = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_InvokeEvent)
    HasObserver = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetMetaDataDictionary)
    GetObjectName = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetObjectName)
    CreateAnother = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_CreateAnother)
    GetNameOfClass = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetNameOfClass)
    GetReferenceCount = _swig_new_instance_method(_itkCudaImagePython.itkCudaImageVF54_ConstPointer_GetReferenceCount)

# Register itkCudaImageVF54_ConstPointer in _itkCudaImagePython:
_itkCudaImagePython.itkCudaImageVF54_ConstPointer_swigregister(itkCudaImageVF54_ConstPointer)



