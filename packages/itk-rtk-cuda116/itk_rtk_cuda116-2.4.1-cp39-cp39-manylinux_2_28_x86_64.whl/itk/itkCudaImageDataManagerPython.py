# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImageDataManagerPython
else:
    import _itkCudaImageDataManagerPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCudaImageDataManagerPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCudaImageDataManagerPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCudaDataManagerPython
import itk.itkCudaImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkPointRTKPython

def itkCudaImageDataManagerCICVF22_New():
    return itkCudaImageDataManagerCICVF22.New()

class itkCudaImageDataManagerCICVF22(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF22
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF22

        Create a new object of the class itkCudaImageDataManagerCICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF22 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_swigregister(itkCudaImageDataManagerCICVF22)
itkCudaImageDataManagerCICVF22___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22___New_orig__
itkCudaImageDataManagerCICVF22_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_cast


def itkCudaImageDataManagerCICVF23_New():
    return itkCudaImageDataManagerCICVF23.New()

class itkCudaImageDataManagerCICVF23(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF23
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF23

        Create a new object of the class itkCudaImageDataManagerCICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF23 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_swigregister(itkCudaImageDataManagerCICVF23)
itkCudaImageDataManagerCICVF23___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23___New_orig__
itkCudaImageDataManagerCICVF23_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_cast


def itkCudaImageDataManagerCICVF24_New():
    return itkCudaImageDataManagerCICVF24.New()

class itkCudaImageDataManagerCICVF24(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF24
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF24

        Create a new object of the class itkCudaImageDataManagerCICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF24 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_swigregister(itkCudaImageDataManagerCICVF24)
itkCudaImageDataManagerCICVF24___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24___New_orig__
itkCudaImageDataManagerCICVF24_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_cast


def itkCudaImageDataManagerCICVF32_New():
    return itkCudaImageDataManagerCICVF32.New()

class itkCudaImageDataManagerCICVF32(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF32
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF32

        Create a new object of the class itkCudaImageDataManagerCICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF32 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_swigregister(itkCudaImageDataManagerCICVF32)
itkCudaImageDataManagerCICVF32___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32___New_orig__
itkCudaImageDataManagerCICVF32_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_cast


def itkCudaImageDataManagerCICVF33_New():
    return itkCudaImageDataManagerCICVF33.New()

class itkCudaImageDataManagerCICVF33(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF33
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF33

        Create a new object of the class itkCudaImageDataManagerCICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF33 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_swigregister(itkCudaImageDataManagerCICVF33)
itkCudaImageDataManagerCICVF33___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33___New_orig__
itkCudaImageDataManagerCICVF33_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_cast


def itkCudaImageDataManagerCICVF34_New():
    return itkCudaImageDataManagerCICVF34.New()

class itkCudaImageDataManagerCICVF34(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF34
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF34

        Create a new object of the class itkCudaImageDataManagerCICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF34 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_swigregister(itkCudaImageDataManagerCICVF34)
itkCudaImageDataManagerCICVF34___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34___New_orig__
itkCudaImageDataManagerCICVF34_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_cast


def itkCudaImageDataManagerCICVF42_New():
    return itkCudaImageDataManagerCICVF42.New()

class itkCudaImageDataManagerCICVF42(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF42
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF42

        Create a new object of the class itkCudaImageDataManagerCICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF42 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_swigregister(itkCudaImageDataManagerCICVF42)
itkCudaImageDataManagerCICVF42___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42___New_orig__
itkCudaImageDataManagerCICVF42_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_cast


def itkCudaImageDataManagerCICVF43_New():
    return itkCudaImageDataManagerCICVF43.New()

class itkCudaImageDataManagerCICVF43(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF43
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF43

        Create a new object of the class itkCudaImageDataManagerCICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF43 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_swigregister(itkCudaImageDataManagerCICVF43)
itkCudaImageDataManagerCICVF43___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43___New_orig__
itkCudaImageDataManagerCICVF43_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_cast


def itkCudaImageDataManagerCICVF44_New():
    return itkCudaImageDataManagerCICVF44.New()

class itkCudaImageDataManagerCICVF44(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF44
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF44

        Create a new object of the class itkCudaImageDataManagerCICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF44 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_swigregister(itkCudaImageDataManagerCICVF44)
itkCudaImageDataManagerCICVF44___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44___New_orig__
itkCudaImageDataManagerCICVF44_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_cast


def itkCudaImageDataManagerCICVF52_New():
    return itkCudaImageDataManagerCICVF52.New()

class itkCudaImageDataManagerCICVF52(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF52
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF52

        Create a new object of the class itkCudaImageDataManagerCICVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF52 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_swigregister(itkCudaImageDataManagerCICVF52)
itkCudaImageDataManagerCICVF52___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52___New_orig__
itkCudaImageDataManagerCICVF52_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF52_cast


def itkCudaImageDataManagerCICVF53_New():
    return itkCudaImageDataManagerCICVF53.New()

class itkCudaImageDataManagerCICVF53(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF53
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF53

        Create a new object of the class itkCudaImageDataManagerCICVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF53 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_swigregister(itkCudaImageDataManagerCICVF53)
itkCudaImageDataManagerCICVF53___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53___New_orig__
itkCudaImageDataManagerCICVF53_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF53_cast


def itkCudaImageDataManagerCICVF54_New():
    return itkCudaImageDataManagerCICVF54.New()

class itkCudaImageDataManagerCICVF54(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF54
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF54

        Create a new object of the class itkCudaImageDataManagerCICVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF54 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_swigregister(itkCudaImageDataManagerCICVF54)
itkCudaImageDataManagerCICVF54___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54___New_orig__
itkCudaImageDataManagerCICVF54_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF54_cast


def itkCudaImageDataManagerCIF2_New():
    return itkCudaImageDataManagerCIF2.New()

class itkCudaImageDataManagerCIF2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF2
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF2

        Create a new object of the class itkCudaImageDataManagerCIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_swigregister(itkCudaImageDataManagerCIF2)
itkCudaImageDataManagerCIF2___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2___New_orig__
itkCudaImageDataManagerCIF2_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_cast


def itkCudaImageDataManagerCIF3_New():
    return itkCudaImageDataManagerCIF3.New()

class itkCudaImageDataManagerCIF3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF3
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF3

        Create a new object of the class itkCudaImageDataManagerCIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_swigregister(itkCudaImageDataManagerCIF3)
itkCudaImageDataManagerCIF3___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3___New_orig__
itkCudaImageDataManagerCIF3_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_cast


def itkCudaImageDataManagerCIF4_New():
    return itkCudaImageDataManagerCIF4.New()

class itkCudaImageDataManagerCIF4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF4
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF4

        Create a new object of the class itkCudaImageDataManagerCIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_swigregister(itkCudaImageDataManagerCIF4)
itkCudaImageDataManagerCIF4___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4___New_orig__
itkCudaImageDataManagerCIF4_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_cast


def itkCudaImageDataManagerCIVF22_New():
    return itkCudaImageDataManagerCIVF22.New()

class itkCudaImageDataManagerCIVF22(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF22
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF22

        Create a new object of the class itkCudaImageDataManagerCIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF22 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_swigregister(itkCudaImageDataManagerCIVF22)
itkCudaImageDataManagerCIVF22___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22___New_orig__
itkCudaImageDataManagerCIVF22_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_cast


def itkCudaImageDataManagerCIVF23_New():
    return itkCudaImageDataManagerCIVF23.New()

class itkCudaImageDataManagerCIVF23(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF23
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF23

        Create a new object of the class itkCudaImageDataManagerCIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF23 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_swigregister(itkCudaImageDataManagerCIVF23)
itkCudaImageDataManagerCIVF23___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23___New_orig__
itkCudaImageDataManagerCIVF23_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_cast


def itkCudaImageDataManagerCIVF24_New():
    return itkCudaImageDataManagerCIVF24.New()

class itkCudaImageDataManagerCIVF24(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF24
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF24

        Create a new object of the class itkCudaImageDataManagerCIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF24 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_swigregister(itkCudaImageDataManagerCIVF24)
itkCudaImageDataManagerCIVF24___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24___New_orig__
itkCudaImageDataManagerCIVF24_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_cast


def itkCudaImageDataManagerCIVF32_New():
    return itkCudaImageDataManagerCIVF32.New()

class itkCudaImageDataManagerCIVF32(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF32
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF32

        Create a new object of the class itkCudaImageDataManagerCIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF32 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_swigregister(itkCudaImageDataManagerCIVF32)
itkCudaImageDataManagerCIVF32___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32___New_orig__
itkCudaImageDataManagerCIVF32_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_cast


def itkCudaImageDataManagerCIVF33_New():
    return itkCudaImageDataManagerCIVF33.New()

class itkCudaImageDataManagerCIVF33(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF33
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF33

        Create a new object of the class itkCudaImageDataManagerCIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF33 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_swigregister(itkCudaImageDataManagerCIVF33)
itkCudaImageDataManagerCIVF33___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33___New_orig__
itkCudaImageDataManagerCIVF33_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_cast


def itkCudaImageDataManagerCIVF34_New():
    return itkCudaImageDataManagerCIVF34.New()

class itkCudaImageDataManagerCIVF34(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF34
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF34

        Create a new object of the class itkCudaImageDataManagerCIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF34 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_swigregister(itkCudaImageDataManagerCIVF34)
itkCudaImageDataManagerCIVF34___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34___New_orig__
itkCudaImageDataManagerCIVF34_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_cast


def itkCudaImageDataManagerCIVF42_New():
    return itkCudaImageDataManagerCIVF42.New()

class itkCudaImageDataManagerCIVF42(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF42
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF42

        Create a new object of the class itkCudaImageDataManagerCIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF42 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_swigregister(itkCudaImageDataManagerCIVF42)
itkCudaImageDataManagerCIVF42___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42___New_orig__
itkCudaImageDataManagerCIVF42_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_cast


def itkCudaImageDataManagerCIVF43_New():
    return itkCudaImageDataManagerCIVF43.New()

class itkCudaImageDataManagerCIVF43(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF43
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF43

        Create a new object of the class itkCudaImageDataManagerCIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF43 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_swigregister(itkCudaImageDataManagerCIVF43)
itkCudaImageDataManagerCIVF43___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43___New_orig__
itkCudaImageDataManagerCIVF43_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_cast


def itkCudaImageDataManagerCIVF44_New():
    return itkCudaImageDataManagerCIVF44.New()

class itkCudaImageDataManagerCIVF44(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF44
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF44

        Create a new object of the class itkCudaImageDataManagerCIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF44 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_swigregister(itkCudaImageDataManagerCIVF44)
itkCudaImageDataManagerCIVF44___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44___New_orig__
itkCudaImageDataManagerCIVF44_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_cast


def itkCudaImageDataManagerCIVF52_New():
    return itkCudaImageDataManagerCIVF52.New()

class itkCudaImageDataManagerCIVF52(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF52
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF52

        Create a new object of the class itkCudaImageDataManagerCIVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF52 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_swigregister(itkCudaImageDataManagerCIVF52)
itkCudaImageDataManagerCIVF52___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52___New_orig__
itkCudaImageDataManagerCIVF52_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF52_cast


def itkCudaImageDataManagerCIVF53_New():
    return itkCudaImageDataManagerCIVF53.New()

class itkCudaImageDataManagerCIVF53(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF53
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF53

        Create a new object of the class itkCudaImageDataManagerCIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF53 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_swigregister(itkCudaImageDataManagerCIVF53)
itkCudaImageDataManagerCIVF53___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53___New_orig__
itkCudaImageDataManagerCIVF53_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF53_cast


def itkCudaImageDataManagerCIVF54_New():
    return itkCudaImageDataManagerCIVF54.New()

class itkCudaImageDataManagerCIVF54(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF54
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF54

        Create a new object of the class itkCudaImageDataManagerCIVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF54 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_swigregister(itkCudaImageDataManagerCIVF54)
itkCudaImageDataManagerCIVF54___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54___New_orig__
itkCudaImageDataManagerCIVF54_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF54_cast



