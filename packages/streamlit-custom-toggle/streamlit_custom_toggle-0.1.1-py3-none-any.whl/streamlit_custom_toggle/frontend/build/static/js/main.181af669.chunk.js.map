{"version":3,"sources":["StreamlitCustomToggle.tsx","index.tsx"],"names":["withStreamlitConnection","props","args","label","default_value","value","active_track_fill","active_thumb_color","useEffect","Streamlit","setFrameHeight","React","useState","checkStatus","state","setState","size","disabled","inactiveTrackFillColor","inactiveTrackStrokeColor","activeTrackFillColor","activeTrackStrokeColor","inactiveThumbColor","activeThumbColor","checked","onChange","event","target","name","setComponentValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAiDeA,eApCe,SAACC,GAC7B,MAA0FA,EAAMC,KAAxFC,EAAK,EAALA,MAAOC,EAAa,EAAbA,cAAeC,EAAK,EAALA,MAAOC,EAAiB,EAAjBA,kBAAmBC,EAAkB,EAAlBA,mBACxDC,qBAAU,kBAAMC,IAAUC,oBAE1B,IAIA,EAA0BC,IAAMC,SAAS,CACrCC,YAAaT,IACf,mBAFKU,EAAK,KAAEC,EAAQ,KAKpB,OACE,oCACCZ,EAGC,kBAAC,IAAW,CACZa,KAAK,KACLC,SAAUZ,EACVa,uBAAuB,UACvBC,yBAAyB,UACzBC,qBAAsBd,EACtBe,uBAAuB,UACvBC,mBAAmB,UACnBC,iBAAkBhB,EAClBiB,QAASV,EAAMD,YACfY,SAxBe,SAACC,GACpBX,EAAS,2BAAKD,GAAK,kBAAGY,EAAMC,OAAOC,KAAOF,EAAMC,OAAOH,WACvDf,IAAUoB,mBAAmBH,EAAMC,OAAOH,UAuBtCI,KAAK,oBCtCbE,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,EAAqB,OAExBC,SAASC,eAAe,W","file":"static/js/main.181af669.chunk.js","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport{ ComponentProps, Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\r\nimport { HeartSwitch } from \"@anatoliygatt/heart-switch\";\r\n\r\n\r\ninterface PythonArgs {\r\n  label: string\r\n  default_value: boolean\r\n  value: boolean\r\n  active_track_fill: string\r\n  active_thumb_color: string\r\n}\r\n  \r\nconst StreamlitCustomToggle = (props: ComponentProps) => {\r\n  const { label, default_value, value, active_track_fill, active_thumb_color}: PythonArgs = props.args;\r\n  useEffect(() => Streamlit.setFrameHeight());\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    Streamlit.setComponentValue(!event.target.checked );\r\n  };\r\n  const [state, setState] = React.useState({\r\n      checkStatus: default_value\r\n  });\r\n  \r\n  \r\n    return (\r\n      <>\r\n      {label}\r\n      \r\n      \r\n        <HeartSwitch\r\n        size=\"md\"\r\n        disabled={value}\r\n        inactiveTrackFillColor=\"#cffafe\"\r\n        inactiveTrackStrokeColor=\"#080015\"\r\n        activeTrackFillColor={active_track_fill}\r\n        activeTrackStrokeColor=\"#0891b2\"\r\n        inactiveThumbColor=\"#ecfeff\"\r\n        activeThumbColor={active_thumb_color}\r\n        checked={state.checkStatus}\r\n        onChange={handleChange}\r\n        name=\"checkStatus\"\r\n      /> \r\n      </> \r\n    );\r\n}\r\n\r\n// Make the function publicly available. If you forget this, index.tsx won't find it.\r\nexport default withStreamlitConnection(StreamlitCustomToggle);","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StreamlitCustomToggle from \"./StreamlitCustomToggle\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StreamlitCustomToggle />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}