# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from farm_ng.controller import controller_pb2 as farm__ng_dot_controller_dot_controller__pb2


class ControllerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.moveToGoalPose = channel.unary_stream(
                '/farm_ng.controller.proto.ControllerService/moveToGoalPose',
                request_serializer=farm__ng_dot_controller_dot_controller__pb2.MoveToGoalPoseRequest.SerializeToString,
                response_deserializer=farm__ng_dot_controller_dot_controller__pb2.MoveToGoalPoseResult.FromString,
                )
        self.getServiceState = channel.unary_unary(
                '/farm_ng.controller.proto.ControllerService/getServiceState',
                request_serializer=farm__ng_dot_controller_dot_controller__pb2.GetServiceStateRequest.SerializeToString,
                response_deserializer=farm__ng_dot_controller_dot_controller__pb2.GetServiceStateResult.FromString,
                )
        self.startService = channel.unary_unary(
                '/farm_ng.controller.proto.ControllerService/startService',
                request_serializer=farm__ng_dot_controller_dot_controller__pb2.StartServiceRequest.SerializeToString,
                response_deserializer=farm__ng_dot_controller_dot_controller__pb2.StartServiceResult.FromString,
                )
        self.stopService = channel.unary_unary(
                '/farm_ng.controller.proto.ControllerService/stopService',
                request_serializer=farm__ng_dot_controller_dot_controller__pb2.StopServiceRequest.SerializeToString,
                response_deserializer=farm__ng_dot_controller_dot_controller__pb2.StopServiceResult.FromString,
                )


class ControllerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def moveToGoalPose(self, request, context):
        """called from the gui
        Reports progress back to gui until it achieves the goal
        TODO how to cancel the request (possibly by cancelling the response stream? or using the input as a stream)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getServiceState(self, request, context):
        """Next week
        rpc followTrajectory(stream FollowTrajectorRequest)
        returns (stream FollowTrajectorResult) {}

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ControllerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'moveToGoalPose': grpc.unary_stream_rpc_method_handler(
                    servicer.moveToGoalPose,
                    request_deserializer=farm__ng_dot_controller_dot_controller__pb2.MoveToGoalPoseRequest.FromString,
                    response_serializer=farm__ng_dot_controller_dot_controller__pb2.MoveToGoalPoseResult.SerializeToString,
            ),
            'getServiceState': grpc.unary_unary_rpc_method_handler(
                    servicer.getServiceState,
                    request_deserializer=farm__ng_dot_controller_dot_controller__pb2.GetServiceStateRequest.FromString,
                    response_serializer=farm__ng_dot_controller_dot_controller__pb2.GetServiceStateResult.SerializeToString,
            ),
            'startService': grpc.unary_unary_rpc_method_handler(
                    servicer.startService,
                    request_deserializer=farm__ng_dot_controller_dot_controller__pb2.StartServiceRequest.FromString,
                    response_serializer=farm__ng_dot_controller_dot_controller__pb2.StartServiceResult.SerializeToString,
            ),
            'stopService': grpc.unary_unary_rpc_method_handler(
                    servicer.stopService,
                    request_deserializer=farm__ng_dot_controller_dot_controller__pb2.StopServiceRequest.FromString,
                    response_serializer=farm__ng_dot_controller_dot_controller__pb2.StopServiceResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'farm_ng.controller.proto.ControllerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ControllerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def moveToGoalPose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/farm_ng.controller.proto.ControllerService/moveToGoalPose',
            farm__ng_dot_controller_dot_controller__pb2.MoveToGoalPoseRequest.SerializeToString,
            farm__ng_dot_controller_dot_controller__pb2.MoveToGoalPoseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getServiceState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.controller.proto.ControllerService/getServiceState',
            farm__ng_dot_controller_dot_controller__pb2.GetServiceStateRequest.SerializeToString,
            farm__ng_dot_controller_dot_controller__pb2.GetServiceStateResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def startService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.controller.proto.ControllerService/startService',
            farm__ng_dot_controller_dot_controller__pb2.StartServiceRequest.SerializeToString,
            farm__ng_dot_controller_dot_controller__pb2.StartServiceResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.controller.proto.ControllerService/stopService',
            farm__ng_dot_controller_dot_controller__pb2.StopServiceRequest.SerializeToString,
            farm__ng_dot_controller_dot_controller__pb2.StopServiceResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
