# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from farm_ng.state_estimator import state_estimator_pb2 as farm__ng_dot_state__estimator_dot_state__estimator__pb2


class StateEstimatorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.robotDynamics = channel.unary_stream(
                '/farm_ng.state_estimator.proto.StateEstimatorService/robotDynamics',
                request_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotDynamicsRequest.SerializeToString,
                response_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotDynamicsResult.FromString,
                )
        self.robotCalibrationResult = channel.unary_unary(
                '/farm_ng.state_estimator.proto.StateEstimatorService/robotCalibrationResult',
                request_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotCalibrationRequest.SerializeToString,
                response_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotCalibrationResult.FromString,
                )
        self.getServiceState = channel.unary_unary(
                '/farm_ng.state_estimator.proto.StateEstimatorService/getServiceState',
                request_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.GetServiceStateRequest.SerializeToString,
                response_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.GetServiceStateResult.FromString,
                )
        self.startService = channel.unary_unary(
                '/farm_ng.state_estimator.proto.StateEstimatorService/startService',
                request_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StartServiceRequest.SerializeToString,
                response_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StartServiceResult.FromString,
                )
        self.stopService = channel.unary_unary(
                '/farm_ng.state_estimator.proto.StateEstimatorService/stopService',
                request_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StopServiceRequest.SerializeToString,
                response_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StopServiceResult.FromString,
                )


class StateEstimatorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def robotDynamics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def robotCalibrationResult(self, request, context):
        """TODO: Return control signal (request) to state estimator
        rpc controlRobotDynamics(stream ControlRobotDynamicsRequest)
        returns (stream ControlRobotDynamicsResult) {}

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getServiceState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StateEstimatorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'robotDynamics': grpc.unary_stream_rpc_method_handler(
                    servicer.robotDynamics,
                    request_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotDynamicsRequest.FromString,
                    response_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotDynamicsResult.SerializeToString,
            ),
            'robotCalibrationResult': grpc.unary_unary_rpc_method_handler(
                    servicer.robotCalibrationResult,
                    request_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotCalibrationRequest.FromString,
                    response_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotCalibrationResult.SerializeToString,
            ),
            'getServiceState': grpc.unary_unary_rpc_method_handler(
                    servicer.getServiceState,
                    request_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.GetServiceStateRequest.FromString,
                    response_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.GetServiceStateResult.SerializeToString,
            ),
            'startService': grpc.unary_unary_rpc_method_handler(
                    servicer.startService,
                    request_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StartServiceRequest.FromString,
                    response_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StartServiceResult.SerializeToString,
            ),
            'stopService': grpc.unary_unary_rpc_method_handler(
                    servicer.stopService,
                    request_deserializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StopServiceRequest.FromString,
                    response_serializer=farm__ng_dot_state__estimator_dot_state__estimator__pb2.StopServiceResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'farm_ng.state_estimator.proto.StateEstimatorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StateEstimatorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def robotDynamics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/farm_ng.state_estimator.proto.StateEstimatorService/robotDynamics',
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotDynamicsRequest.SerializeToString,
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotDynamicsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def robotCalibrationResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.state_estimator.proto.StateEstimatorService/robotCalibrationResult',
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotCalibrationRequest.SerializeToString,
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.RobotCalibrationResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getServiceState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.state_estimator.proto.StateEstimatorService/getServiceState',
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.GetServiceStateRequest.SerializeToString,
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.GetServiceStateResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def startService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.state_estimator.proto.StateEstimatorService/startService',
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.StartServiceRequest.SerializeToString,
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.StartServiceResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/farm_ng.state_estimator.proto.StateEstimatorService/stopService',
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.StopServiceRequest.SerializeToString,
            farm__ng_dot_state__estimator_dot_state__estimator__pb2.StopServiceResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
