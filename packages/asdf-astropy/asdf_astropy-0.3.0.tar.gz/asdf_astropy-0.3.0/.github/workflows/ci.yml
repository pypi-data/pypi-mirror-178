name: CI

on:
  workflow_dispatch:
  schedule:
    # Run every Monday at 6am UTC
    - cron: '0 6 * * 1'
  push:
    branches:
      - main
      - '*.x'
    tags:
      - "*"
  pull_request:

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      requirements-hash: ${{ steps.requirements-hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v3
      - id: requirements-hash
        run: echo "::set-output name=hash::${{ hashFiles('**/pyproject.toml', '**/setup.*', 'tox.ini') }}"

  core:
    needs: [setup]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: py39-cov
        - linux: py39-test-devdeps-cov
        - linux: py38-test-cov
        - linux: py39-astropylts-cov
        - linux: py39-transformlts-cov
      coverage: codecov

  test:
    needs: [core, asdf-transform-schemas]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: py310-test
        - macos: py39-test
        - windows: py39-test
        - linux: py311-test-devdeps
          python-version: 3.11.0

  numpy:
    needs: [core, asdf-transform-schemas]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: py39-test-numpy119
        - linux: py39-test-numpy120
        - linux: py39-test-numpy121
        - linux: py39-test-numpy122

  warnings:
    needs: [core, asdf-transform-schemas]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: warnings

  wheel_building:
    needs: [core, asdf-transform-schemas]
    permissions:
      contents: none
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish_pure_python.yml@v1
    if: (github.event_name == 'push' || github.event_name == 'pull_request')
    with:
      upload_to_pypi: false
      upload_to_anaconda: false
      test_extras: test
      test_command: pytest --pyargs asdf_astropy

  asdf-transform-schemas:
    name: Run asdf-transform-schemas development tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout asdf-astropy
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: asdf-astropy
      - name: Checkout asdf-transform-schemas-dev
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: asdf-format/asdf-transform-schemas
          ref: master
          path: asdf-transform-schemas
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install asdf-astropy
        run: cd asdf-astropy && pip install .[test]
      - name: Install asdf-transform-schemas
        run: cd asdf-transform-schemas && pip install -e .[test]
      - name: Pip Freeze
        run: pip freeze
      - name: Run asdf-transform-schemas development tests
        run: cd asdf-transform-schemas && pytest
