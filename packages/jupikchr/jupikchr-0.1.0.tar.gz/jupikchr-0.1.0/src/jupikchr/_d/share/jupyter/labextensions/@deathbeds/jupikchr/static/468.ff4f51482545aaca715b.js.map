{"version":3,"file":"468.ff4f51482545aaca715b.js?v=ff4f51482545aaca715b","mappings":"0MAcA,IAAIA,EAA8B,KAK3B,MAAMC,GAAiB,IAAAC,wBAAuB,EAAAC,GAAI,CACvDC,GAAI,SACJC,MAAO,SACPC,YAAa,kBACbC,kBAAmB,CACjBC,OAAQ,wCACRC,OAAQ,sBAEVC,SAAU,CACRD,OAAQ,sQAUVD,OAAQG,UAGN,GAAqB,OAFFX,EAGjB,MAAO,CAHUA,GAMnB,MAAM,WAAEY,SAAqB,2DACvBA,IACN,MAAM,uBAAEC,SAAiC,mDAEzC,MAAO,CADab,EAAUa,EACT,IAInBC,EAAmD,CACvDV,GAAI,GAAG,EAAAD,YACPY,SAAU,CAAC,EAAAC,wBACXC,WAAW,EACXC,SAAU,CAACC,EAAwBC,KACjC,MAAMC,EAAM,CACVC,KAAM,EAAAnB,GACNoB,QAAS,KACTC,QAASb,UACP,MAAM,WAAEC,SAAqB,qDAE7B,aADMA,UACQ,oDAAgC,GAGlDQ,EAASK,eAAeJ,EAAI,GAIhC,GAAgBpB,EAAgBa,E,2lDCrEnBY,E,SACAvB,EAAKuB,EAAQJ,KACbK,EAAUD,EAAQH,QAClBK,EAAY,GAAGzB,WAEf0B,EAAQ,CAAC,SAAU,YACnBC,EAAa,0DACbC,EAAoB,2BAE1B,IAAUC,GAAjB,SAAiBA,GACF,EAAAC,OAAS,kBACT,EAAAC,KAAO,gBACP,EAAAC,SAAW,mBACzB,CAJD,CAAiBH,IAAAA,EAAG,KAOb,MAAMI,EAAmB,EAInBC,EAAO,Q","sources":["webpack://@deathbeds/jupikchr/./src/plugin.ts","webpack://@deathbeds/jupikchr/./src/tokens.ts"],"sourcesContent":["import { simpleMarkdownItPlugin } from '@agoose77/jupyterlab-markup';\nimport { NS, VERSION } from './tokens';\n\nimport { Application, IPlugin } from '@lumino/application';\nimport { Widget } from '@lumino/widgets';\n\nimport { ExportMap, IJupyterWidgetRegistry } from '@jupyter-widgets/base';\n\nimport type MarkdownIt from 'markdown-it';\n\nexport interface IMdItPlugin {\n  (md: MarkdownIt): void;\n}\n\nlet _PLUGIN: IMdItPlugin | null = null;\n\n/**\n * Provides ASCII diagrams in code blocks\n */\nexport const markdownPlugin = simpleMarkdownItPlugin(NS, {\n  id: `pikchr`,\n  title: 'pikchr',\n  description: 'pikchr diagrams',\n  documentationUrls: {\n    plugin: 'https://github.com/deathbeds/jupikchr',\n    pikchr: 'https://pikchr.org',\n  },\n  examples: {\n    pikchr: `\n  \\`\\`\\`pikchr\n  arrow right 200% \"Markdown\" \"Source\"\n  box rad 10px \"Markdown\" \"Formatter\" \"(markdown.c)\" fit\n  arrow right 200% \"HTML+SVG\" \"Output\"\n  arrow <-> down 70% from last box.s\n  box same \"Pikchr\" \"Formatter\" \"(pikchr.c)\" fit\n  \\`\\`\\`\n          `,\n  },\n  plugin: async () => {\n    let cachedPlugin = _PLUGIN;\n\n    if (cachedPlugin !== null) {\n      return [cachedPlugin];\n    }\n\n    const { initialize } = await import('./render');\n    await initialize();\n    const { renderPikchrMarkdownIt } = await import('./md-it-plugin');\n    let loadedPlugin = (_PLUGIN = renderPikchrMarkdownIt);\n    return [loadedPlugin];\n  },\n});\n\nconst widgetPlugin: IPlugin<Application<Widget>, void> = {\n  id: `${NS}:widget`,\n  requires: [IJupyterWidgetRegistry],\n  autoStart: true,\n  activate: (_: Application<Widget>, registry: IJupyterWidgetRegistry) => {\n    const reg = {\n      name: NS,\n      version: VERSION,\n      exports: async () => {\n        const { initialize } = await import('./render');\n        await initialize();\n        return (await import('./widget')) as ExportMap;\n      },\n    };\n    registry.registerWidget(reg);\n  },\n};\n\nexport default [markdownPlugin, widgetPlugin];\n","import * as _PACKAGE from '../package.json';\n\nexport const PACKAGE = _PACKAGE;\nexport const NS = PACKAGE.name;\nexport const VERSION = PACKAGE.version;\nexport const PLUGIN_ID = `${NS}:plugin`;\n\nexport const LANGS = ['pikchr', '{pikchr}'];\nexport const RE_VIEWBOX = /viewBox=\"([\\d\\.]+)\\s+([\\d\\.]+)\\s+([\\d\\.]+)\\s+([\\d\\.]+)\"/;\nexport const JP_UI_FONT_FAMILY = '--jp-content-font-family';\n\nexport namespace CSS {\n  export const WIDGET = 'jp-PikchrWidget';\n  export const ICON = 'jp-PikchrIcon';\n  export const DOCUMENT = 'jp-PikchrDocument';\n}\n\n/* Include PIKCHR_DARK_MODE among the mFlag bits to invert colors. */\nexport const PIKCHR_DARK_MODE = 0x0002;\n\nexport type TPikchrFormat = 'img' | 'svg';\n\nexport const NAME = 'Pikchr';\n"],"names":["_PLUGIN","markdownPlugin","simpleMarkdownItPlugin","NS","id","title","description","documentationUrls","plugin","pikchr","examples","async","initialize","renderPikchrMarkdownIt","widgetPlugin","requires","IJupyterWidgetRegistry","autoStart","activate","_","registry","reg","name","version","exports","registerWidget","PACKAGE","VERSION","PLUGIN_ID","LANGS","RE_VIEWBOX","JP_UI_FONT_FAMILY","CSS","WIDGET","ICON","DOCUMENT","PIKCHR_DARK_MODE","NAME"],"sourceRoot":""}