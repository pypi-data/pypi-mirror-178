# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bastionlab.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x62\x61stionlab.proto\x12\nbastionlab\"&\n\x10ReferenceRequest\x12\x12\n\nidentifier\x18\x01 \x01(\t\"7\n\x11ReferenceResponse\x12\x12\n\nidentifier\x18\x01 \x01(\t\x12\x0e\n\x06header\x18\x02 \x01(\t\"<\n\rReferenceList\x12+\n\x04list\x18\x01 \x03(\x0b\x32\x1d.bastionlab.ReferenceResponse\";\n\tSendChunk\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x0e\n\x06policy\x18\x02 \x01(\t\x12\x10\n\x08metadata\x18\x03 \x01(\t\"+\n\nFetchChunk\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x0f\n\x07pending\x18\x02 \x01(\t\"\x1f\n\x05Query\x12\x16\n\x0e\x63omposite_plan\x18\x01 \x01(\t\"\x07\n\x05\x45mpty\"\"\n\x11\x43hallengeResponse\x12\r\n\x05value\x18\x01 \x01(\x0c\"\xab\x01\n\nClientInfo\x12\x0b\n\x03uid\x18\x01 \x01(\t\x12\x15\n\rplatform_name\x18\x02 \x01(\t\x12\x15\n\rplatform_arch\x18\x03 \x01(\t\x12\x18\n\x10platform_version\x18\x04 \x01(\t\x12\x18\n\x10platform_release\x18\x05 \x01(\t\x12\x12\n\nuser_agent\x18\x06 \x01(\t\x12\x1a\n\x12user_agent_version\x18\x07 \x01(\t\"\x1c\n\x0bSessionInfo\x12\r\n\x05token\x18\x01 \x01(\x0c\x32\xbc\x04\n\nBastionLab\x12I\n\rSendDataFrame\x12\x15.bastionlab.SendChunk\x1a\x1d.bastionlab.ReferenceResponse\"\x00(\x01\x12>\n\x08RunQuery\x12\x11.bastionlab.Query\x1a\x1d.bastionlab.ReferenceResponse\"\x00\x12\x42\n\x0cGetChallenge\x12\x11.bastionlab.Empty\x1a\x1d.bastionlab.ChallengeResponse\"\x00\x12J\n\x0e\x46\x65tchDataFrame\x12\x1c.bastionlab.ReferenceRequest\x1a\x16.bastionlab.FetchChunk\"\x00\x30\x01\x12@\n\x0eListDataFrames\x12\x11.bastionlab.Empty\x1a\x19.bastionlab.ReferenceList\"\x00\x12S\n\x12GetDataFrameHeader\x12\x1c.bastionlab.ReferenceRequest\x1a\x1d.bastionlab.ReferenceResponse\"\x00\x12\x42\n\rCreateSession\x12\x16.bastionlab.ClientInfo\x1a\x17.bastionlab.SessionInfo\"\x00\x12\x38\n\x0eRefreshSession\x12\x11.bastionlab.Empty\x1a\x11.bastionlab.Empty\"\x00\x62\x06proto3')



_REFERENCEREQUEST = DESCRIPTOR.message_types_by_name['ReferenceRequest']
_REFERENCERESPONSE = DESCRIPTOR.message_types_by_name['ReferenceResponse']
_REFERENCELIST = DESCRIPTOR.message_types_by_name['ReferenceList']
_SENDCHUNK = DESCRIPTOR.message_types_by_name['SendChunk']
_FETCHCHUNK = DESCRIPTOR.message_types_by_name['FetchChunk']
_QUERY = DESCRIPTOR.message_types_by_name['Query']
_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_CHALLENGERESPONSE = DESCRIPTOR.message_types_by_name['ChallengeResponse']
_CLIENTINFO = DESCRIPTOR.message_types_by_name['ClientInfo']
_SESSIONINFO = DESCRIPTOR.message_types_by_name['SessionInfo']
ReferenceRequest = _reflection.GeneratedProtocolMessageType('ReferenceRequest', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCEREQUEST,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.ReferenceRequest)
  })
_sym_db.RegisterMessage(ReferenceRequest)

ReferenceResponse = _reflection.GeneratedProtocolMessageType('ReferenceResponse', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCERESPONSE,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.ReferenceResponse)
  })
_sym_db.RegisterMessage(ReferenceResponse)

ReferenceList = _reflection.GeneratedProtocolMessageType('ReferenceList', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCELIST,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.ReferenceList)
  })
_sym_db.RegisterMessage(ReferenceList)

SendChunk = _reflection.GeneratedProtocolMessageType('SendChunk', (_message.Message,), {
  'DESCRIPTOR' : _SENDCHUNK,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.SendChunk)
  })
_sym_db.RegisterMessage(SendChunk)

FetchChunk = _reflection.GeneratedProtocolMessageType('FetchChunk', (_message.Message,), {
  'DESCRIPTOR' : _FETCHCHUNK,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.FetchChunk)
  })
_sym_db.RegisterMessage(FetchChunk)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
  'DESCRIPTOR' : _QUERY,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.Query)
  })
_sym_db.RegisterMessage(Query)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.Empty)
  })
_sym_db.RegisterMessage(Empty)

ChallengeResponse = _reflection.GeneratedProtocolMessageType('ChallengeResponse', (_message.Message,), {
  'DESCRIPTOR' : _CHALLENGERESPONSE,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.ChallengeResponse)
  })
_sym_db.RegisterMessage(ChallengeResponse)

ClientInfo = _reflection.GeneratedProtocolMessageType('ClientInfo', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTINFO,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.ClientInfo)
  })
_sym_db.RegisterMessage(ClientInfo)

SessionInfo = _reflection.GeneratedProtocolMessageType('SessionInfo', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONINFO,
  '__module__' : 'bastionlab_pb2'
  # @@protoc_insertion_point(class_scope:bastionlab.SessionInfo)
  })
_sym_db.RegisterMessage(SessionInfo)

_BASTIONLAB = DESCRIPTOR.services_by_name['BastionLab']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REFERENCEREQUEST._serialized_start=32
  _REFERENCEREQUEST._serialized_end=70
  _REFERENCERESPONSE._serialized_start=72
  _REFERENCERESPONSE._serialized_end=127
  _REFERENCELIST._serialized_start=129
  _REFERENCELIST._serialized_end=189
  _SENDCHUNK._serialized_start=191
  _SENDCHUNK._serialized_end=250
  _FETCHCHUNK._serialized_start=252
  _FETCHCHUNK._serialized_end=295
  _QUERY._serialized_start=297
  _QUERY._serialized_end=328
  _EMPTY._serialized_start=330
  _EMPTY._serialized_end=337
  _CHALLENGERESPONSE._serialized_start=339
  _CHALLENGERESPONSE._serialized_end=373
  _CLIENTINFO._serialized_start=376
  _CLIENTINFO._serialized_end=547
  _SESSIONINFO._serialized_start=549
  _SESSIONINFO._serialized_end=577
  _BASTIONLAB._serialized_start=580
  _BASTIONLAB._serialized_end=1152
# @@protoc_insertion_point(module_scope)
