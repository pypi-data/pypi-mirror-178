[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "aiida_testing"

[project]
name = "aiida-testing-dev"
dynamic = ["version", "description"]
authors = [
    {name = "Dominik Gresch"},
    {name = "Leopold Talirz"},
    {name = "Jens Bröder"},
    {name = "Philipp Rüßmann"},
    {name = "AiiDA team"},
]
license = {file = "LICENSE.txt"}
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Plugins",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Physics",
    "Framework :: AiiDA",
    "Framework :: Pytest",
]
keywords = [
    "AiiDA",
    "testing",
    "pytest",
    "mock",
    "cache",
]
urls = {Homepage = "https://aiida-testing.readthedocs.io/"}
requires-python = ">=3.7"
dependencies = [
    "aiida-core>=1.0.0,<3.0.0",
    "pytest>=3.6",
    "voluptuous~=0.12",
]

[project.optional-dependencies]
docs = ["sphinx", "sphinx-rtd-theme"]
testing = [
    "pgtest~=1.3.1",
    "aiida-diff",
    "pytest-datadir",
]
pre_commit = [
    "pre-commit",
    "pylint~=2.12.2",
    "mypy==0.930",
    "types-PyYAML",
]
dev = [
    "sphinx",
    "sphinx-rtd-theme",
    "pgtest~=1.3.1",
    "aiida-diff",
    "pytest-datadir",
    "pre-commit",
    "pylint~=2.12.2",
    "mypy==0.930",
]

[project.scripts]
aiida-mock-code = "aiida_testing.mock_code._cli:run"

[project.entry-points."pytest11"]
aiida_mock_code = "aiida_testing.mock_code"
aiida_export_cache = "aiida_testing.export_cache"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    "duplicate-code",
]

[tool.pytest.ini_options]
filterwarnings = []

[tool.yapf]
based_on_style = "pep8"
coalesce_brackets = true
dedent_closing_brackets = true
column_limit = 100

[tool.mypy]
show_error_codes = true
# Strictness settings
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_decorators = true
no_implicit_optional = true
no_strict_optional = false
# Enable all warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
allow_untyped_globals = false
strict_equality = true

[[tool.mypy.overrides]]
module = ["voluptuous.*"]
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38

[testenv]
usedevelop = true

[testenv:py{37,38,39,310,311}]
extras = testing
commands = pytest {posargs}

[testenv:pre-commit-py{38,39,310,311}]
extras = 
    pre_commit
commands = pre-commit {posargs:run --all}
"""
