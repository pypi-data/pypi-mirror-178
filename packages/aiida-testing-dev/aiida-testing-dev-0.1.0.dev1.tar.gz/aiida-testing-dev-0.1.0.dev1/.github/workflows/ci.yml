name: ci

on: [push, pull_request]

jobs:

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        editable_install_option: ['-e', '']
        include:
        #Test for aiida-core 1.X (since aiida-core 2.X does not support python 3.7)
        - python-version: '3.7'
          editable_install_option: '-e'

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_aiida
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install ${{ matrix.editable_install_option }} .[testing]
        reentry scan -r aiida || true

    - name: Run test suite
      env:
        # show timings of tests
        PYTEST_ADDOPTS: "--durations=0"
      run: |
        aiida-mock-code || true
        cd tests; pytest

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[docs]
        reentry scan -r aiida || true
    - name: Build docs
      run: cd docs && make

  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[pre_commit]
        reentry scan -r aiida || true
    - name: Run pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
